{"version":3,"sources":["_common/_module.js","_common/filters/numberfixedlen.js","_common/filters/fromnow.js","_common/filters/fileicon.js","_common/filters/bytes.js","_common/helpers/route.helper.js","_common/helpers/modal.helper.js","_common/helpers/config.helper.js","_common/directives/ngprint.js","_common/directives/errsrc.js","_common/configs/permission.config.js","app.min.js","_common/configs/location.config.js","_common/configs/http.config.js","_common/configs/google-analytics.config.js","settings/_module.js","settings/overview/controller.js","plists/_module.js","plists/overview/controller.js","plists/form/controller.js","lotteries/_module.js","lotteries/overview/controller.js","lotteries/lottery/controller.js","lotteries/init/controller.js","auth/_module.js","auth/login/controller.js","_common/routes.js","settings/service.js","settings/routes.js","plists/service.js","plists/routes.js","plists/modals.js","lotteries/service.js","lotteries/routes.js","lotteries/modals.js","auth/routes.js","auth/interceptor.js","auth/constants.js","app.js","run.js","bootstrap.js"],"names":["angular","module","numberFixedLen","a","b","slice","filter","$inject","fromNow","date","moment","fileicon","_icons","application/pdf","application/powerpoint","application/x-msword","application/x-msexcel","application/x-mspowerpoint","audio/x-mpeg-3","image/gif","image/png","image/tiff","image/jpeg","video/avi","video/mpeg","video/msvideo","video/quicktime","application/zip","bytes","precision","isNaN","parseFloat","isFinite","units","number","Math","floor","log","pow","toFixed","routerHelperProvider","$locationProvider","$stateProvider","$urlRouterProvider","RouterHelper","$state","configureStates","states","otherwisePath","forEach","state","config","controllerAs","extend","views","_","each","item","hasOtherwise","otherwise","getStates","get","service","this","$get","provider","modalHelperProvider","modalHelper","$uibModal","$q","toaster","configureModals","modals","_ret","modal","obj","ModalResultComplete","response","ModalResultFailed","reason","reject","resolve","ModalParams","open","result","then","configHelperProvider","ConfigHelper","notifyConfig","configName","message","console","ngPrint","link","scope","element","attrs","on","elemToPrint","document","getElementById","printElementId","printElement","beforePrint","afterPrint","printSection","innerHTML","window","matchMedia","mediaQueryList","addListener","mql","matches","onbeforeprint","onafterprint","elem","domClone","cloneNode","appendChild","print","createElement","id","body","restrict","directive","errSrc","ngSrc","$set","bind","remove","src","PermissionsConfig","configHelper","Permission","User","defineRole","isAuthenticated","run","LocationConfig","html5Mode","$httpProvider","defaults","withCredentials","AnalyticsConfig","AnalyticsProvider","GoogleTrackCode","setAccount","trackUrlParams","ignoreFirstPageLoad","setPageEvent","SettingsController","SettingsService","activate","controller","PlistsController","PlistsService","PlistsModals","vm","LoadPlists","loading","GetPlists","plists","Plists","AddPlist","PlistForm","ViewPlist","ID","DeletePlist","PlistFormController","$modalInstance","GetPlist","data","Plist","Participants","length","AddParticipants","i","push","RemoveParticipant","index","splice","Save","SavePlist","close","LotteriesController","LotteriesService","LotteriesModals","LoadLotteries","HasPages","FetchPrevious","Previous","PreviousPage","FetchNext","Next","NextPage","GetLotteries","Lotteries","AddLottery","LotteryInit","go","DeleteLottery","lottery","LotteryController","$stateParams","LoadLottery","GetLottery","Lottery","LotteryInitController","ParticipantsService","LoadPLists","GetPLists","PLists","SaveLottery","resp","Name","random","AuthLoginController","LoginMessages","ref","Alert","UNAUTHORIZED","SIGNOUT","REGISTERED","SignIn","login","credentials","$promise","rejection","error","toUpperCase","RoutesConfig","routerHelper","_states","map","_state","abstract","templateUrl","$scope","getCurrent","u","username","$resource","GetSettings","params","APP","Service","chain","rows","value","sortBy","DrewAt","reverse","GetSetting","SaveSetting","Setting","Type","save","DeleteSetting","_deleted","DeletedAt","Date","factory","appRun","url","permissions","except","redirectTo","find","include","findById","plist","CreatedAt","participants","Email","updateOrCreate","deleteById","getModals","size","backdrop","_offset","_limit","_total","limit","skip","total_rows","shuffle","template","only","logout","localStorage","clear","AuthInterceptor","$injector","$cookies","responseError","status","IsSignIn","AuthInterceptorConfig","interceptors","constant","ANAUTHORIZED","Message","Details","AUTHERROR","UNAVAILABLE","$rootScope","$on","evt","to","preventDefault","Project","Version","ready","bootstrap"],"mappings":"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","file":"app.min.js","sourcesContent":["(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common', [\r\n      'lbServices',\r\n      'angular-google-analytics',\r\n      'ngResource',\r\n      'ngSanitize',\r\n      'ngCookies',\r\n      'permission',\r\n      'toaster',\r\n      'ui.bootstrap',\r\n      'ui.router',\r\n    ]);\r\n})();\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('numberFixedLen', numberFixedLen)\r\n\r\n  numberFixedLen.$inject = []\r\n\r\n  function numberFixedLen() {\r\n    return function(a, b) {\r\n      return (1e4 + a + \"\").slice(-b)\r\n    }\r\n  }\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('fromNow', fromNow)\r\n\r\n  fromNow.$inject = []\r\n\r\n  function fromNow() {\r\n    return function(date) {\r\n      return moment(date).fromNow();\r\n    }\r\n  }\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('fileicon', fileicon)\r\n\r\n  fileicon.$inject = []\r\n\r\n  function fileicon() {\r\n    var _icons = {\r\n      \"application/pdf\": \"fa-file-pdf-o\",\r\n      \"application/powerpoint\": \"fa-file-powerpoint-o\",\r\n      \"application/x-msword\": \"fa-file-word-o\",\r\n      \"application/x-msexcel\": \"fa-file-excel-o\",\r\n      \"application/x-mspowerpoint\": \"fa-file-powerpoint-o\",\r\n      \"audio/x-mpeg-3\": \"fa-file-audio-o\",\r\n      \"image/gif\": \"fa-file-image-o\",\r\n      \"image/png\": \"fa-file-image-o\",\r\n      \"image/tiff\": \"fa-file-image-o\",\r\n      \"image/jpeg\": \"fa-file-image-o\",\r\n      \"video/avi\": \"fa-file-video-o\",\r\n      \"video/mpeg\": \"fa-file-video-o\",\r\n      \"video/msvideo\": \"fa-file-video-o\",\r\n      \"video/quicktime\": \"fa-file-video-o\",\r\n      \"application/zip\": \"fa-file-zip-o\"\r\n    };\r\n    return function(a) {\r\n      return _icons[a] || \"fa-file-o\";\r\n    }\r\n  }\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('bytes', bytes)\r\n\r\n  bytes.$inject = []\r\n\r\n  function bytes() {\r\n    return function(bytes, precision) {\r\n      if (isNaN(parseFloat(bytes)) || !isFinite(bytes)) return '-';\r\n      if (typeof precision === 'undefined') precision = 1;\r\n      var units = ['bytes', 'kB', 'MB', 'GB', 'TB', 'PB'],\r\n        number = Math.floor(Math.log(bytes) / Math.log(1024));\r\n      return (bytes / Math.pow(1024, Math.floor(number))).toFixed(precision) + ' ' + units[number];\r\n    }\r\n  }\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('routerHelper', routerHelperProvider);\r\n\r\n  routerHelperProvider.$inject = ['$locationProvider', '$stateProvider', '$urlRouterProvider'];\r\n  /* @ngInject */\r\n  function routerHelperProvider($locationProvider, $stateProvider, $urlRouterProvider) {\r\n    /* jshint validthis:true */\r\n    this.$get = RouterHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    RouterHelper.$inject = ['$state'];\r\n\r\n    function RouterHelper($state) {\r\n      var hasOtherwise = false;\r\n\r\n      var service = {\r\n        configureStates: configureStates,\r\n        getStates: getStates\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureStates(states, otherwisePath) {\r\n        states.forEach(function(state) {\r\n\r\n          var config = {\r\n            controllerAs: 'vm',\r\n          };\r\n\r\n          angular.extend(config, state.config);\r\n\r\n          if (config.views) {\r\n            _.each(config.views, function(item) {\r\n              item.controllerAs = 'vm';\r\n            });\r\n          }\r\n\r\n          $stateProvider.state(state.state, config);\r\n        });\r\n        if (otherwisePath && !hasOtherwise) {\r\n          hasOtherwise = true;\r\n          $urlRouterProvider.otherwise(otherwisePath);\r\n        }\r\n      }\r\n\r\n      function getStates() {\r\n        return $state.get();\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('modalHelper', modalHelperProvider);\r\n\r\n  modalHelperProvider.$inject = [];\r\n  /* @ngInject */\r\n  function modalHelperProvider() {\r\n    /* jshint validthis:true */\r\n    this.$get = modalHelper;\r\n\r\n    modalHelper.$inject = ['$uibModal', '$q', 'toaster'];\r\n\r\n    function modalHelper($uibModal, $q, toaster) {\r\n\r\n      var service = {\r\n        configureModals: configureModals\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureModals(modals) {\r\n        var _ret = {};\r\n        angular.forEach(modals, function(modal) {\r\n          _ret[modal.modal] = function(obj) {\r\n            var config = {\r\n              controllerAs: 'vm',\r\n              resolve: {\r\n                ModalParams: function() {\r\n                  return obj || {};\r\n                }\r\n              }\r\n            };\r\n            angular.extend(config, modal.config);\r\n\r\n            return $uibModal\r\n              .open(config)\r\n              .result\r\n              .then(ModalResultComplete)\r\n              .catch(ModalResultFailed);\r\n\r\n            function ModalResultComplete(response) {\r\n              return response;\r\n            }\r\n\r\n            function ModalResultFailed(reason) {\r\n              if (reason && reason !== \"backdrop click\") {\r\n                return $q.reject();\r\n              }\r\n            }\r\n          };\r\n        });\r\n        return _ret;\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('configHelper', configHelperProvider);\r\n\r\n  configHelperProvider.$inject = [];\r\n\r\n  function configHelperProvider() {\r\n    /* jshint validthis:true */\r\n    this.$get = ConfigHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    ConfigHelper.$inject = [];\r\n\r\n    function ConfigHelper() {\r\n\r\n      var service = {\r\n        notifyConfig: notifyConfig\r\n      };\r\n\r\n      return service;\r\n\r\n      //function notifyConfig() {}\r\n      function notifyConfig(configName, message) {\r\n        message = message || {};\r\n        console.log(\"%c CONFIG - \" + configName + \" \", 'background: #9C27B0; color: #FFF', message);\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngPrint', ngPrint)\r\n\r\n  ngPrint.$inject = []\r\n\r\n  function ngPrint() {\r\n    var printSection = document.getElementById('printSection');\r\n    // if there is no printing section, create one\r\n    if (!printSection) {\r\n      printSection = document.createElement('div');\r\n      printSection.id = 'printSection';\r\n      document.body.appendChild(printSection);\r\n    }\r\n\r\n    function link(scope, element, attrs) {\r\n\r\n      element.on('click', function() {\r\n        var elemToPrint = document.getElementById(attrs.printElementId);\r\n        if (elemToPrint) {\r\n          printElement(elemToPrint);\r\n        }\r\n      });\r\n\r\n      var beforePrint = function() {\r\n        console.log('Functionality to run before printing.');\r\n      };\r\n      var afterPrint = function() {\r\n        console.log('Functionality to run after printing');\r\n          printSection.innerHTML = '';\r\n      };\r\n\r\n      if (window.matchMedia) {\r\n        var mediaQueryList = window.matchMedia('print');\r\n        mediaQueryList.addListener(function(mql) {\r\n          if (mql.matches) {\r\n            beforePrint();\r\n          } else {\r\n            afterPrint();\r\n          }\r\n        });\r\n      }\r\n\r\n      window.onbeforeprint = beforePrint;\r\n      window.onafterprint = afterPrint;\r\n\r\n    }\r\n\r\n    function printElement(elem) {\r\n      // clones the element you want to print\r\n      var domClone = elem.cloneNode(true);\r\n      printSection.appendChild(domClone);\r\n      window.print();\r\n    }\r\n    return {\r\n      link: link,\r\n      restrict: 'A'\r\n    };\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('errSrc', errSrc)\r\n\r\n  errSrc.$inject = []\r\n\r\n  function errSrc() {\r\n    return {\r\n      link: function(scope, element, attrs) {\r\n        if(!attrs.ngSrc){\r\n          attrs.$set('src', attrs.errSrc);\r\n        }\r\n\r\n        element.bind('error', function() {\r\n\r\n          if (attrs.errSrc == \"REMOVE\") {\r\n            element.remove();\r\n            return;\r\n          }\r\n          if (attrs.src != attrs.errSrc) {\r\n            attrs.$set('src', attrs.errSrc);\r\n          }\r\n        });\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .run(PermissionsConfig);\r\n\r\n  /* @ngInject */\r\n  function PermissionsConfig(configHelper, Permission, User) {\r\n\r\n    Permission.defineRole('Anonymous', function() {\r\n      return !User.isAuthenticated();\r\n    });\r\n\r\n    configHelper.notifyConfig(\"Permissions\", \"Loaded\");\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common', [\r\n      'lbServices',\r\n      'angular-google-analytics',\r\n      'ngResource',\r\n      'ngSanitize',\r\n      'ngCookies',\r\n      'permission',\r\n      'toaster',\r\n      'ui.bootstrap',\r\n      'ui.router',\r\n    ]);\r\n})();\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('numberFixedLen', numberFixedLen)\r\n\r\n  numberFixedLen.$inject = []\r\n\r\n  function numberFixedLen() {\r\n    return function(a, b) {\r\n      return (1e4 + a + \"\").slice(-b)\r\n    }\r\n  }\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('fromNow', fromNow)\r\n\r\n  fromNow.$inject = []\r\n\r\n  function fromNow() {\r\n    return function(date) {\r\n      return moment(date).fromNow();\r\n    }\r\n  }\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('fileicon', fileicon)\r\n\r\n  fileicon.$inject = []\r\n\r\n  function fileicon() {\r\n    var _icons = {\r\n      \"application/pdf\": \"fa-file-pdf-o\",\r\n      \"application/powerpoint\": \"fa-file-powerpoint-o\",\r\n      \"application/x-msword\": \"fa-file-word-o\",\r\n      \"application/x-msexcel\": \"fa-file-excel-o\",\r\n      \"application/x-mspowerpoint\": \"fa-file-powerpoint-o\",\r\n      \"audio/x-mpeg-3\": \"fa-file-audio-o\",\r\n      \"image/gif\": \"fa-file-image-o\",\r\n      \"image/png\": \"fa-file-image-o\",\r\n      \"image/tiff\": \"fa-file-image-o\",\r\n      \"image/jpeg\": \"fa-file-image-o\",\r\n      \"video/avi\": \"fa-file-video-o\",\r\n      \"video/mpeg\": \"fa-file-video-o\",\r\n      \"video/msvideo\": \"fa-file-video-o\",\r\n      \"video/quicktime\": \"fa-file-video-o\",\r\n      \"application/zip\": \"fa-file-zip-o\"\r\n    };\r\n    return function(a) {\r\n      return _icons[a] || \"fa-file-o\";\r\n    }\r\n  }\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('bytes', bytes)\r\n\r\n  bytes.$inject = []\r\n\r\n  function bytes() {\r\n    return function(bytes, precision) {\r\n      if (isNaN(parseFloat(bytes)) || !isFinite(bytes)) return '-';\r\n      if (typeof precision === 'undefined') precision = 1;\r\n      var units = ['bytes', 'kB', 'MB', 'GB', 'TB', 'PB'],\r\n        number = Math.floor(Math.log(bytes) / Math.log(1024));\r\n      return (bytes / Math.pow(1024, Math.floor(number))).toFixed(precision) + ' ' + units[number];\r\n    }\r\n  }\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('routerHelper', routerHelperProvider);\r\n\r\n  routerHelperProvider.$inject = ['$locationProvider', '$stateProvider', '$urlRouterProvider'];\r\n  /* @ngInject */\r\n  function routerHelperProvider($locationProvider, $stateProvider, $urlRouterProvider) {\r\n    /* jshint validthis:true */\r\n    this.$get = RouterHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    RouterHelper.$inject = ['$state'];\r\n\r\n    function RouterHelper($state) {\r\n      var hasOtherwise = false;\r\n\r\n      var service = {\r\n        configureStates: configureStates,\r\n        getStates: getStates\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureStates(states, otherwisePath) {\r\n        states.forEach(function(state) {\r\n\r\n          var config = {\r\n            controllerAs: 'vm',\r\n          };\r\n\r\n          angular.extend(config, state.config);\r\n\r\n          if (config.views) {\r\n            _.each(config.views, function(item) {\r\n              item.controllerAs = 'vm';\r\n            });\r\n          }\r\n\r\n          $stateProvider.state(state.state, config);\r\n        });\r\n        if (otherwisePath && !hasOtherwise) {\r\n          hasOtherwise = true;\r\n          $urlRouterProvider.otherwise(otherwisePath);\r\n        }\r\n      }\r\n\r\n      function getStates() {\r\n        return $state.get();\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('modalHelper', modalHelperProvider);\r\n\r\n  modalHelperProvider.$inject = [];\r\n  /* @ngInject */\r\n  function modalHelperProvider() {\r\n    /* jshint validthis:true */\r\n    this.$get = modalHelper;\r\n\r\n    modalHelper.$inject = ['$uibModal', '$q', 'toaster'];\r\n\r\n    function modalHelper($uibModal, $q, toaster) {\r\n\r\n      var service = {\r\n        configureModals: configureModals\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureModals(modals) {\r\n        var _ret = {};\r\n        angular.forEach(modals, function(modal) {\r\n          _ret[modal.modal] = function(obj) {\r\n            var config = {\r\n              controllerAs: 'vm',\r\n              resolve: {\r\n                ModalParams: function() {\r\n                  return obj || {};\r\n                }\r\n              }\r\n            };\r\n            angular.extend(config, modal.config);\r\n\r\n            return $uibModal\r\n              .open(config)\r\n              .result\r\n              .then(ModalResultComplete)\r\n              .catch(ModalResultFailed);\r\n\r\n            function ModalResultComplete(response) {\r\n              return response;\r\n            }\r\n\r\n            function ModalResultFailed(reason) {\r\n              if (reason && reason !== \"backdrop click\") {\r\n                return $q.reject();\r\n              }\r\n            }\r\n          };\r\n        });\r\n        return _ret;\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('configHelper', configHelperProvider);\r\n\r\n  configHelperProvider.$inject = [];\r\n\r\n  function configHelperProvider() {\r\n    /* jshint validthis:true */\r\n    this.$get = ConfigHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    ConfigHelper.$inject = [];\r\n\r\n    function ConfigHelper() {\r\n\r\n      var service = {\r\n        notifyConfig: notifyConfig\r\n      };\r\n\r\n      return service;\r\n\r\n      //function notifyConfig() {}\r\n      function notifyConfig(configName, message) {\r\n        message = message || {};\r\n        console.log(\"%c CONFIG - \" + configName + \" \", 'background: #9C27B0; color: #FFF', message);\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngPrint', ngPrint)\r\n\r\n  ngPrint.$inject = []\r\n\r\n  function ngPrint() {\r\n    var printSection = document.getElementById('printSection');\r\n    // if there is no printing section, create one\r\n    if (!printSection) {\r\n      printSection = document.createElement('div');\r\n      printSection.id = 'printSection';\r\n      document.body.appendChild(printSection);\r\n    }\r\n\r\n    function link(scope, element, attrs) {\r\n\r\n      element.on('click', function() {\r\n        var elemToPrint = document.getElementById(attrs.printElementId);\r\n        if (elemToPrint) {\r\n          printElement(elemToPrint);\r\n        }\r\n      });\r\n\r\n      var beforePrint = function() {\r\n        console.log('Functionality to run before printing.');\r\n      };\r\n      var afterPrint = function() {\r\n        console.log('Functionality to run after printing');\r\n          printSection.innerHTML = '';\r\n      };\r\n\r\n      if (window.matchMedia) {\r\n        var mediaQueryList = window.matchMedia('print');\r\n        mediaQueryList.addListener(function(mql) {\r\n          if (mql.matches) {\r\n            beforePrint();\r\n          } else {\r\n            afterPrint();\r\n          }\r\n        });\r\n      }\r\n\r\n      window.onbeforeprint = beforePrint;\r\n      window.onafterprint = afterPrint;\r\n\r\n    }\r\n\r\n    function printElement(elem) {\r\n      // clones the element you want to print\r\n      var domClone = elem.cloneNode(true);\r\n      printSection.appendChild(domClone);\r\n      window.print();\r\n    }\r\n    return {\r\n      link: link,\r\n      restrict: 'A'\r\n    };\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('errSrc', errSrc)\r\n\r\n  errSrc.$inject = []\r\n\r\n  function errSrc() {\r\n    return {\r\n      link: function(scope, element, attrs) {\r\n        if(!attrs.ngSrc){\r\n          attrs.$set('src', attrs.errSrc);\r\n        }\r\n\r\n        element.bind('error', function() {\r\n\r\n          if (attrs.errSrc == \"REMOVE\") {\r\n            element.remove();\r\n            return;\r\n          }\r\n          if (attrs.src != attrs.errSrc) {\r\n            attrs.$set('src', attrs.errSrc);\r\n          }\r\n        });\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .run(PermissionsConfig);\r\n\r\n  /* @ngInject */\r\n  function PermissionsConfig(configHelper, Permission, User) {\r\n\r\n    Permission.defineRole('Anonymous', function() {\r\n      return !User.isAuthenticated();\r\n    });\r\n\r\n    configHelper.notifyConfig(\"Permissions\", \"Loaded\");\r\n\r\n  }\r\n  PermissionsConfig.$inject = [\"configHelper\", \"Permission\", \"User\"];\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig(configHelperProvider, $locationProvider) {\r\n    $locationProvider.html5Mode(true);\r\n\r\n    configHelperProvider.$get().notifyConfig(\"Location HTML5\", true);\r\n  }\r\n  LocationConfig.$inject = [\"configHelperProvider\", \"$locationProvider\"];\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig($httpProvider) {\r\n    $httpProvider.defaults.withCredentials = true;\r\n  }\r\n  LocationConfig.$inject = [\"$httpProvider\"];\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .config(AnalyticsConfig);\r\n\r\n  /* @ngInject */\r\n  function AnalyticsConfig(configHelperProvider, AnalyticsProvider) {\r\n\r\n    var GoogleTrackCode = \"UA-4623228-21\";\r\n\r\n    AnalyticsProvider.setAccount(GoogleTrackCode);\r\n\r\n    AnalyticsProvider.trackUrlParams(true);\r\n    AnalyticsProvider.ignoreFirstPageLoad(true);\r\n    AnalyticsProvider.setPageEvent('$stateChangeSuccess');\r\n\r\n    configHelperProvider.$get().notifyConfig(\"Google Analytics\", GoogleTrackCode);\r\n\r\n  }\r\n  AnalyticsConfig.$inject = [\"configHelperProvider\", \"AnalyticsProvider\"];\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings', []);\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .controller('SettingsController', SettingsController);\r\n\r\n  /* @ngInject */\r\n  function SettingsController(SettingsService, toaster) {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n    }\r\n\r\n\r\n  }\r\n  SettingsController.$inject = [\"SettingsService\", \"toaster\"];\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists', []);\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .controller('PlistsController', PlistsController);\r\n\r\n  /* @ngInject */\r\n  function PlistsController(PlistsService, PlistsModals) {\r\n\r\n    var vm = this;\r\n\r\n    vm.AddPlist = AddPlist;\r\n    vm.ViewPlist = ViewPlist;\r\n    vm.DeletePlist = DeletePlist;\r\n    vm.LoadPlists = LoadPlists;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadPlists();\r\n    }\r\n\r\n    function LoadPlists() {\r\n      vm.loading = true;\r\n      PlistsService\r\n        .GetPlists()\r\n        .then(function(plists) {\r\n          vm.Plists = plists;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function AddPlist() {\r\n      PlistsModals\r\n        .PlistForm()\r\n        .then(function() {\r\n          vm.LoadPlists();\r\n        });\r\n    }\r\n\r\n    function ViewPlist(id) {\r\n      PlistsModals\r\n        .PlistForm({\r\n          ID: id\r\n        })\r\n        .then(function() {\r\n          vm.LoadPlists();\r\n        });\r\n    }\r\n\r\n    function DeletePlist(id) {\r\n      PlistsService\r\n        .DeletePlist(id)\r\n        .then(function() {\r\n          vm.LoadPlists();\r\n        });\r\n    }\r\n\r\n  }\r\n  PlistsController.$inject = [\"PlistsService\", \"PlistsModals\"];\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .controller(\"PlistFormController\", PlistFormController);\r\n\r\n  /* @ngInject */\r\n  function PlistFormController($modalInstance, ModalParams, PlistsService) {\r\n    var vm = this;\r\n\r\n    vm.Plist = {\r\n      Participants: [],\r\n    };\r\n\r\n    vm.AddParticipants = AddParticipants;\r\n    vm.RemoveParticipant = RemoveParticipant;\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      if (ModalParams.ID) {\r\n        vm.loading = true;\r\n        PlistsService\r\n          .GetPlist(ModalParams.ID)\r\n          .then(function(data) {\r\n            vm.Plist = data;\r\n            if (vm.Plist.Participants.length === 0) {\r\n              vm.AddParticipants();\r\n            }\r\n          })\r\n          .finally(function() {\r\n            vm.loading = false;\r\n          });\r\n      } else {\r\n        vm.AddParticipants();\r\n      }\r\n    }\r\n\r\n    function AddParticipants() {\r\n      for (var i = 0; i < 5; i++) {\r\n        vm.Plist.Participants.push({});\r\n      }\r\n    }\r\n\r\n    function RemoveParticipant(index) {\r\n      vm.Plist.Participants.splice(index, 1);\r\n    }\r\n\r\n    function Save() {\r\n      PlistsService\r\n        .SavePlist(vm.Plist)\r\n        .then(function() {\r\n          $modalInstance.close();\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n  PlistFormController.$inject = [\"$modalInstance\", \"ModalParams\", \"PlistsService\"];\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries', []);\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .controller('LotteriesController', LotteriesController);\r\n\r\n  /* @ngInject */\r\n  function LotteriesController(LotteriesService, LotteriesModals, toaster, $state) {\r\n    var vm = this;\r\n\r\n    vm.AddLottery = AddLottery;\r\n    vm.DeleteLottery = DeleteLottery;\r\n    vm.LoadLotteries = LoadLotteries;\r\n    vm.FetchPrevious = FetchPrevious;\r\n    vm.FetchNext = FetchNext;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadLotteries()\r\n        .then(function() {\r\n          vm.HasPages = LotteriesService.HasPages();\r\n        });\r\n    }\r\n\r\n    function FetchPrevious() {\r\n      if (vm.HasPages.Previous) {\r\n        LotteriesService.PreviousPage();\r\n        vm.HasPages = LotteriesService.HasPages();\r\n        vm.LoadLotteries();\r\n      }\r\n    }\r\n\r\n    function FetchNext() {\r\n      if (vm.HasPages.Next) {\r\n        LotteriesService.NextPage();\r\n        vm.HasPages = LotteriesService.HasPages();\r\n        vm.LoadLotteries();\r\n      }\r\n    }\r\n\r\n    function LoadLotteries() {\r\n      vm.loading = true;\r\n      return LotteriesService\r\n        .GetLotteries()\r\n        .then(function(data) {\r\n          vm.Lotteries = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function AddLottery() {\r\n      LotteriesModals\r\n        .LotteryInit()\r\n        .then(function(id) {\r\n          if (id) {\r\n            $state.go(\"app.lotteries.lottery\", {\r\n              ID: id\r\n            });\r\n          }\r\n        });\r\n    }\r\n\r\n    function DeleteLottery(lottery) {\r\n      LotteriesService\r\n        .DeleteLottery(lottery)\r\n        .then(function() {\r\n          vm.LoadLotteries();\r\n        });\r\n    }\r\n\r\n  }\r\n  LotteriesController.$inject = [\"LotteriesService\", \"LotteriesModals\", \"toaster\", \"$state\"];\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .controller('LotteryController', LotteryController);\r\n\r\n  /* @ngInject */\r\n  function LotteryController(LotteriesService, $stateParams, toaster) {\r\n    var vm = this;\r\n\r\n    vm.LoadLottery = LoadLottery;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadLottery();\r\n    }\r\n\r\n    function LoadLottery() {\r\n      vm.loading = true;\r\n      LotteriesService\r\n        .GetLottery($stateParams.ID)\r\n        .then(function(data) {\r\n          vm.Lottery = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n  }\r\n  LotteryController.$inject = [\"LotteriesService\", \"$stateParams\", \"toaster\"];\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .controller(\"LotteryInitController\", LotteryInitController);\r\n\r\n  /* @ngInject */\r\n  function LotteryInitController($modalInstance, ModalParams, LotteriesService,ParticipantsService) {\r\n    var vm = this;\r\n\r\n    vm.Lottery = {\r\n      Name: \"Lottery #\" + Math.floor((Math.random() * 99999) + 10000),\r\n    };\r\n\r\n    vm.LoadPLists = LoadPLists;\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadPLists();\r\n    }\r\n\r\n    function LoadPLists() {\r\n      vm.loading = true;\r\n      ParticipantsService\r\n        .GetPLists()\r\n        .then(function(data) {\r\n          vm.PLists = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function Save() {\r\n      LotteriesService\r\n        .SaveLottery(vm.Lottery)\r\n        .then(function(resp) {\r\n          $modalInstance.close(resp.id);\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n  LotteryInitController.$inject = [\"$modalInstance\", \"ModalParams\", \"LotteriesService\", \"ParticipantsService\"];\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth', [])\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .controller('AuthLoginController', AuthLoginController);\r\n\r\n  /* @ngInject */\r\n  function AuthLoginController($stateParams, $state, LoginMessages, User) {\r\n    var vm = this;\r\n\r\n    vm.loading = false;\r\n    vm.SignIn = SignIn;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n\r\n      switch ($stateParams.ref) {\r\n        case \"au\": //Unauthorized\r\n          vm.Alert = LoginMessages.UNAUTHORIZED;\r\n          break;\r\n        case \"so\": //Sign Out\r\n          vm.Alert = LoginMessages.SIGNOUT;\r\n          break;\r\n        case \"re\": //registered\r\n          vm.Alert = LoginMessages.REGISTERED;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n    }\r\n\r\n    function SignIn() {\r\n\r\n      vm.loading = true;\r\n      vm.Alert = false;\r\n\r\n      User\r\n        .login(vm.credentials)\r\n        .$promise\r\n        .then(function(response) {\r\n          $state.go(\"app.lotteries.overview\");\r\n        }, function(rejection) {\r\n          console.log(\"rejection\", rejection);\r\n          vm.Alert = LoginMessages[rejection.error.toUpperCase()];\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n        \r\n    }\r\n\r\n  }\r\n  AuthLoginController.$inject = [\"$stateParams\", \"$state\", \"LoginMessages\", \"User\"];\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .run(RoutesConfig);\r\n\r\n  RoutesConfig.$inject = ['configHelper', 'routerHelper'];\r\n\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n\r\n    var _states = getStates();\r\n    routerHelper.configureStates(_states, \"/\");\r\n\r\n    configHelper.notifyConfig(\"Basic Routes\", _.map(_states, function(_state) {\r\n      return _state.state;\r\n    }));\r\n\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app',\r\n      config: {\r\n        abstract: true,\r\n        templateUrl: 'src/_common/views/layout.html',\r\n        controller: function($scope, User) {\r\n          User.getCurrent()\r\n            .$promise\r\n            .then(function(u) {\r\n              $scope.username = u.username;\r\n            });\r\n        }\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsService', SettingsService);\r\n\r\n  /* @ngInject */\r\n  function SettingsService($resource) {\r\n\r\n    var service = {\r\n      GetSettings: GetSettings,\r\n      GetSetting: GetSetting,\r\n      SaveSetting: SaveSetting,\r\n      DeleteSetting: DeleteSetting,\r\n    }\r\n\r\n    return service;\r\n\r\n    function GetSettings(params) {\r\n      return $resource(APP.Service + \"_design/models/_view/Settings\")\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return _.chain(data.rows)\r\n            .map(function(item) {\r\n              return item.value;\r\n            })\r\n            .sortBy(function(item) {\r\n              return item.DrewAt || 0;\r\n            })\r\n            .reverse()\r\n            .value();\r\n        });\r\n    }\r\n\r\n    function GetSetting(id) {\r\n      return $resource(APP.Service + id)\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function SaveSetting(Setting) {\r\n      Setting.Type = \"Setting\";\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function DeleteSetting(Setting) {\r\n\r\n      Setting._deleted = true;\r\n      Setting.DeletedAt = new Date();\r\n\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise;\r\n    }\r\n\r\n  }\r\n  SettingsService.$inject = [\"$resource\"];\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.settings',\r\n      config: {\r\n        url: '/settings',\r\n        controller: \"SettingsController\",\r\n        templateUrl: 'src/settings/overview/view.html',\r\n        data: {\r\n          permissions: {\r\n            except: ['Anonymous'],\r\n            redirectTo: \"auth.login\"\r\n          }\r\n        }\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app.plists')\n    .factory('PlistsService', PlistsService);\n\n  /* @ngInject */\n  function PlistsService($resource, Plist) {\n\n    var service = {\n      GetPlists: GetPlists,\n      GetPlist: GetPlist,\n      SavePlist: SavePlist,\n      DeletePlist: DeletePlist,\n    }\n\n    return service;\n\n    function GetPlists(params) {\n      return Plist\n        .find({\n          filter: {\n            include: \"participants\"\n          }\n        })\n        .$promise\n        .then(function(data) {\n          return _.sortBy(data, function(item) {\n            return item.Name;\n          });\n        });\n    }\n\n    function GetPlist(id) {\n      return Plist\n        .findById({\n          id: id,\n          filter: {\n            include: \"participants\"\n          }\n        })\n        .$promise\n        .then(function(item) {\n          return item;\n        });\n    }\n\n\n    function SavePlist(plist) {\n\n      if (!plist.id) {\n        plist.CreatedAt = new Date();\n      }\n\n      plist.participants = _.filter(plist.Participants, function(item) {\n        return (item.Name || item.Email);\n      });\n\n      return Plist\n        .updateOrCreate(plist)\n        .$promise\n        .then(function(item) {\n          return item;\n        });\n\n    }\n\n    function DeletePlist(id) {\n\n      return Plist\n        .deleteById({\n          id: id\n        })\n        .$promise\n        .then(function(item) {\n          return item;\n        });\n\n    }\n\n  }\r\n  PlistsService.$inject = [\"$resource\", \"Plist\"];\n}());\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.plists',\r\n      config: {\r\n        url: '/plists',\r\n        controller: \"PlistsController\",\r\n        templateUrl: 'src/plists/overview/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .factory('PlistsModals', PlistsModals);\r\n\r\n  PlistsModals.$inject = ['modalHelper'];\r\n\r\n  function PlistsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"PlistForm\",\r\n        config: {\r\n          templateUrl: 'src/plists/form/view.html',\r\n          controller: \"PlistFormController\",\r\n          size: \"md\",\r\n          backdrop: 'static',\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .factory('LotteriesService', LotteriesService);\r\n\r\n  /* @ngInject */\r\n  function LotteriesService($resource) {\r\n\r\n    var service = {\r\n      _total: null,\r\n      _limit: 10,\r\n      _offset: 0,\r\n      GetLotteries: GetLotteries,\r\n      GetLottery: GetLottery,\r\n      SaveLottery: SaveLottery,\r\n      DeleteLottery: DeleteLottery,\r\n      NextPage: NextPage,\r\n      PreviousPage: PreviousPage,\r\n      HasPages: HasPages,\r\n    }\r\n\r\n    return service;\r\n\r\n    function NextPage() {\r\n      service._offset = ((service._offset / service._limit) + 1) * service._limit;\r\n    }\r\n\r\n    function PreviousPage() {\r\n      service._offset = ((service._offset / service._limit) - 1) * service._limit;\r\n    }\r\n\r\n    function HasPages() {\r\n      return {\r\n        Previous: (service._offset !== 0),\r\n        Next: (service._total - service._offset > service._limit),\r\n      }\r\n    }\r\n\r\n    function GetLotteries() {\r\n\r\n      return $resource(APP.Service + \"_design/models/_view/lotteries\")\r\n        .get({\r\n          limit: service._limit,\r\n          skip: service._offset,\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          service._total = data.total_rows;\r\n          return _.chain(data.rows)\r\n            .map(function(item) {\r\n              return item.value;\r\n            })\r\n            .sortBy(function(item) {\r\n              return item.DrewAt || 0;\r\n            })\r\n            .reverse()\r\n            .value();\r\n        });\r\n    }\r\n\r\n\r\n    function GetLottery(id) {\r\n      return $resource(APP.Service + id)\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function SaveLottery(lottery) {\r\n\r\n      lottery.Type = \"Lottery\";\r\n      lottery.DrewAt = new Date();\r\n      lottery.Participants = _.shuffle(lottery.Participants);\r\n\r\n      return $resource(APP.Service)\r\n        .save(lottery)\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function DeleteLottery(lottery) {\r\n\r\n      lottery._deleted = true;\r\n      lottery.DeletedAt = new Date();\r\n\r\n      return $resource(APP.Service)\r\n        .save(lottery)\r\n        .$promise;\r\n    }\r\n\r\n  }\r\n  LotteriesService.$inject = [\"$resource\"];\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.lotteries',\r\n      config: {\r\n        abstract: true,\r\n        template: '<ui-view/>',\r\n        data: {\r\n          permissions: {\r\n            except: ['Anonymous'],\r\n            redirectTo: \"auth.login\"\r\n          }\r\n        }\r\n      }\r\n    }, {\r\n      state: 'app.lotteries.overview',\r\n      config: {\r\n        url: '/',\r\n        controller: \"LotteriesController\",\r\n        templateUrl: 'src/lotteries/overview/view.html',\r\n      }\r\n    }, {\r\n      state: 'app.lotteries.lottery',\r\n      config: {\r\n        url: '/lottery/:ID',\r\n        controller: \"LotteryController\",\r\n        templateUrl: 'src/lotteries/lottery/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .factory('LotteriesModals', LotteriesModals);\r\n\r\n  LotteriesModals.$inject = ['modalHelper'];\r\n\r\n  function LotteriesModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"LotteryInit\",\r\n        config: {\r\n          templateUrl: 'src/lotteries/init/view.html',\r\n          controller: \"LotteryInitController\",\r\n          size: \"sm\"\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app.auth')\n    .run(appRun);\n\n  appRun.$inject = ['routerHelper'];\n\n  function appRun(routerHelper) {\n    routerHelper.configureStates(getStates());\n  }\n\n  function getStates() {\n    return [{\n      state: 'auth',\n      config: {\n        abstract: true,\n        template: '<ui-view/>',\n      }\n    }, {\n      state: 'auth.login',\n      config: {\n        url: '/login',\n        params: {\n          ref: null\n        },\n        templateUrl: \"src/auth/login/view.html\",\n        controller: \"AuthLoginController\",\n        data: {\n          permissions: {\n            only: ['Anonymous'],\n            redirectTo: \"app.lotteries.overview\"\n          }\n        }\n      }\n    }, {\n      state: 'auth.logout',\n      config: {\n        url: '/logout',\n        template: \"<ui-view/>\",\n        controller: function(User, $state) {\n          User\n            .logout()\n            .$promise\n            .then(function() {})\n            .finally(function() {\n              localStorage.clear();\n              $state.go(\"auth.login\", {\n                ref: \"so\"\n              });\n            })\n\n        },\n      }\n    }];\n  }\n\n}());\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .config(AuthInterceptorConfig)\r\n    .factory('AuthInterceptor', AuthInterceptor);\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptor($q, $injector,$cookies) {\r\n\r\n    return {\r\n      responseError: function(rejection) {\r\n        // console.log(rejection);\r\n        if (rejection.status === 401 && !rejection.config.IsSignIn) {\r\n          var User = $injector.get('User');\r\n          User.logout();\r\n          var $state = $injector.get('$state');\r\n          $state.go('auth.login', {\r\n            ref: \"au\"\r\n          });\r\n        }\r\n        return $q.reject(rejection);\r\n      }\r\n    };\r\n\r\n  }\r\n  AuthInterceptor.$inject = [\"$q\", \"$injector\", \"$cookies\"];\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptorConfig($httpProvider) {\r\n    $httpProvider.interceptors.push(\"AuthInterceptor\");\r\n  }\r\n  AuthInterceptorConfig.$inject = [\"$httpProvider\"];\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .constant('LoginMessages', {\r\n      ANAUTHORIZED: {\r\n        Type: \"danger\",\r\n        Message: \"You were signed out\",\r\n        Details: \"Probably your session was timed out\",\r\n      },\r\n      SIGNOUT: {\r\n        Type: \"success\",\r\n        Message: \"You were signed out\",\r\n        Details: \"You may login again using the form\",\r\n      },\r\n      REGISTERED: {\r\n        Type: \"success\",\r\n        Message: \"Your account is ready, you can login now\",\r\n        Details: false,\r\n      },\r\n      AUTHERROR: {\r\n        Type: \"danger\",\r\n        Message: \"Authentication Error\",\r\n        Details: null,\r\n      },\r\n      UNAVAILABLE: {\r\n        Type: \"danger\",\r\n        Message: \"Service is not available\",\r\n        Details: \"Please try again later. If the problem insist, contact your system administrator\",\r\n      },\r\n      UNAUTHORIZED: {\r\n        Type: \"danger\",\r\n        Message: \"Name or password is incorrect\",\r\n        Details: \"Please try again\",\r\n      },\r\n    });\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular.module('app', [\r\n\r\n    'app.auth',\r\n    'app.lotteries',\r\n    'app.plists',\r\n    'app.settings',\r\n    'app._common',\r\n\r\n\r\n  ]);\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n\r\n    $rootScope.APP = APP;\r\n\r\n    $rootScope.$on('$stateChangeStart', function(evt, to, params) {\r\n\r\n      if (to.redirectTo) {\r\n        evt.preventDefault();\r\n        $state.go(to.redirectTo, params);\r\n      }\r\n      \r\n    });\r\n\r\n\r\n  }\r\n  appRun.$inject = [\"$rootScope\", \"$state\", \"$stateParams\"];\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  window.APP = {\r\n    Project: \"PicoLotteries\",\r\n    Version: \"0.2.0\",\r\n  };\r\n\r\n  angular.element(document).ready(function() {\r\n    angular.bootstrap(document, [\"app\"]);\r\n  });\r\n\r\n})();\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig(configHelperProvider, $locationProvider) {\r\n    $locationProvider.html5Mode(true);\r\n\r\n    configHelperProvider.$get().notifyConfig(\"Location HTML5\", true);\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig($httpProvider) {\r\n    $httpProvider.defaults.withCredentials = true;\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .config(AnalyticsConfig);\r\n\r\n  /* @ngInject */\r\n  function AnalyticsConfig(configHelperProvider, AnalyticsProvider) {\r\n\r\n    var GoogleTrackCode = \"UA-4623228-21\";\r\n\r\n    AnalyticsProvider.setAccount(GoogleTrackCode);\r\n\r\n    AnalyticsProvider.trackUrlParams(true);\r\n    AnalyticsProvider.ignoreFirstPageLoad(true);\r\n    AnalyticsProvider.setPageEvent('$stateChangeSuccess');\r\n\r\n    configHelperProvider.$get().notifyConfig(\"Google Analytics\", GoogleTrackCode);\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings', []);\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .controller('SettingsController', SettingsController);\r\n\r\n  /* @ngInject */\r\n  function SettingsController(SettingsService, toaster) {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n    }\r\n\r\n\r\n  }\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists', []);\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .controller('PlistsController', PlistsController);\r\n\r\n  /* @ngInject */\r\n  function PlistsController(PlistsService, PlistsModals) {\r\n\r\n    var vm = this;\r\n\r\n    vm.AddPlist = AddPlist;\r\n    vm.ViewPlist = ViewPlist;\r\n    vm.DeletePlist = DeletePlist;\r\n    vm.LoadPlists = LoadPlists;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadPlists();\r\n    }\r\n\r\n    function LoadPlists() {\r\n      vm.loading = true;\r\n      PlistsService\r\n        .GetPlists()\r\n        .then(function(plists) {\r\n          vm.Plists = plists;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function AddPlist() {\r\n      PlistsModals\r\n        .PlistForm()\r\n        .then(function() {\r\n          vm.LoadPlists();\r\n        });\r\n    }\r\n\r\n    function ViewPlist(id) {\r\n      PlistsModals\r\n        .PlistForm({\r\n          ID: id\r\n        })\r\n        .then(function() {\r\n          vm.LoadPlists();\r\n        });\r\n    }\r\n\r\n    function DeletePlist(id) {\r\n      PlistsService\r\n        .DeletePlist(id)\r\n        .then(function() {\r\n          vm.LoadPlists();\r\n        });\r\n    }\r\n\r\n  }\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .controller(\"PlistFormController\", PlistFormController);\r\n\r\n  /* @ngInject */\r\n  function PlistFormController($modalInstance, ModalParams, PlistsService) {\r\n    var vm = this;\r\n\r\n    vm.Plist = {\r\n      Participants: [],\r\n    };\r\n\r\n    vm.AddParticipants = AddParticipants;\r\n    vm.RemoveParticipant = RemoveParticipant;\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      if (ModalParams.ID) {\r\n        vm.loading = true;\r\n        PlistsService\r\n          .GetPlist(ModalParams.ID)\r\n          .then(function(data) {\r\n            vm.Plist = data;\r\n            if (vm.Plist.Participants.length === 0) {\r\n              vm.AddParticipants();\r\n            }\r\n          })\r\n          .finally(function() {\r\n            vm.loading = false;\r\n          });\r\n      } else {\r\n        vm.AddParticipants();\r\n      }\r\n    }\r\n\r\n    function AddParticipants() {\r\n      for (var i = 0; i < 5; i++) {\r\n        vm.Plist.Participants.push({});\r\n      }\r\n    }\r\n\r\n    function RemoveParticipant(index) {\r\n      vm.Plist.Participants.splice(index, 1);\r\n    }\r\n\r\n    function Save() {\r\n      PlistsService\r\n        .SavePlist(vm.Plist)\r\n        .then(function() {\r\n          $modalInstance.close();\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries', []);\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .controller('LotteriesController', LotteriesController);\r\n\r\n  /* @ngInject */\r\n  function LotteriesController(LotteriesService, LotteriesModals, toaster, $state) {\r\n    var vm = this;\r\n\r\n    vm.AddLottery = AddLottery;\r\n    vm.DeleteLottery = DeleteLottery;\r\n    vm.LoadLotteries = LoadLotteries;\r\n    vm.FetchPrevious = FetchPrevious;\r\n    vm.FetchNext = FetchNext;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadLotteries()\r\n        .then(function() {\r\n          vm.HasPages = LotteriesService.HasPages();\r\n        });\r\n    }\r\n\r\n    function FetchPrevious() {\r\n      if (vm.HasPages.Previous) {\r\n        LotteriesService.PreviousPage();\r\n        vm.HasPages = LotteriesService.HasPages();\r\n        vm.LoadLotteries();\r\n      }\r\n    }\r\n\r\n    function FetchNext() {\r\n      if (vm.HasPages.Next) {\r\n        LotteriesService.NextPage();\r\n        vm.HasPages = LotteriesService.HasPages();\r\n        vm.LoadLotteries();\r\n      }\r\n    }\r\n\r\n    function LoadLotteries() {\r\n      vm.loading = true;\r\n      return LotteriesService\r\n        .GetLotteries()\r\n        .then(function(data) {\r\n          vm.Lotteries = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function AddLottery() {\r\n      LotteriesModals\r\n        .LotteryInit()\r\n        .then(function(id) {\r\n          if (id) {\r\n            $state.go(\"app.lotteries.lottery\", {\r\n              ID: id\r\n            });\r\n          }\r\n        });\r\n    }\r\n\r\n    function DeleteLottery(lottery) {\r\n      LotteriesService\r\n        .DeleteLottery(lottery)\r\n        .then(function() {\r\n          vm.LoadLotteries();\r\n        });\r\n    }\r\n\r\n  }\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .controller('LotteryController', LotteryController);\r\n\r\n  /* @ngInject */\r\n  function LotteryController(LotteriesService, $stateParams, toaster) {\r\n    var vm = this;\r\n\r\n    vm.LoadLottery = LoadLottery;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadLottery();\r\n    }\r\n\r\n    function LoadLottery() {\r\n      vm.loading = true;\r\n      LotteriesService\r\n        .GetLottery($stateParams.ID)\r\n        .then(function(data) {\r\n          vm.Lottery = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n  }\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .controller(\"LotteryInitController\", LotteryInitController);\r\n\r\n  /* @ngInject */\r\n  function LotteryInitController($modalInstance, ModalParams, LotteriesService,ParticipantsService) {\r\n    var vm = this;\r\n\r\n    vm.Lottery = {\r\n      Name: \"Lottery #\" + Math.floor((Math.random() * 99999) + 10000),\r\n    };\r\n\r\n    vm.LoadPLists = LoadPLists;\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadPLists();\r\n    }\r\n\r\n    function LoadPLists() {\r\n      vm.loading = true;\r\n      ParticipantsService\r\n        .GetPLists()\r\n        .then(function(data) {\r\n          vm.PLists = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function Save() {\r\n      LotteriesService\r\n        .SaveLottery(vm.Lottery)\r\n        .then(function(resp) {\r\n          $modalInstance.close(resp.id);\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth', [])\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .controller('AuthLoginController', AuthLoginController);\r\n\r\n  /* @ngInject */\r\n  function AuthLoginController($stateParams, $state, LoginMessages, User) {\r\n    var vm = this;\r\n\r\n    vm.loading = false;\r\n    vm.SignIn = SignIn;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n\r\n      switch ($stateParams.ref) {\r\n        case \"au\": //Unauthorized\r\n          vm.Alert = LoginMessages.UNAUTHORIZED;\r\n          break;\r\n        case \"so\": //Sign Out\r\n          vm.Alert = LoginMessages.SIGNOUT;\r\n          break;\r\n        case \"re\": //registered\r\n          vm.Alert = LoginMessages.REGISTERED;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n    }\r\n\r\n    function SignIn() {\r\n\r\n      vm.loading = true;\r\n      vm.Alert = false;\r\n\r\n      User\r\n        .login(vm.credentials)\r\n        .$promise\r\n        .then(function(response) {\r\n          $state.go(\"app.lotteries.overview\");\r\n        }, function(rejection) {\r\n          console.log(\"rejection\", rejection);\r\n          vm.Alert = LoginMessages[rejection.error.toUpperCase()];\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n        \r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .run(RoutesConfig);\r\n\r\n  RoutesConfig.$inject = ['configHelper', 'routerHelper'];\r\n\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n\r\n    var _states = getStates();\r\n    routerHelper.configureStates(_states, \"/\");\r\n\r\n    configHelper.notifyConfig(\"Basic Routes\", _.map(_states, function(_state) {\r\n      return _state.state;\r\n    }));\r\n\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app',\r\n      config: {\r\n        abstract: true,\r\n        templateUrl: 'src/_common/views/layout.html',\r\n        controller: function($scope, User) {\r\n          User.getCurrent()\r\n            .$promise\r\n            .then(function(u) {\r\n              $scope.username = u.username;\r\n            });\r\n        }\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsService', SettingsService);\r\n\r\n  /* @ngInject */\r\n  function SettingsService($resource) {\r\n\r\n    var service = {\r\n      GetSettings: GetSettings,\r\n      GetSetting: GetSetting,\r\n      SaveSetting: SaveSetting,\r\n      DeleteSetting: DeleteSetting,\r\n    }\r\n\r\n    return service;\r\n\r\n    function GetSettings(params) {\r\n      return $resource(APP.Service + \"_design/models/_view/Settings\")\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return _.chain(data.rows)\r\n            .map(function(item) {\r\n              return item.value;\r\n            })\r\n            .sortBy(function(item) {\r\n              return item.DrewAt || 0;\r\n            })\r\n            .reverse()\r\n            .value();\r\n        });\r\n    }\r\n\r\n    function GetSetting(id) {\r\n      return $resource(APP.Service + id)\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function SaveSetting(Setting) {\r\n      Setting.Type = \"Setting\";\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function DeleteSetting(Setting) {\r\n\r\n      Setting._deleted = true;\r\n      Setting.DeletedAt = new Date();\r\n\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise;\r\n    }\r\n\r\n  }\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.settings',\r\n      config: {\r\n        url: '/settings',\r\n        controller: \"SettingsController\",\r\n        templateUrl: 'src/settings/overview/view.html',\r\n        data: {\r\n          permissions: {\r\n            except: ['Anonymous'],\r\n            redirectTo: \"auth.login\"\r\n          }\r\n        }\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app.plists')\n    .factory('PlistsService', PlistsService);\n\n  /* @ngInject */\n  function PlistsService($resource, Plist) {\n\n    var service = {\n      GetPlists: GetPlists,\n      GetPlist: GetPlist,\n      SavePlist: SavePlist,\n      DeletePlist: DeletePlist,\n    }\n\n    return service;\n\n    function GetPlists(params) {\n      return Plist\n        .find({\n          filter: {\n            include: \"participants\"\n          }\n        })\n        .$promise\n        .then(function(data) {\n          return _.sortBy(data, function(item) {\n            return item.Name;\n          });\n        });\n    }\n\n    function GetPlist(id) {\n      return Plist\n        .findById({\n          id: id,\n          filter: {\n            include: \"participants\"\n          }\n        })\n        .$promise\n        .then(function(item) {\n          return item;\n        });\n    }\n\n\n    function SavePlist(plist) {\n\n      if (!plist.id) {\n        plist.CreatedAt = new Date();\n      }\n\n      plist.participants = _.filter(plist.Participants, function(item) {\n        return (item.Name || item.Email);\n      });\n\n      return Plist\n        .updateOrCreate(plist)\n        .$promise\n        .then(function(item) {\n          return item;\n        });\n\n    }\n\n    function DeletePlist(id) {\n\n      return Plist\n        .deleteById({\n          id: id\n        })\n        .$promise\n        .then(function(item) {\n          return item;\n        });\n\n    }\n\n  }\n}());\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.plists',\r\n      config: {\r\n        url: '/plists',\r\n        controller: \"PlistsController\",\r\n        templateUrl: 'src/plists/overview/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .factory('PlistsModals', PlistsModals);\r\n\r\n  PlistsModals.$inject = ['modalHelper'];\r\n\r\n  function PlistsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"PlistForm\",\r\n        config: {\r\n          templateUrl: 'src/plists/form/view.html',\r\n          controller: \"PlistFormController\",\r\n          size: \"md\",\r\n          backdrop: 'static',\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .factory('LotteriesService', LotteriesService);\r\n\r\n  /* @ngInject */\r\n  function LotteriesService($resource) {\r\n\r\n    var service = {\r\n      _total: null,\r\n      _limit: 10,\r\n      _offset: 0,\r\n      GetLotteries: GetLotteries,\r\n      GetLottery: GetLottery,\r\n      SaveLottery: SaveLottery,\r\n      DeleteLottery: DeleteLottery,\r\n      NextPage: NextPage,\r\n      PreviousPage: PreviousPage,\r\n      HasPages: HasPages,\r\n    }\r\n\r\n    return service;\r\n\r\n    function NextPage() {\r\n      service._offset = ((service._offset / service._limit) + 1) * service._limit;\r\n    }\r\n\r\n    function PreviousPage() {\r\n      service._offset = ((service._offset / service._limit) - 1) * service._limit;\r\n    }\r\n\r\n    function HasPages() {\r\n      return {\r\n        Previous: (service._offset !== 0),\r\n        Next: (service._total - service._offset > service._limit),\r\n      }\r\n    }\r\n\r\n    function GetLotteries() {\r\n\r\n      return $resource(APP.Service + \"_design/models/_view/lotteries\")\r\n        .get({\r\n          limit: service._limit,\r\n          skip: service._offset,\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          service._total = data.total_rows;\r\n          return _.chain(data.rows)\r\n            .map(function(item) {\r\n              return item.value;\r\n            })\r\n            .sortBy(function(item) {\r\n              return item.DrewAt || 0;\r\n            })\r\n            .reverse()\r\n            .value();\r\n        });\r\n    }\r\n\r\n\r\n    function GetLottery(id) {\r\n      return $resource(APP.Service + id)\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function SaveLottery(lottery) {\r\n\r\n      lottery.Type = \"Lottery\";\r\n      lottery.DrewAt = new Date();\r\n      lottery.Participants = _.shuffle(lottery.Participants);\r\n\r\n      return $resource(APP.Service)\r\n        .save(lottery)\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function DeleteLottery(lottery) {\r\n\r\n      lottery._deleted = true;\r\n      lottery.DeletedAt = new Date();\r\n\r\n      return $resource(APP.Service)\r\n        .save(lottery)\r\n        .$promise;\r\n    }\r\n\r\n  }\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.lotteries',\r\n      config: {\r\n        abstract: true,\r\n        template: '<ui-view/>',\r\n        data: {\r\n          permissions: {\r\n            except: ['Anonymous'],\r\n            redirectTo: \"auth.login\"\r\n          }\r\n        }\r\n      }\r\n    }, {\r\n      state: 'app.lotteries.overview',\r\n      config: {\r\n        url: '/',\r\n        controller: \"LotteriesController\",\r\n        templateUrl: 'src/lotteries/overview/view.html',\r\n      }\r\n    }, {\r\n      state: 'app.lotteries.lottery',\r\n      config: {\r\n        url: '/lottery/:ID',\r\n        controller: \"LotteryController\",\r\n        templateUrl: 'src/lotteries/lottery/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .factory('LotteriesModals', LotteriesModals);\r\n\r\n  LotteriesModals.$inject = ['modalHelper'];\r\n\r\n  function LotteriesModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"LotteryInit\",\r\n        config: {\r\n          templateUrl: 'src/lotteries/init/view.html',\r\n          controller: \"LotteryInitController\",\r\n          size: \"sm\"\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app.auth')\n    .run(appRun);\n\n  appRun.$inject = ['routerHelper'];\n\n  function appRun(routerHelper) {\n    routerHelper.configureStates(getStates());\n  }\n\n  function getStates() {\n    return [{\n      state: 'auth',\n      config: {\n        abstract: true,\n        template: '<ui-view/>',\n      }\n    }, {\n      state: 'auth.login',\n      config: {\n        url: '/login',\n        params: {\n          ref: null\n        },\n        templateUrl: \"src/auth/login/view.html\",\n        controller: \"AuthLoginController\",\n        data: {\n          permissions: {\n            only: ['Anonymous'],\n            redirectTo: \"app.lotteries.overview\"\n          }\n        }\n      }\n    }, {\n      state: 'auth.logout',\n      config: {\n        url: '/logout',\n        template: \"<ui-view/>\",\n        controller: function(User, $state) {\n          User\n            .logout()\n            .$promise\n            .then(function() {})\n            .finally(function() {\n              localStorage.clear();\n              $state.go(\"auth.login\", {\n                ref: \"so\"\n              });\n            })\n\n        },\n      }\n    }];\n  }\n\n}());\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .config(AuthInterceptorConfig)\r\n    .factory('AuthInterceptor', AuthInterceptor);\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptor($q, $injector,$cookies) {\r\n\r\n    return {\r\n      responseError: function(rejection) {\r\n        // console.log(rejection);\r\n        if (rejection.status === 401 && !rejection.config.IsSignIn) {\r\n          var User = $injector.get('User');\r\n          User.logout();\r\n          var $state = $injector.get('$state');\r\n          $state.go('auth.login', {\r\n            ref: \"au\"\r\n          });\r\n        }\r\n        return $q.reject(rejection);\r\n      }\r\n    };\r\n\r\n  }\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptorConfig($httpProvider) {\r\n    $httpProvider.interceptors.push(\"AuthInterceptor\");\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .constant('LoginMessages', {\r\n      ANAUTHORIZED: {\r\n        Type: \"danger\",\r\n        Message: \"You were signed out\",\r\n        Details: \"Probably your session was timed out\",\r\n      },\r\n      SIGNOUT: {\r\n        Type: \"success\",\r\n        Message: \"You were signed out\",\r\n        Details: \"You may login again using the form\",\r\n      },\r\n      REGISTERED: {\r\n        Type: \"success\",\r\n        Message: \"Your account is ready, you can login now\",\r\n        Details: false,\r\n      },\r\n      AUTHERROR: {\r\n        Type: \"danger\",\r\n        Message: \"Authentication Error\",\r\n        Details: null,\r\n      },\r\n      UNAVAILABLE: {\r\n        Type: \"danger\",\r\n        Message: \"Service is not available\",\r\n        Details: \"Please try again later. If the problem insist, contact your system administrator\",\r\n      },\r\n      UNAUTHORIZED: {\r\n        Type: \"danger\",\r\n        Message: \"Name or password is incorrect\",\r\n        Details: \"Please try again\",\r\n      },\r\n    });\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular.module('app', [\r\n\r\n    'app.auth',\r\n    'app.lotteries',\r\n    'app.plists',\r\n    'app.settings',\r\n    'app._common',\r\n\r\n\r\n  ]);\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n\r\n    $rootScope.APP = APP;\r\n\r\n    $rootScope.$on('$stateChangeStart', function(evt, to, params) {\r\n\r\n      if (to.redirectTo) {\r\n        evt.preventDefault();\r\n        $state.go(to.redirectTo, params);\r\n      }\r\n      \r\n    });\r\n\r\n\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  window.APP = {\r\n    Project: \"PicoLotteries\",\r\n    Version: \"0.2.0\",\r\n  };\r\n\r\n  angular.element(document).ready(function() {\r\n    angular.bootstrap(document, [\"app\"]);\r\n  });\r\n\r\n})();\r\n"],"sourceRoot":"/source/"}