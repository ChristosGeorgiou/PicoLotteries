{"version":3,"sources":["_common/_module.js","_common/helpers/route.helper.js","_common/helpers/modal.helper.js","app.min.js","_common/helpers/config.helper.js","_common/filters/numberfixedlen.js","_common/filters/fromnow.js","_common/filters/fileicon.js","_common/filters/bytes.js","_common/directives/ngprint.js","_common/directives/errsrc.js","_common/directives/confirm.js","_common/configs/location.config.js","_common/configs/http.config.js","settings/_module.js","settings/overview/controller.js","plists/_module.js","plists/overview/controller.js","plists/form/controller.js","lotteries/_module.js","lotteries/overview/controller.js","lotteries/lottery/controller.js","lotteries/init/controller.js","auth/_module.js","auth/login/controller.js","_common/routes.js","settings/service.js","settings/routes.js","plists/service.js","plists/routes.js","plists/modals.js","lotteries/service.js","lotteries/routes.js","lotteries/modals.js","auth/routes.js","auth/interceptor.js","auth/constants.js","app.js","run.js"],"names":["angular","module","routerHelperProvider","$locationProvider","$stateProvider","$urlRouterProvider","RouterHelper","$state","configureStates","states","otherwisePath","forEach","state","config","controllerAs","extend","views","_","each","item","hasOtherwise","otherwise","getStates","get","service","this","$get","$inject","provider","modalHelperProvider","modalHelper","$uibModal","$q","configureModals","modals","_ret","modal","obj","ModalResultComplete","response","ModalResultFailed","reason","reject","resolve","ModalParams","open","result","then","configHelperProvider","ConfigHelper","notifyConfig","configName","message","console","log","numberFixedLen","a","b","slice","filter","fromNow","date","moment","fileicon","_icons","application/pdf","application/powerpoint","application/x-msword","application/x-msexcel","application/x-mspowerpoint","audio/x-mpeg-3","image/gif","image/png","image/tiff","image/jpeg","video/avi","video/mpeg","video/msvideo","video/quicktime","application/zip","bytes","precision","isNaN","parseFloat","isFinite","units","number","Math","floor","pow","toFixed","ngPrint","link","scope","element","attrs","on","elemToPrint","document","getElementById","printElementId","printElement","beforePrint","afterPrint","printSection","innerHTML","window","matchMedia","mediaQueryList","addListener","mql","matches","onbeforeprint","onafterprint","elem","domClone","cloneNode","appendChild","print","createElement","id","body","restrict","directive","errSrc","ngSrc","$set","bind","remove","src","ngConfirmClick","priority","e","confirm","stopImmediatePropagation","preventDefault","LocationConfig","html5Mode","$httpProvider","defaults","withCredentials","SettingsController","SettingsService","activate","controller","PlistsController","PlistsService","PlistsModals","vm","LoadPlists","params","loading","GetPlists","plists","Plists","AddPlist","PlistForm","ViewPlist","ID","DeletePlist","PlistFormController","$modalInstance","GetPlist","data","Plist","Participants","length","AddParticipants","i","push","RemoveParticipant","index","splice","Save","SavePlist","copy","close","LotteriesController","LotteriesService","LotteriesModals","LoadLotteries","GetLotteries","Lotteries","AddLottery","LotteryInit","go","DeleteLottery","lottery","LotteryController","$stateParams","LoadLottery","GetLottery","Lottery","LotteryInitController","SaveLottery","resp","Name","random","AuthLoginController","LoginMessages","User","ref","SignMessage","toUpperCase","SignIn","Alert","login","credentials","$promise","rejection","error","CODE","RoutesConfig","configHelper","routerHelper","_states","map","_state","abstract","templateUrl","$scope","getCurrent","u","username","run","$resource","GetSettings","APP","Service","chain","rows","value","sortBy","DrewAt","reverse","GetSetting","SaveSetting","Setting","Type","save","DeleteSetting","_deleted","DeletedAt","Date","factory","appRun","url","find","order","findById","plist","CreatedAt","Email","updateOrCreate","deleteById","getModals","size","backdrop","create","template","logout","localStorage","clear","AuthInterceptor","$injector","$cookies","responseError","status","IsSignIn","AuthInterceptorConfig","interceptors","constant","SESSIONEND","Message","Details","SIGNOUT","REGISTERED","AUTHERROR","UNAVAILABLE","UNAUTHORIZED","$rootScope","$on","evt","to","redirectTo"],"mappings":"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","file":"app.min.js","sourcesContent":["(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common', [\r\n      'lbServices',\r\n\r\n      'ngResource',\r\n      'ngSanitize',\r\n      'ngCookies',\r\n      \r\n      'ui.bootstrap',\r\n      'ui.router',\r\n    ]);\r\n})();\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('routerHelper', routerHelperProvider);\r\n\r\n  routerHelperProvider.$inject = ['$locationProvider', '$stateProvider', '$urlRouterProvider'];\r\n  /* @ngInject */\r\n  function routerHelperProvider($locationProvider, $stateProvider, $urlRouterProvider) {\r\n    /* jshint validthis:true */\r\n    this.$get = RouterHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    RouterHelper.$inject = ['$state'];\r\n\r\n    function RouterHelper($state) {\r\n      var hasOtherwise = false;\r\n\r\n      var service = {\r\n        configureStates: configureStates,\r\n        getStates: getStates\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureStates(states, otherwisePath) {\r\n        states.forEach(function(state) {\r\n\r\n          var config = {\r\n            controllerAs: 'vm',\r\n          };\r\n\r\n          angular.extend(config, state.config);\r\n\r\n          if (config.views) {\r\n            _.each(config.views, function(item) {\r\n              item.controllerAs = 'vm';\r\n            });\r\n          }\r\n\r\n          $stateProvider.state(state.state, config);\r\n        });\r\n        if (otherwisePath && !hasOtherwise) {\r\n          hasOtherwise = true;\r\n          $urlRouterProvider.otherwise(otherwisePath);\r\n        }\r\n      }\r\n\r\n      function getStates() {\r\n        return $state.get();\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('modalHelper', modalHelperProvider);\r\n\r\n  modalHelperProvider.$inject = [];\r\n  /* @ngInject */\r\n  function modalHelperProvider() {\r\n    /* jshint validthis:true */\r\n    this.$get = modalHelper;\r\n\r\n    /* @ngInject */\r\n    function modalHelper($uibModal, $q) {\r\n\r\n      var service = {\r\n        configureModals: configureModals\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureModals(modals) {\r\n        var _ret = {};\r\n        angular.forEach(modals, function(modal) {\r\n          _ret[modal.modal] = function(obj) {\r\n            var config = {\r\n              controllerAs: 'vm',\r\n              resolve: {\r\n                ModalParams: function() {\r\n                  return obj || {};\r\n                }\r\n              }\r\n            };\r\n            angular.extend(config, modal.config);\r\n\r\n            return $uibModal\r\n              .open(config)\r\n              .result\r\n              .then(ModalResultComplete)\r\n              .catch(ModalResultFailed);\r\n\r\n            function ModalResultComplete(response) {\r\n              return response;\r\n            }\r\n\r\n            function ModalResultFailed(reason) {\r\n              if (reason && reason !== \"backdrop click\") {\r\n                return $q.reject();\r\n              }\r\n            }\r\n          };\r\n        });\r\n        return _ret;\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common', [\r\n      'lbServices',\r\n\r\n      'ngResource',\r\n      'ngSanitize',\r\n      'ngCookies',\r\n      \r\n      'ui.bootstrap',\r\n      'ui.router',\r\n    ]);\r\n})();\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('routerHelper', routerHelperProvider);\r\n\r\n  routerHelperProvider.$inject = ['$locationProvider', '$stateProvider', '$urlRouterProvider'];\r\n  /* @ngInject */\r\n  function routerHelperProvider($locationProvider, $stateProvider, $urlRouterProvider) {\r\n    /* jshint validthis:true */\r\n    this.$get = RouterHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    RouterHelper.$inject = ['$state'];\r\n\r\n    function RouterHelper($state) {\r\n      var hasOtherwise = false;\r\n\r\n      var service = {\r\n        configureStates: configureStates,\r\n        getStates: getStates\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureStates(states, otherwisePath) {\r\n        states.forEach(function(state) {\r\n\r\n          var config = {\r\n            controllerAs: 'vm',\r\n          };\r\n\r\n          angular.extend(config, state.config);\r\n\r\n          if (config.views) {\r\n            _.each(config.views, function(item) {\r\n              item.controllerAs = 'vm';\r\n            });\r\n          }\r\n\r\n          $stateProvider.state(state.state, config);\r\n        });\r\n        if (otherwisePath && !hasOtherwise) {\r\n          hasOtherwise = true;\r\n          $urlRouterProvider.otherwise(otherwisePath);\r\n        }\r\n      }\r\n\r\n      function getStates() {\r\n        return $state.get();\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('modalHelper', modalHelperProvider);\r\n\r\n  modalHelperProvider.$inject = [];\r\n  /* @ngInject */\r\n  function modalHelperProvider() {\r\n    /* jshint validthis:true */\r\n    this.$get = modalHelper;\r\n\r\n    /* @ngInject */\r\n    function modalHelper($uibModal, $q) {\r\n\r\n      var service = {\r\n        configureModals: configureModals\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureModals(modals) {\r\n        var _ret = {};\r\n        angular.forEach(modals, function(modal) {\r\n          _ret[modal.modal] = function(obj) {\r\n            var config = {\r\n              controllerAs: 'vm',\r\n              resolve: {\r\n                ModalParams: function() {\r\n                  return obj || {};\r\n                }\r\n              }\r\n            };\r\n            angular.extend(config, modal.config);\r\n\r\n            return $uibModal\r\n              .open(config)\r\n              .result\r\n              .then(ModalResultComplete)\r\n              .catch(ModalResultFailed);\r\n\r\n            function ModalResultComplete(response) {\r\n              return response;\r\n            }\r\n\r\n            function ModalResultFailed(reason) {\r\n              if (reason && reason !== \"backdrop click\") {\r\n                return $q.reject();\r\n              }\r\n            }\r\n          };\r\n        });\r\n        return _ret;\r\n      }\r\n    }\r\n    modalHelper.$inject = [\"$uibModal\", \"$q\"];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('configHelper', configHelperProvider);\r\n\r\n  configHelperProvider.$inject = [];\r\n\r\n  function configHelperProvider() {\r\n    /* jshint validthis:true */\r\n    this.$get = ConfigHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    ConfigHelper.$inject = [];\r\n\r\n    function ConfigHelper() {\r\n\r\n      var service = {\r\n        notifyConfig: notifyConfig\r\n      };\r\n\r\n      return service;\r\n\r\n      //function notifyConfig() {}\r\n      function notifyConfig(configName, message) {\r\n        message = message || {};\r\n        console.log(\"%c CONFIG - \" + configName + \" \", 'background: #9C27B0; color: #FFF', message);\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('numberFixedLen', numberFixedLen)\r\n\r\n  numberFixedLen.$inject = []\r\n\r\n  function numberFixedLen() {\r\n    return function(a, b) {\r\n      return (1e4 + a + \"\").slice(-b)\r\n    }\r\n  }\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('fromNow', fromNow)\r\n\r\n  fromNow.$inject = []\r\n\r\n  function fromNow() {\r\n    return function(date) {\r\n      return moment(date).fromNow();\r\n    }\r\n  }\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('fileicon', fileicon)\r\n\r\n  fileicon.$inject = []\r\n\r\n  function fileicon() {\r\n    var _icons = {\r\n      \"application/pdf\": \"fa-file-pdf-o\",\r\n      \"application/powerpoint\": \"fa-file-powerpoint-o\",\r\n      \"application/x-msword\": \"fa-file-word-o\",\r\n      \"application/x-msexcel\": \"fa-file-excel-o\",\r\n      \"application/x-mspowerpoint\": \"fa-file-powerpoint-o\",\r\n      \"audio/x-mpeg-3\": \"fa-file-audio-o\",\r\n      \"image/gif\": \"fa-file-image-o\",\r\n      \"image/png\": \"fa-file-image-o\",\r\n      \"image/tiff\": \"fa-file-image-o\",\r\n      \"image/jpeg\": \"fa-file-image-o\",\r\n      \"video/avi\": \"fa-file-video-o\",\r\n      \"video/mpeg\": \"fa-file-video-o\",\r\n      \"video/msvideo\": \"fa-file-video-o\",\r\n      \"video/quicktime\": \"fa-file-video-o\",\r\n      \"application/zip\": \"fa-file-zip-o\"\r\n    };\r\n    return function(a) {\r\n      return _icons[a] || \"fa-file-o\";\r\n    }\r\n  }\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('bytes', bytes)\r\n\r\n  bytes.$inject = []\r\n\r\n  function bytes() {\r\n    return function(bytes, precision) {\r\n      if (isNaN(parseFloat(bytes)) || !isFinite(bytes)) return '-';\r\n      if (typeof precision === 'undefined') precision = 1;\r\n      var units = ['bytes', 'kB', 'MB', 'GB', 'TB', 'PB'],\r\n        number = Math.floor(Math.log(bytes) / Math.log(1024));\r\n      return (bytes / Math.pow(1024, Math.floor(number))).toFixed(precision) + ' ' + units[number];\r\n    }\r\n  }\r\n}());\r\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .directive('ngPrint', ngPrint)\n\n  /* @ngInject */\n  function ngPrint() {\n    var printSection = document.getElementById('printSection');\n    // if there is no printing section, create one\n    if (!printSection) {\n      printSection = document.createElement('div');\n      printSection.id = 'printSection';\n      document.body.appendChild(printSection);\n    }\n\n    function link(scope, element, attrs) {\n\n      element.on('click', function() {\n        var elemToPrint = document.getElementById(attrs.printElementId);\n        if (elemToPrint) {\n          printElement(elemToPrint);\n        }\n      });\n\n      var beforePrint = function() {\n        console.log('Functionality to run before printing.');\n      };\n      var afterPrint = function() {\n        console.log('Functionality to run after printing');\n        printSection.innerHTML = '';\n      };\n\n      if (window.matchMedia) {\n        var mediaQueryList = window.matchMedia('print');\n        mediaQueryList.addListener(function(mql) {\n          if (mql.matches) {\n            beforePrint();\n          } else {\n            afterPrint();\n          }\n        });\n      }\n\n      window.onbeforeprint = beforePrint;\n      window.onafterprint = afterPrint;\n\n    }\n\n    function printElement(elem) {\n      // clones the element you want to print\n      var domClone = elem.cloneNode(true);\n      printSection.appendChild(domClone);\n      window.print();\n    }\n    return {\n      link: link,\n      restrict: 'A'\n    };\n  }\n\n}());\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .directive('errSrc', errSrc)\n\n  /* @ngInject */\n  function errSrc() {\n    return {\n      link: function(scope, element, attrs) {\n        if (!attrs.ngSrc) {\n          attrs.$set('src', attrs.errSrc);\n        }\n\n        element.bind('error', function() {\n\n          if (attrs.errSrc == \"REMOVE\") {\n            element.remove();\n            return;\n          }\n          if (attrs.src != attrs.errSrc) {\n            attrs.$set('src', attrs.errSrc);\n          }\n        });\n\n      }\n    }\n  }\n\n}());\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .directive('ngConfirmClick', ngConfirmClick)\n\n  /* @ngInject */\n  function ngConfirmClick() {\n    return {\n      priority: -1,\n      restrict: 'A',\n      link: function(scope, element, attrs){\n        element.bind('click', function(e){\n          var message = attrs.ngConfirmClick;\n          if(message && !confirm(message)){\n            e.stopImmediatePropagation();\n            e.preventDefault();\n          }\n        });\n      }\n    }\n  }\n\n}());\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig(configHelperProvider, $locationProvider) {\r\n    $locationProvider.html5Mode(true);\r\n\r\n    configHelperProvider.$get().notifyConfig(\"Location HTML5\", true);\r\n  }\r\n  LocationConfig.$inject = [\"configHelperProvider\", \"$locationProvider\"];\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig($httpProvider) {\r\n    $httpProvider.defaults.withCredentials = true;\r\n  }\r\n  LocationConfig.$inject = [\"$httpProvider\"];\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings', []);\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .controller('SettingsController', SettingsController);\r\n\r\n  /* @ngInject */\r\n  function SettingsController(SettingsService) {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n    }\r\n\r\n\r\n  }\r\n  SettingsController.$inject = [\"SettingsService\"];\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists', []);\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .controller('PlistsController', PlistsController);\r\n\r\n  /* @ngInject */\r\n  function PlistsController(PlistsService, PlistsModals) {\r\n\r\n    var vm = this;\r\n\r\n    vm.AddPlist = AddPlist;\r\n    vm.ViewPlist = ViewPlist;\r\n    vm.DeletePlist = DeletePlist;\r\n    vm.LoadPlists = LoadPlists;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadPlists();\r\n    }\r\n\r\n    function LoadPlists(params) {\r\n      vm.loading = true;\r\n      PlistsService\r\n        .GetPlists(params)\r\n        .then(function(plists) {\r\n          vm.Plists = plists;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function AddPlist() {\r\n      PlistsModals\r\n        .PlistForm()\r\n        .then(function() {\r\n          vm.LoadPlists();\r\n        });\r\n    }\r\n\r\n    function ViewPlist(id) {\r\n      PlistsModals\r\n        .PlistForm({\r\n          ID: id\r\n        })\r\n        .then(function() {\r\n          vm.LoadPlists();\r\n        });\r\n    }\r\n\r\n    function DeletePlist(id) {\r\n      console.log(\"DELE\");\r\n      // PlistsService\r\n      //   .DeletePlist(id)\r\n      //   .then(function() {\r\n      //     vm.LoadPlists();\r\n      //   });\r\n    }\r\n\r\n  }\r\n  PlistsController.$inject = [\"PlistsService\", \"PlistsModals\"];\r\n})();\r\n;(function() {\n  'use strict';\n\n  angular\n    .module('app.plists')\n    .controller(\"PlistFormController\", PlistFormController);\n\n  /* @ngInject */\n  function PlistFormController($modalInstance, ModalParams, PlistsService) {\n    var vm = this;\n\n    vm.Plist = {\n      Participants: [],\n    };\n\n    vm.AddParticipants = AddParticipants;\n    vm.RemoveParticipant = RemoveParticipant;\n    vm.Save = Save;\n\n    activate();\n\n    function activate() {\n      if (ModalParams.ID) {\n        vm.loading = true;\n        PlistsService\n          .GetPlist(ModalParams.ID)\n          .then(function(data) {\n            vm.Plist = data;\n\n            if (vm.Plist.Participants.length === 0) {\n              vm.AddParticipants();\n            }\n\n          })\n          .finally(function() {\n            vm.loading = false;\n          });\n      } else {\n        vm.AddParticipants();\n      }\n    }\n\n    function AddParticipants() {\n      for (var i = 0; i < 5; i++) {\n        vm.Plist.Participants.push({});\n      }\n    }\n\n    function RemoveParticipant(index) {\n      vm.Plist.Participants.splice(index, 1);\n    }\n\n    function Save() {\n      vm.loading = true;\n      PlistsService\n        .SavePlist(angular.copy(vm.Plist))\n        .then(function() {\n          vm.loading = false;\n          $modalInstance.close();\n        });\n    }\n\n\n  }\r\n  PlistFormController.$inject = [\"$modalInstance\", \"ModalParams\", \"PlistsService\"];\n\n}());\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries', []);\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .controller('LotteriesController', LotteriesController);\r\n\r\n  /* @ngInject */\r\n  function LotteriesController($state, LotteriesService, LotteriesModals) {\r\n    var vm = this;\r\n\r\n    vm.AddLottery = AddLottery;\r\n    vm.DeleteLottery = DeleteLottery;\r\n    vm.LoadLotteries = LoadLotteries;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadLotteries();\r\n    }\r\n\r\n    function LoadLotteries() {\r\n      vm.loading = true;\r\n      return LotteriesService\r\n        .GetLotteries()\r\n        .then(function(data) {\r\n          vm.Lotteries = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function AddLottery() {\r\n      LotteriesModals\r\n        .LotteryInit()\r\n        .then(function(id) {\r\n          if (id) {\r\n            $state.go(\"app.lotteries.lottery\", {\r\n              ID: id\r\n            });\r\n          }\r\n        });\r\n    }\r\n\r\n    function DeleteLottery(lottery) {\r\n      LotteriesService\r\n        .DeleteLottery(lottery)\r\n        .then(function() {\r\n          vm.LoadLotteries();\r\n        });\r\n    }\r\n\r\n  }\r\n  LotteriesController.$inject = [\"$state\", \"LotteriesService\", \"LotteriesModals\"];\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .controller('LotteryController', LotteryController);\r\n\r\n  /* @ngInject */\r\n  function LotteryController(LotteriesService, $stateParams) {\r\n    var vm = this;\r\n\r\n    vm.LoadLottery = LoadLottery;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadLottery();\r\n    }\r\n\r\n    function LoadLottery() {\r\n      vm.loading = true;\r\n      LotteriesService\r\n        .GetLottery($stateParams.ID)\r\n        .then(function(data) {\r\n          vm.Lottery = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n  }\r\n  LotteryController.$inject = [\"LotteriesService\", \"$stateParams\"];\r\n})();\r\n;(function() {\n  'use strict';\n\n  angular\n    .module('app.lotteries')\n    .controller(\"LotteryInitController\", LotteryInitController);\n\n  /* @ngInject */\n  function LotteryInitController($modalInstance, ModalParams, LotteriesService, PlistsService) {\n    var vm = this;\n\n    vm.Lottery = {\n      Name: \"Lottery #\" + Math.floor((Math.random() * 99999) + 10000),\n    };\n\n    vm.LoadPlists = LoadPlists;\n    vm.Save = Save;\n\n    activate();\n\n    function activate() {\n      vm.LoadPlists();\n    }\n\n    function LoadPlists() {\n      vm.loading = true;\n      PlistsService\n        .GetPlists()\n        .then(function(data) {\n          vm.Plists = data;\n        })\n        .finally(function() {\n          vm.loading = false;\n        });\n    }\n\n    function Save() {\n      LotteriesService\n        .SaveLottery(vm.Lottery)\n        .then(function(resp) {\n          $modalInstance.close(resp.id);\n        });\n    }\n\n\n  }\r\n  LotteryInitController.$inject = [\"$modalInstance\", \"ModalParams\", \"LotteriesService\", \"PlistsService\"];\n\n}());\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth', [])\r\n\r\n}());\r\n;(function() {\n  'use strict';\n\n  angular\n    .module('app.auth')\n    .controller('AuthLoginController', AuthLoginController);\n\n  /* @ngInject */\n  function AuthLoginController($stateParams, $state, LoginMessages, User) {\n    var vm = this;\n\n    vm.loading = false;\n    vm.SignIn = SignIn;\n\n    activate();\n\n    function activate() {\n\n      if ($stateParams.ref) {\n        SignMessage($stateParams.ref.toUpperCase());\n      }\n    }\n\n    function SignIn() {\n\n      vm.loading = true;\n      vm.Alert = false;\n\n      User\n        .login(vm.credentials)\n        .$promise\n        .then(function(response) {\n          $state.go(\"app.lotteries.overview\");\n        }, function(rejection) {\n          SignMessage(rejection.error.toUpperCase());\n          vm.loading = false;\n        });\n    }\n\n    function SignMessage(CODE) {\n      vm.Alert = LoginMessages[CODE];\n    }\n\n  }\r\n  AuthLoginController.$inject = [\"$stateParams\", \"$state\", \"LoginMessages\", \"User\"];\n\n}());\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .run(RoutesConfig);\r\n\r\n  RoutesConfig.$inject = ['configHelper', 'routerHelper'];\r\n\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n\r\n    var _states = getStates();\r\n    routerHelper.configureStates(_states, \"/\");\r\n\r\n    configHelper.notifyConfig(\"Basic Routes\", _.map(_states, function(_state) {\r\n      return _state.state;\r\n    }));\r\n\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app',\r\n      config: {\r\n        abstract: true,\r\n        templateUrl: 'src/_common/views/layout.html',\r\n        controller: function($scope, User) {\r\n          User.getCurrent()\r\n            .$promise\r\n            .then(function(u) {\r\n              $scope.username = u.username;\r\n            });\r\n        }\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsService', SettingsService);\r\n\r\n  /* @ngInject */\r\n  function SettingsService($resource) {\r\n\r\n    var service = {\r\n      GetSettings: GetSettings,\r\n      GetSetting: GetSetting,\r\n      SaveSetting: SaveSetting,\r\n      DeleteSetting: DeleteSetting,\r\n    }\r\n\r\n    return service;\r\n\r\n    function GetSettings(params) {\r\n      return $resource(APP.Service + \"_design/models/_view/Settings\")\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return _.chain(data.rows)\r\n            .map(function(item) {\r\n              return item.value;\r\n            })\r\n            .sortBy(function(item) {\r\n              return item.DrewAt || 0;\r\n            })\r\n            .reverse()\r\n            .value();\r\n        });\r\n    }\r\n\r\n    function GetSetting(id) {\r\n      return $resource(APP.Service + id)\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function SaveSetting(Setting) {\r\n      Setting.Type = \"Setting\";\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function DeleteSetting(Setting) {\r\n\r\n      Setting._deleted = true;\r\n      Setting.DeletedAt = new Date();\r\n\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise;\r\n    }\r\n\r\n  }\r\n  SettingsService.$inject = [\"$resource\"];\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.settings',\r\n      config: {\r\n        url: '/settings',\r\n        controller: \"SettingsController\",\r\n        templateUrl: 'src/settings/overview/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app.plists')\n    .factory('PlistsService', PlistsService);\n\n  /* @ngInject */\n  function PlistsService($resource, Plist) {\n\n    var service = {\n      GetPlists: GetPlists,\n      GetPlist: GetPlist,\n      SavePlist: SavePlist,\n      DeletePlist: DeletePlist,\n    }\n\n    return service;\n\n    function GetPlists(params) {\n      var params = params || {};\n      return Plist\n        .find({\n          filter: {\n            order: params.order || \"CreatedAt DESC\",\n          },\n        })\n        .$promise\n        .then(function(data) {\n          return data;\n        });\n    }\n\n    function GetPlist(id) {\n      return Plist\n        .findById({\n          id: id\n        })\n        .$promise\n        .then(function(item) {\n          return item;\n        });\n    }\n\n    function SavePlist(plist) {\n\n      if (!plist.id) {\n        plist.CreatedAt = new Date();\n      }\n\n      plist.Participants = _.filter(plist.Participants, function(item) {\n        return (item.Name || item.Email);\n      });\n\n      return Plist\n        .updateOrCreate(plist)\n        .$promise\n        .then(function(item) {\n          return item;\n        });\n\n    }\n\n    function DeletePlist(id) {\n\n      return Plist\n        .deleteById({\n          id: id\n        })\n        .$promise\n        .then(function(item) {\n          return item;\n        });\n\n    }\n\n  }\r\n  PlistsService.$inject = [\"$resource\", \"Plist\"];\n}());\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.plists',\r\n      config: {\r\n        url: '/plists',\r\n        controller: \"PlistsController\",\r\n        templateUrl: 'src/plists/overview/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .factory('PlistsModals', PlistsModals);\r\n\r\n  PlistsModals.$inject = ['modalHelper'];\r\n\r\n  function PlistsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"PlistForm\",\r\n        config: {\r\n          templateUrl: 'src/plists/form/view.html',\r\n          controller: \"PlistFormController\",\r\n          size: \"md\",\r\n          backdrop: 'static',\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app.lotteries')\n    .factory('LotteriesService', LotteriesService);\n\n  /* @ngInject */\n  function LotteriesService($resource, Lottery) {\n\n    var service = {\n      GetLotteries: GetLotteries,\n      GetLottery: GetLottery,\n      SaveLottery: SaveLottery,\n      DeleteLottery: DeleteLottery,\n    }\n\n    return service;\n\n    function GetLotteries(params) {\n      var params = params || {};\n      return Lottery\n        .find({\n          filter: {\n            order: params.order || \"CreatedAt DESC\",\n          },\n        })\n        .$promise\n        .then(function(data) {\n          return data;\n        });\n    }\n\n    function GetLottery(id) {\n      return Lottery\n        .findById({\n          id: id\n        })\n        .$promise\n        .then(function(item) {\n          return item;\n        });\n    }\n\n    function SaveLottery(lottery) {\n\n      lottery.DrewAt = new Date();\n      return Lottery\n        .create(lottery)\n        .$promise\n        .then(function(item) {\n          return item;\n        });\n\n    }\n\n    function DeleteLottery(id) {\n\n      return Lottery\n        .deleteById({\n          id: id\n        })\n        .$promise\n        .then(function(item) {\n          return item;\n        });\n\n    }\n\n  }\r\n  LotteriesService.$inject = [\"$resource\", \"Lottery\"];\n}());\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.lotteries',\r\n      config: {\r\n        abstract: true,\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'app.lotteries.overview',\r\n      config: {\r\n        url: '/',\r\n        controller: \"LotteriesController\",\r\n        templateUrl: 'src/lotteries/overview/view.html',\r\n      }\r\n    }, {\r\n      state: 'app.lotteries.lottery',\r\n      config: {\r\n        url: '/lottery/:ID',\r\n        controller: \"LotteryController\",\r\n        templateUrl: 'src/lotteries/lottery/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .factory('LotteriesModals', LotteriesModals);\r\n\r\n  LotteriesModals.$inject = ['modalHelper'];\r\n\r\n  function LotteriesModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"LotteryInit\",\r\n        config: {\r\n          templateUrl: 'src/lotteries/init/view.html',\r\n          controller: \"LotteryInitController\",\r\n          size: \"sm\"\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app.auth')\n    .run(appRun);\n\n  appRun.$inject = ['routerHelper'];\n\n  function appRun(routerHelper) {\n    routerHelper.configureStates(getStates());\n  }\n\n  function getStates() {\n    return [{\n      state: 'auth',\n      config: {\n        abstract: true,\n        template: '<ui-view/>',\n      }\n    }, {\n      state: 'auth.login',\n      config: {\n        url: '/login',\n        params: {\n          ref: null\n        },\n        templateUrl: \"src/auth/login/view.html\",\n        controller: \"AuthLoginController\",\n      }\n    }, {\n      state: 'auth.logout',\n      config: {\n        url: '/logout',\n        template: \"<ui-view/>\",\n        controller: function(User, $state) {\n          User\n            .logout()\n            .$promise\n            .then(function() {})\n            .finally(function() {\n              localStorage.clear();\n              $state.go(\"auth.login\", {\n                ref: \"SIGNOUT\"\n              });\n            })\n\n        },\n      }\n    }];\n  }\n\n}());\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .config(AuthInterceptorConfig)\r\n    .factory('AuthInterceptor', AuthInterceptor);\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptor($q, $injector,$cookies) {\r\n\r\n    return {\r\n      responseError: function(rejection) {\r\n        console.log(\"rejection\",rejection);\r\n        if (rejection.status === 401 && !rejection.config.IsSignIn) {\r\n        console.log(\"rejection2\",rejection);\r\n          localStorage.clear();\r\n          var $state = $injector.get('$state');\r\n          $state.go('auth.login', {\r\n            ref: \"SESSIONEND\"\r\n          });\r\n        }\r\n        return $q.reject(rejection);\r\n      }\r\n    };\r\n\r\n  }\r\n  AuthInterceptor.$inject = [\"$q\", \"$injector\", \"$cookies\"];\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptorConfig($httpProvider) {\r\n    $httpProvider.interceptors.push(\"AuthInterceptor\");\r\n  }\r\n  AuthInterceptorConfig.$inject = [\"$httpProvider\"];\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .constant('LoginMessages', {\r\n      SESSIONEND: {\r\n        Type: \"danger\",\r\n        Message: \"You were signed out\",\r\n        Details: \"Probably your session was timed out\",\r\n      },\r\n      SIGNOUT: {\r\n        Type: \"success\",\r\n        Message: \"You were signed out\",\r\n        Details: \"You may login again using the form\",\r\n      },\r\n      REGISTERED: {\r\n        Type: \"success\",\r\n        Message: \"Your account is ready, you can login now\",\r\n        Details: false,\r\n      },\r\n      AUTHERROR: {\r\n        Type: \"danger\",\r\n        Message: \"Authentication Error\",\r\n        Details: null,\r\n      },\r\n      UNAVAILABLE: {\r\n        Type: \"danger\",\r\n        Message: \"Service is not available\",\r\n        Details: \"Please try again later. If the problem insist, contact your system administrator\",\r\n      },\r\n      UNAUTHORIZED: {\r\n        Type: \"danger\",\r\n        Message: \"Name or password is incorrect\",\r\n        Details: \"Please try again\",\r\n      },\r\n    });\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular.module('app', [\r\n\r\n    'app.auth',\r\n    'app.lotteries',\r\n    'app.plists',\r\n    'app.settings',\r\n    'app._common',\r\n\r\n  ]);\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n\r\n    $rootScope.$on('$stateChangeStart', function(evt, to, params) {\r\n\r\n      if (to.redirectTo) {\r\n        evt.preventDefault();\r\n        $state.go(to.redirectTo, params);\r\n      }\r\n\r\n    });\r\n    \r\n  }\r\n  appRun.$inject = [\"$rootScope\", \"$state\", \"$stateParams\"];\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('configHelper', configHelperProvider);\r\n\r\n  configHelperProvider.$inject = [];\r\n\r\n  function configHelperProvider() {\r\n    /* jshint validthis:true */\r\n    this.$get = ConfigHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    ConfigHelper.$inject = [];\r\n\r\n    function ConfigHelper() {\r\n\r\n      var service = {\r\n        notifyConfig: notifyConfig\r\n      };\r\n\r\n      return service;\r\n\r\n      //function notifyConfig() {}\r\n      function notifyConfig(configName, message) {\r\n        message = message || {};\r\n        console.log(\"%c CONFIG - \" + configName + \" \", 'background: #9C27B0; color: #FFF', message);\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('numberFixedLen', numberFixedLen)\r\n\r\n  numberFixedLen.$inject = []\r\n\r\n  function numberFixedLen() {\r\n    return function(a, b) {\r\n      return (1e4 + a + \"\").slice(-b)\r\n    }\r\n  }\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('fromNow', fromNow)\r\n\r\n  fromNow.$inject = []\r\n\r\n  function fromNow() {\r\n    return function(date) {\r\n      return moment(date).fromNow();\r\n    }\r\n  }\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('fileicon', fileicon)\r\n\r\n  fileicon.$inject = []\r\n\r\n  function fileicon() {\r\n    var _icons = {\r\n      \"application/pdf\": \"fa-file-pdf-o\",\r\n      \"application/powerpoint\": \"fa-file-powerpoint-o\",\r\n      \"application/x-msword\": \"fa-file-word-o\",\r\n      \"application/x-msexcel\": \"fa-file-excel-o\",\r\n      \"application/x-mspowerpoint\": \"fa-file-powerpoint-o\",\r\n      \"audio/x-mpeg-3\": \"fa-file-audio-o\",\r\n      \"image/gif\": \"fa-file-image-o\",\r\n      \"image/png\": \"fa-file-image-o\",\r\n      \"image/tiff\": \"fa-file-image-o\",\r\n      \"image/jpeg\": \"fa-file-image-o\",\r\n      \"video/avi\": \"fa-file-video-o\",\r\n      \"video/mpeg\": \"fa-file-video-o\",\r\n      \"video/msvideo\": \"fa-file-video-o\",\r\n      \"video/quicktime\": \"fa-file-video-o\",\r\n      \"application/zip\": \"fa-file-zip-o\"\r\n    };\r\n    return function(a) {\r\n      return _icons[a] || \"fa-file-o\";\r\n    }\r\n  }\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('bytes', bytes)\r\n\r\n  bytes.$inject = []\r\n\r\n  function bytes() {\r\n    return function(bytes, precision) {\r\n      if (isNaN(parseFloat(bytes)) || !isFinite(bytes)) return '-';\r\n      if (typeof precision === 'undefined') precision = 1;\r\n      var units = ['bytes', 'kB', 'MB', 'GB', 'TB', 'PB'],\r\n        number = Math.floor(Math.log(bytes) / Math.log(1024));\r\n      return (bytes / Math.pow(1024, Math.floor(number))).toFixed(precision) + ' ' + units[number];\r\n    }\r\n  }\r\n}());\r\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .directive('ngPrint', ngPrint)\n\n  /* @ngInject */\n  function ngPrint() {\n    var printSection = document.getElementById('printSection');\n    // if there is no printing section, create one\n    if (!printSection) {\n      printSection = document.createElement('div');\n      printSection.id = 'printSection';\n      document.body.appendChild(printSection);\n    }\n\n    function link(scope, element, attrs) {\n\n      element.on('click', function() {\n        var elemToPrint = document.getElementById(attrs.printElementId);\n        if (elemToPrint) {\n          printElement(elemToPrint);\n        }\n      });\n\n      var beforePrint = function() {\n        console.log('Functionality to run before printing.');\n      };\n      var afterPrint = function() {\n        console.log('Functionality to run after printing');\n        printSection.innerHTML = '';\n      };\n\n      if (window.matchMedia) {\n        var mediaQueryList = window.matchMedia('print');\n        mediaQueryList.addListener(function(mql) {\n          if (mql.matches) {\n            beforePrint();\n          } else {\n            afterPrint();\n          }\n        });\n      }\n\n      window.onbeforeprint = beforePrint;\n      window.onafterprint = afterPrint;\n\n    }\n\n    function printElement(elem) {\n      // clones the element you want to print\n      var domClone = elem.cloneNode(true);\n      printSection.appendChild(domClone);\n      window.print();\n    }\n    return {\n      link: link,\n      restrict: 'A'\n    };\n  }\n\n}());\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .directive('errSrc', errSrc)\n\n  /* @ngInject */\n  function errSrc() {\n    return {\n      link: function(scope, element, attrs) {\n        if (!attrs.ngSrc) {\n          attrs.$set('src', attrs.errSrc);\n        }\n\n        element.bind('error', function() {\n\n          if (attrs.errSrc == \"REMOVE\") {\n            element.remove();\n            return;\n          }\n          if (attrs.src != attrs.errSrc) {\n            attrs.$set('src', attrs.errSrc);\n          }\n        });\n\n      }\n    }\n  }\n\n}());\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .directive('ngConfirmClick', ngConfirmClick)\n\n  /* @ngInject */\n  function ngConfirmClick() {\n    return {\n      priority: -1,\n      restrict: 'A',\n      link: function(scope, element, attrs){\n        element.bind('click', function(e){\n          var message = attrs.ngConfirmClick;\n          if(message && !confirm(message)){\n            e.stopImmediatePropagation();\n            e.preventDefault();\n          }\n        });\n      }\n    }\n  }\n\n}());\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig(configHelperProvider, $locationProvider) {\r\n    $locationProvider.html5Mode(true);\r\n\r\n    configHelperProvider.$get().notifyConfig(\"Location HTML5\", true);\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig($httpProvider) {\r\n    $httpProvider.defaults.withCredentials = true;\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings', []);\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .controller('SettingsController', SettingsController);\r\n\r\n  /* @ngInject */\r\n  function SettingsController(SettingsService) {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n    }\r\n\r\n\r\n  }\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists', []);\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .controller('PlistsController', PlistsController);\r\n\r\n  /* @ngInject */\r\n  function PlistsController(PlistsService, PlistsModals) {\r\n\r\n    var vm = this;\r\n\r\n    vm.AddPlist = AddPlist;\r\n    vm.ViewPlist = ViewPlist;\r\n    vm.DeletePlist = DeletePlist;\r\n    vm.LoadPlists = LoadPlists;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadPlists();\r\n    }\r\n\r\n    function LoadPlists(params) {\r\n      vm.loading = true;\r\n      PlistsService\r\n        .GetPlists(params)\r\n        .then(function(plists) {\r\n          vm.Plists = plists;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function AddPlist() {\r\n      PlistsModals\r\n        .PlistForm()\r\n        .then(function() {\r\n          vm.LoadPlists();\r\n        });\r\n    }\r\n\r\n    function ViewPlist(id) {\r\n      PlistsModals\r\n        .PlistForm({\r\n          ID: id\r\n        })\r\n        .then(function() {\r\n          vm.LoadPlists();\r\n        });\r\n    }\r\n\r\n    function DeletePlist(id) {\r\n      console.log(\"DELE\");\r\n      // PlistsService\r\n      //   .DeletePlist(id)\r\n      //   .then(function() {\r\n      //     vm.LoadPlists();\r\n      //   });\r\n    }\r\n\r\n  }\r\n})();\r\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.plists')\n    .controller(\"PlistFormController\", PlistFormController);\n\n  /* @ngInject */\n  function PlistFormController($modalInstance, ModalParams, PlistsService) {\n    var vm = this;\n\n    vm.Plist = {\n      Participants: [],\n    };\n\n    vm.AddParticipants = AddParticipants;\n    vm.RemoveParticipant = RemoveParticipant;\n    vm.Save = Save;\n\n    activate();\n\n    function activate() {\n      if (ModalParams.ID) {\n        vm.loading = true;\n        PlistsService\n          .GetPlist(ModalParams.ID)\n          .then(function(data) {\n            vm.Plist = data;\n\n            if (vm.Plist.Participants.length === 0) {\n              vm.AddParticipants();\n            }\n\n          })\n          .finally(function() {\n            vm.loading = false;\n          });\n      } else {\n        vm.AddParticipants();\n      }\n    }\n\n    function AddParticipants() {\n      for (var i = 0; i < 5; i++) {\n        vm.Plist.Participants.push({});\n      }\n    }\n\n    function RemoveParticipant(index) {\n      vm.Plist.Participants.splice(index, 1);\n    }\n\n    function Save() {\n      vm.loading = true;\n      PlistsService\n        .SavePlist(angular.copy(vm.Plist))\n        .then(function() {\n          vm.loading = false;\n          $modalInstance.close();\n        });\n    }\n\n\n  }\n\n}());\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries', []);\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .controller('LotteriesController', LotteriesController);\r\n\r\n  /* @ngInject */\r\n  function LotteriesController($state, LotteriesService, LotteriesModals) {\r\n    var vm = this;\r\n\r\n    vm.AddLottery = AddLottery;\r\n    vm.DeleteLottery = DeleteLottery;\r\n    vm.LoadLotteries = LoadLotteries;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadLotteries();\r\n    }\r\n\r\n    function LoadLotteries() {\r\n      vm.loading = true;\r\n      return LotteriesService\r\n        .GetLotteries()\r\n        .then(function(data) {\r\n          vm.Lotteries = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function AddLottery() {\r\n      LotteriesModals\r\n        .LotteryInit()\r\n        .then(function(id) {\r\n          if (id) {\r\n            $state.go(\"app.lotteries.lottery\", {\r\n              ID: id\r\n            });\r\n          }\r\n        });\r\n    }\r\n\r\n    function DeleteLottery(lottery) {\r\n      LotteriesService\r\n        .DeleteLottery(lottery)\r\n        .then(function() {\r\n          vm.LoadLotteries();\r\n        });\r\n    }\r\n\r\n  }\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .controller('LotteryController', LotteryController);\r\n\r\n  /* @ngInject */\r\n  function LotteryController(LotteriesService, $stateParams) {\r\n    var vm = this;\r\n\r\n    vm.LoadLottery = LoadLottery;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadLottery();\r\n    }\r\n\r\n    function LoadLottery() {\r\n      vm.loading = true;\r\n      LotteriesService\r\n        .GetLottery($stateParams.ID)\r\n        .then(function(data) {\r\n          vm.Lottery = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n  }\r\n})();\r\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.lotteries')\n    .controller(\"LotteryInitController\", LotteryInitController);\n\n  /* @ngInject */\n  function LotteryInitController($modalInstance, ModalParams, LotteriesService, PlistsService) {\n    var vm = this;\n\n    vm.Lottery = {\n      Name: \"Lottery #\" + Math.floor((Math.random() * 99999) + 10000),\n    };\n\n    vm.LoadPlists = LoadPlists;\n    vm.Save = Save;\n\n    activate();\n\n    function activate() {\n      vm.LoadPlists();\n    }\n\n    function LoadPlists() {\n      vm.loading = true;\n      PlistsService\n        .GetPlists()\n        .then(function(data) {\n          vm.Plists = data;\n        })\n        .finally(function() {\n          vm.loading = false;\n        });\n    }\n\n    function Save() {\n      LotteriesService\n        .SaveLottery(vm.Lottery)\n        .then(function(resp) {\n          $modalInstance.close(resp.id);\n        });\n    }\n\n\n  }\n\n}());\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth', [])\r\n\r\n}());\r\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.auth')\n    .controller('AuthLoginController', AuthLoginController);\n\n  /* @ngInject */\n  function AuthLoginController($stateParams, $state, LoginMessages, User) {\n    var vm = this;\n\n    vm.loading = false;\n    vm.SignIn = SignIn;\n\n    activate();\n\n    function activate() {\n\n      if ($stateParams.ref) {\n        SignMessage($stateParams.ref.toUpperCase());\n      }\n    }\n\n    function SignIn() {\n\n      vm.loading = true;\n      vm.Alert = false;\n\n      User\n        .login(vm.credentials)\n        .$promise\n        .then(function(response) {\n          $state.go(\"app.lotteries.overview\");\n        }, function(rejection) {\n          SignMessage(rejection.error.toUpperCase());\n          vm.loading = false;\n        });\n    }\n\n    function SignMessage(CODE) {\n      vm.Alert = LoginMessages[CODE];\n    }\n\n  }\n\n}());\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .run(RoutesConfig);\r\n\r\n  RoutesConfig.$inject = ['configHelper', 'routerHelper'];\r\n\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n\r\n    var _states = getStates();\r\n    routerHelper.configureStates(_states, \"/\");\r\n\r\n    configHelper.notifyConfig(\"Basic Routes\", _.map(_states, function(_state) {\r\n      return _state.state;\r\n    }));\r\n\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app',\r\n      config: {\r\n        abstract: true,\r\n        templateUrl: 'src/_common/views/layout.html',\r\n        controller: function($scope, User) {\r\n          User.getCurrent()\r\n            .$promise\r\n            .then(function(u) {\r\n              $scope.username = u.username;\r\n            });\r\n        }\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsService', SettingsService);\r\n\r\n  /* @ngInject */\r\n  function SettingsService($resource) {\r\n\r\n    var service = {\r\n      GetSettings: GetSettings,\r\n      GetSetting: GetSetting,\r\n      SaveSetting: SaveSetting,\r\n      DeleteSetting: DeleteSetting,\r\n    }\r\n\r\n    return service;\r\n\r\n    function GetSettings(params) {\r\n      return $resource(APP.Service + \"_design/models/_view/Settings\")\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return _.chain(data.rows)\r\n            .map(function(item) {\r\n              return item.value;\r\n            })\r\n            .sortBy(function(item) {\r\n              return item.DrewAt || 0;\r\n            })\r\n            .reverse()\r\n            .value();\r\n        });\r\n    }\r\n\r\n    function GetSetting(id) {\r\n      return $resource(APP.Service + id)\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function SaveSetting(Setting) {\r\n      Setting.Type = \"Setting\";\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function DeleteSetting(Setting) {\r\n\r\n      Setting._deleted = true;\r\n      Setting.DeletedAt = new Date();\r\n\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise;\r\n    }\r\n\r\n  }\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.settings',\r\n      config: {\r\n        url: '/settings',\r\n        controller: \"SettingsController\",\r\n        templateUrl: 'src/settings/overview/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app.plists')\n    .factory('PlistsService', PlistsService);\n\n  /* @ngInject */\n  function PlistsService($resource, Plist) {\n\n    var service = {\n      GetPlists: GetPlists,\n      GetPlist: GetPlist,\n      SavePlist: SavePlist,\n      DeletePlist: DeletePlist,\n    }\n\n    return service;\n\n    function GetPlists(params) {\n      var params = params || {};\n      return Plist\n        .find({\n          filter: {\n            order: params.order || \"CreatedAt DESC\",\n          },\n        })\n        .$promise\n        .then(function(data) {\n          return data;\n        });\n    }\n\n    function GetPlist(id) {\n      return Plist\n        .findById({\n          id: id\n        })\n        .$promise\n        .then(function(item) {\n          return item;\n        });\n    }\n\n    function SavePlist(plist) {\n\n      if (!plist.id) {\n        plist.CreatedAt = new Date();\n      }\n\n      plist.Participants = _.filter(plist.Participants, function(item) {\n        return (item.Name || item.Email);\n      });\n\n      return Plist\n        .updateOrCreate(plist)\n        .$promise\n        .then(function(item) {\n          return item;\n        });\n\n    }\n\n    function DeletePlist(id) {\n\n      return Plist\n        .deleteById({\n          id: id\n        })\n        .$promise\n        .then(function(item) {\n          return item;\n        });\n\n    }\n\n  }\n}());\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.plists',\r\n      config: {\r\n        url: '/plists',\r\n        controller: \"PlistsController\",\r\n        templateUrl: 'src/plists/overview/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .factory('PlistsModals', PlistsModals);\r\n\r\n  PlistsModals.$inject = ['modalHelper'];\r\n\r\n  function PlistsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"PlistForm\",\r\n        config: {\r\n          templateUrl: 'src/plists/form/view.html',\r\n          controller: \"PlistFormController\",\r\n          size: \"md\",\r\n          backdrop: 'static',\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app.lotteries')\n    .factory('LotteriesService', LotteriesService);\n\n  /* @ngInject */\n  function LotteriesService($resource, Lottery) {\n\n    var service = {\n      GetLotteries: GetLotteries,\n      GetLottery: GetLottery,\n      SaveLottery: SaveLottery,\n      DeleteLottery: DeleteLottery,\n    }\n\n    return service;\n\n    function GetLotteries(params) {\n      var params = params || {};\n      return Lottery\n        .find({\n          filter: {\n            order: params.order || \"CreatedAt DESC\",\n          },\n        })\n        .$promise\n        .then(function(data) {\n          return data;\n        });\n    }\n\n    function GetLottery(id) {\n      return Lottery\n        .findById({\n          id: id\n        })\n        .$promise\n        .then(function(item) {\n          return item;\n        });\n    }\n\n    function SaveLottery(lottery) {\n\n      lottery.DrewAt = new Date();\n      return Lottery\n        .create(lottery)\n        .$promise\n        .then(function(item) {\n          return item;\n        });\n\n    }\n\n    function DeleteLottery(id) {\n\n      return Lottery\n        .deleteById({\n          id: id\n        })\n        .$promise\n        .then(function(item) {\n          return item;\n        });\n\n    }\n\n  }\n}());\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.lotteries',\r\n      config: {\r\n        abstract: true,\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'app.lotteries.overview',\r\n      config: {\r\n        url: '/',\r\n        controller: \"LotteriesController\",\r\n        templateUrl: 'src/lotteries/overview/view.html',\r\n      }\r\n    }, {\r\n      state: 'app.lotteries.lottery',\r\n      config: {\r\n        url: '/lottery/:ID',\r\n        controller: \"LotteryController\",\r\n        templateUrl: 'src/lotteries/lottery/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .factory('LotteriesModals', LotteriesModals);\r\n\r\n  LotteriesModals.$inject = ['modalHelper'];\r\n\r\n  function LotteriesModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"LotteryInit\",\r\n        config: {\r\n          templateUrl: 'src/lotteries/init/view.html',\r\n          controller: \"LotteryInitController\",\r\n          size: \"sm\"\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app.auth')\n    .run(appRun);\n\n  appRun.$inject = ['routerHelper'];\n\n  function appRun(routerHelper) {\n    routerHelper.configureStates(getStates());\n  }\n\n  function getStates() {\n    return [{\n      state: 'auth',\n      config: {\n        abstract: true,\n        template: '<ui-view/>',\n      }\n    }, {\n      state: 'auth.login',\n      config: {\n        url: '/login',\n        params: {\n          ref: null\n        },\n        templateUrl: \"src/auth/login/view.html\",\n        controller: \"AuthLoginController\",\n      }\n    }, {\n      state: 'auth.logout',\n      config: {\n        url: '/logout',\n        template: \"<ui-view/>\",\n        controller: function(User, $state) {\n          User\n            .logout()\n            .$promise\n            .then(function() {})\n            .finally(function() {\n              localStorage.clear();\n              $state.go(\"auth.login\", {\n                ref: \"SIGNOUT\"\n              });\n            })\n\n        },\n      }\n    }];\n  }\n\n}());\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .config(AuthInterceptorConfig)\r\n    .factory('AuthInterceptor', AuthInterceptor);\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptor($q, $injector,$cookies) {\r\n\r\n    return {\r\n      responseError: function(rejection) {\r\n        console.log(\"rejection\",rejection);\r\n        if (rejection.status === 401 && !rejection.config.IsSignIn) {\r\n        console.log(\"rejection2\",rejection);\r\n          localStorage.clear();\r\n          var $state = $injector.get('$state');\r\n          $state.go('auth.login', {\r\n            ref: \"SESSIONEND\"\r\n          });\r\n        }\r\n        return $q.reject(rejection);\r\n      }\r\n    };\r\n\r\n  }\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptorConfig($httpProvider) {\r\n    $httpProvider.interceptors.push(\"AuthInterceptor\");\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .constant('LoginMessages', {\r\n      SESSIONEND: {\r\n        Type: \"danger\",\r\n        Message: \"You were signed out\",\r\n        Details: \"Probably your session was timed out\",\r\n      },\r\n      SIGNOUT: {\r\n        Type: \"success\",\r\n        Message: \"You were signed out\",\r\n        Details: \"You may login again using the form\",\r\n      },\r\n      REGISTERED: {\r\n        Type: \"success\",\r\n        Message: \"Your account is ready, you can login now\",\r\n        Details: false,\r\n      },\r\n      AUTHERROR: {\r\n        Type: \"danger\",\r\n        Message: \"Authentication Error\",\r\n        Details: null,\r\n      },\r\n      UNAVAILABLE: {\r\n        Type: \"danger\",\r\n        Message: \"Service is not available\",\r\n        Details: \"Please try again later. If the problem insist, contact your system administrator\",\r\n      },\r\n      UNAUTHORIZED: {\r\n        Type: \"danger\",\r\n        Message: \"Name or password is incorrect\",\r\n        Details: \"Please try again\",\r\n      },\r\n    });\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular.module('app', [\r\n\r\n    'app.auth',\r\n    'app.lotteries',\r\n    'app.plists',\r\n    'app.settings',\r\n    'app._common',\r\n\r\n  ]);\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n\r\n    $rootScope.$on('$stateChangeStart', function(evt, to, params) {\r\n\r\n      if (to.redirectTo) {\r\n        evt.preventDefault();\r\n        $state.go(to.redirectTo, params);\r\n      }\r\n\r\n    });\r\n    \r\n  }\r\n\r\n}());\r\n"],"sourceRoot":"/source/"}