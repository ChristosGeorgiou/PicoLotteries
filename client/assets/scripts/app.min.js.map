{"version":3,"sources":["_common/_module.js","_common/helpers/route.helper.js","_common/helpers/modal.helper.js","app.min.js","_common/helpers/config.helper.js","_common/filters/numberfixedlen.js","_common/filters/fromnow.js","_common/filters/fileicon.js","_common/filters/bytes.js","_common/directives/ngprint.js","_common/directives/errsrc.js","_common/directives/confirm.js","_common/configs/location.config.js","_common/configs/http.config.js","settings/_module.js","settings/overview/controller.js","settings/changepassword/controller.js","plists/_module.js","plists/overview/controller.js","plists/form/controller.js","lotteries/_module.js","lotteries/overview/controller.js","lotteries/lottery/controller.js","lotteries/init/controller.js","auth/_module.js","auth/login/controller.js","_common/routes.js","settings/service.js","settings/routes.js","settings/modals.js","plists/service.js","plists/routes.js","plists/modals.js","lotteries/service.js","lotteries/routes.js","lotteries/modals.js","auth/routes.js","auth/interceptor.js","auth/constants.js","app.js","run.js"],"names":["angular","module","routerHelperProvider","$locationProvider","$stateProvider","$urlRouterProvider","RouterHelper","$state","configureStates","states","otherwisePath","forEach","state","config","controllerAs","extend","views","_","each","item","hasOtherwise","otherwise","getStates","get","service","this","$get","$inject","provider","modalHelperProvider","modalHelper","$uibModal","$q","configureModals","modals","_ret","modal","obj","ModalResultComplete","response","ModalResultFailed","reason","reject","resolve","ModalParams","open","result","then","configHelperProvider","ConfigHelper","notifyConfig","configName","message","console","log","numberFixedLen","a","b","slice","filter","fromNow","date","moment","fileicon","_icons","application/pdf","application/powerpoint","application/x-msword","application/x-msexcel","application/x-mspowerpoint","audio/x-mpeg-3","image/gif","image/png","image/tiff","image/jpeg","video/avi","video/mpeg","video/msvideo","video/quicktime","application/zip","bytes","precision","isNaN","parseFloat","isFinite","units","number","Math","floor","pow","toFixed","ngPrint","link","scope","element","attrs","on","elemToPrint","document","getElementById","printElementId","printElement","beforePrint","afterPrint","printSection","innerHTML","window","matchMedia","mediaQueryList","addListener","mql","matches","onbeforeprint","onafterprint","elem","domClone","cloneNode","appendChild","print","createElement","id","body","restrict","directive","errSrc","ngSrc","$set","bind","remove","src","ngConfirmClick","priority","e","confirm","stopImmediatePropagation","preventDefault","LocationConfig","html5Mode","$httpProvider","defaults","withCredentials","SettingsController","SettingsService","SettingsModals","activate","ChangePassword","go","ref","vm","controller","ChangePasswordController","$modalInstance","User","Save","loading","prototype$updateAttributes","getCurrentId","password","Password","$promise","user","close","PlistsController","PlistsService","PlistsModals","LoadPlists","params","GetPlists","plists","Plists","AddPlist","PlistForm","ViewPlist","ID","DeletePlist","PlistFormController","GetPlist","data","Plist","Participants","length","AddParticipants","i","push","RemoveParticipant","index","splice","SavePlist","copy","LotteriesController","LotteriesService","LotteriesModals","LoadLotteries","GetLotteries","Lotteries","AddLottery","LotteryInit","DeleteLottery","lottery","LotteryController","$stateParams","LoadLottery","GetLottery","Lottery","LotteryInitController","SaveLottery","resp","Name","random","AuthLoginController","LoginMessages","SignMessage","toUpperCase","SignIn","Alert","login","credentials","rejection","error","code","RoutesConfig","configHelper","routerHelper","_states","map","_state","abstract","templateUrl","$scope","getCurrent","u","username","run","$resource","GetSettings","APP","Service","chain","rows","value","sortBy","DrewAt","reverse","GetSetting","SaveSetting","Setting","Type","save","DeleteSetting","_deleted","DeletedAt","Date","factory","appRun","url","getModals","size","find","order","findById","plist","CreatedAt","Email","updateOrCreate","deleteById","backdrop","create","template","logout","localStorage","clear","AuthInterceptor","$injector","$cookies","responseError","status","AuthInterceptorConfig","interceptors","constant","SESSIONEND","Message","Details","SIGNOUT","REGISTERED","AUTHERROR","UNAVAILABLE","LOGIN_FAILED","$rootScope","$on","evt","to","redirectTo"],"mappings":"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","file":"app.min.js","sourcesContent":["(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common', [\r\n      'lbServices',\r\n\r\n      'ngResource',\r\n      'ngSanitize',\r\n      'ngCookies',\r\n      \r\n      'ui.bootstrap',\r\n      'ui.router',\r\n    ]);\r\n})();\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('routerHelper', routerHelperProvider);\r\n\r\n  routerHelperProvider.$inject = ['$locationProvider', '$stateProvider', '$urlRouterProvider'];\r\n  /* @ngInject */\r\n  function routerHelperProvider($locationProvider, $stateProvider, $urlRouterProvider) {\r\n    /* jshint validthis:true */\r\n    this.$get = RouterHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    RouterHelper.$inject = ['$state'];\r\n\r\n    function RouterHelper($state) {\r\n      var hasOtherwise = false;\r\n\r\n      var service = {\r\n        configureStates: configureStates,\r\n        getStates: getStates\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureStates(states, otherwisePath) {\r\n        states.forEach(function(state) {\r\n\r\n          var config = {\r\n            controllerAs: 'vm',\r\n          };\r\n\r\n          angular.extend(config, state.config);\r\n\r\n          if (config.views) {\r\n            _.each(config.views, function(item) {\r\n              item.controllerAs = 'vm';\r\n            });\r\n          }\r\n\r\n          $stateProvider.state(state.state, config);\r\n        });\r\n        if (otherwisePath && !hasOtherwise) {\r\n          hasOtherwise = true;\r\n          $urlRouterProvider.otherwise(otherwisePath);\r\n        }\r\n      }\r\n\r\n      function getStates() {\r\n        return $state.get();\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('modalHelper', modalHelperProvider);\r\n\r\n  modalHelperProvider.$inject = [];\r\n  /* @ngInject */\r\n  function modalHelperProvider() {\r\n    /* jshint validthis:true */\r\n    this.$get = modalHelper;\r\n\r\n    /* @ngInject */\r\n    function modalHelper($uibModal, $q) {\r\n\r\n      var service = {\r\n        configureModals: configureModals\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureModals(modals) {\r\n        var _ret = {};\r\n        angular.forEach(modals, function(modal) {\r\n          _ret[modal.modal] = function(obj) {\r\n            var config = {\r\n              controllerAs: 'vm',\r\n              resolve: {\r\n                ModalParams: function() {\r\n                  return obj || {};\r\n                }\r\n              }\r\n            };\r\n            angular.extend(config, modal.config);\r\n\r\n            return $uibModal\r\n              .open(config)\r\n              .result\r\n              .then(ModalResultComplete)\r\n              .catch(ModalResultFailed);\r\n\r\n            function ModalResultComplete(response) {\r\n              return response;\r\n            }\r\n\r\n            function ModalResultFailed(reason) {\r\n              if (reason && reason !== \"backdrop click\") {\r\n                return $q.reject();\r\n              }\r\n            }\r\n          };\r\n        });\r\n        return _ret;\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common', [\r\n      'lbServices',\r\n\r\n      'ngResource',\r\n      'ngSanitize',\r\n      'ngCookies',\r\n      \r\n      'ui.bootstrap',\r\n      'ui.router',\r\n    ]);\r\n})();\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('routerHelper', routerHelperProvider);\r\n\r\n  routerHelperProvider.$inject = ['$locationProvider', '$stateProvider', '$urlRouterProvider'];\r\n  /* @ngInject */\r\n  function routerHelperProvider($locationProvider, $stateProvider, $urlRouterProvider) {\r\n    /* jshint validthis:true */\r\n    this.$get = RouterHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    RouterHelper.$inject = ['$state'];\r\n\r\n    function RouterHelper($state) {\r\n      var hasOtherwise = false;\r\n\r\n      var service = {\r\n        configureStates: configureStates,\r\n        getStates: getStates\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureStates(states, otherwisePath) {\r\n        states.forEach(function(state) {\r\n\r\n          var config = {\r\n            controllerAs: 'vm',\r\n          };\r\n\r\n          angular.extend(config, state.config);\r\n\r\n          if (config.views) {\r\n            _.each(config.views, function(item) {\r\n              item.controllerAs = 'vm';\r\n            });\r\n          }\r\n\r\n          $stateProvider.state(state.state, config);\r\n        });\r\n        if (otherwisePath && !hasOtherwise) {\r\n          hasOtherwise = true;\r\n          $urlRouterProvider.otherwise(otherwisePath);\r\n        }\r\n      }\r\n\r\n      function getStates() {\r\n        return $state.get();\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('modalHelper', modalHelperProvider);\r\n\r\n  modalHelperProvider.$inject = [];\r\n  /* @ngInject */\r\n  function modalHelperProvider() {\r\n    /* jshint validthis:true */\r\n    this.$get = modalHelper;\r\n\r\n    /* @ngInject */\r\n    function modalHelper($uibModal, $q) {\r\n\r\n      var service = {\r\n        configureModals: configureModals\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureModals(modals) {\r\n        var _ret = {};\r\n        angular.forEach(modals, function(modal) {\r\n          _ret[modal.modal] = function(obj) {\r\n            var config = {\r\n              controllerAs: 'vm',\r\n              resolve: {\r\n                ModalParams: function() {\r\n                  return obj || {};\r\n                }\r\n              }\r\n            };\r\n            angular.extend(config, modal.config);\r\n\r\n            return $uibModal\r\n              .open(config)\r\n              .result\r\n              .then(ModalResultComplete)\r\n              .catch(ModalResultFailed);\r\n\r\n            function ModalResultComplete(response) {\r\n              return response;\r\n            }\r\n\r\n            function ModalResultFailed(reason) {\r\n              if (reason && reason !== \"backdrop click\") {\r\n                return $q.reject();\r\n              }\r\n            }\r\n          };\r\n        });\r\n        return _ret;\r\n      }\r\n    }\r\n    modalHelper.$inject = [\"$uibModal\", \"$q\"];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('configHelper', configHelperProvider);\r\n\r\n  configHelperProvider.$inject = [];\r\n\r\n  function configHelperProvider() {\r\n    /* jshint validthis:true */\r\n    this.$get = ConfigHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    ConfigHelper.$inject = [];\r\n\r\n    function ConfigHelper() {\r\n\r\n      var service = {\r\n        notifyConfig: notifyConfig\r\n      };\r\n\r\n      return service;\r\n\r\n      //function notifyConfig() {}\r\n      function notifyConfig(configName, message) {\r\n        message = message || {};\r\n        console.log(\"%c CONFIG - \" + configName + \" \", 'background: #9C27B0; color: #FFF', message);\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('numberFixedLen', numberFixedLen)\r\n\r\n  numberFixedLen.$inject = []\r\n\r\n  function numberFixedLen() {\r\n    return function(a, b) {\r\n      return (1e4 + a + \"\").slice(-b)\r\n    }\r\n  }\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('fromNow', fromNow)\r\n\r\n  fromNow.$inject = []\r\n\r\n  function fromNow() {\r\n    return function(date) {\r\n      return moment(date).fromNow();\r\n    }\r\n  }\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('fileicon', fileicon)\r\n\r\n  fileicon.$inject = []\r\n\r\n  function fileicon() {\r\n    var _icons = {\r\n      \"application/pdf\": \"fa-file-pdf-o\",\r\n      \"application/powerpoint\": \"fa-file-powerpoint-o\",\r\n      \"application/x-msword\": \"fa-file-word-o\",\r\n      \"application/x-msexcel\": \"fa-file-excel-o\",\r\n      \"application/x-mspowerpoint\": \"fa-file-powerpoint-o\",\r\n      \"audio/x-mpeg-3\": \"fa-file-audio-o\",\r\n      \"image/gif\": \"fa-file-image-o\",\r\n      \"image/png\": \"fa-file-image-o\",\r\n      \"image/tiff\": \"fa-file-image-o\",\r\n      \"image/jpeg\": \"fa-file-image-o\",\r\n      \"video/avi\": \"fa-file-video-o\",\r\n      \"video/mpeg\": \"fa-file-video-o\",\r\n      \"video/msvideo\": \"fa-file-video-o\",\r\n      \"video/quicktime\": \"fa-file-video-o\",\r\n      \"application/zip\": \"fa-file-zip-o\"\r\n    };\r\n    return function(a) {\r\n      return _icons[a] || \"fa-file-o\";\r\n    }\r\n  }\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('bytes', bytes)\r\n\r\n  bytes.$inject = []\r\n\r\n  function bytes() {\r\n    return function(bytes, precision) {\r\n      if (isNaN(parseFloat(bytes)) || !isFinite(bytes)) return '-';\r\n      if (typeof precision === 'undefined') precision = 1;\r\n      var units = ['bytes', 'kB', 'MB', 'GB', 'TB', 'PB'],\r\n        number = Math.floor(Math.log(bytes) / Math.log(1024));\r\n      return (bytes / Math.pow(1024, Math.floor(number))).toFixed(precision) + ' ' + units[number];\r\n    }\r\n  }\r\n}());\r\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .directive('ngPrint', ngPrint)\n\n  /* @ngInject */\n  function ngPrint() {\n    var printSection = document.getElementById('printSection');\n    // if there is no printing section, create one\n    if (!printSection) {\n      printSection = document.createElement('div');\n      printSection.id = 'printSection';\n      document.body.appendChild(printSection);\n    }\n\n    function link(scope, element, attrs) {\n\n      element.on('click', function() {\n        var elemToPrint = document.getElementById(attrs.printElementId);\n        if (elemToPrint) {\n          printElement(elemToPrint);\n        }\n      });\n\n      var beforePrint = function() {\n        console.log('Functionality to run before printing.');\n      };\n      var afterPrint = function() {\n        console.log('Functionality to run after printing');\n        printSection.innerHTML = '';\n      };\n\n      if (window.matchMedia) {\n        var mediaQueryList = window.matchMedia('print');\n        mediaQueryList.addListener(function(mql) {\n          if (mql.matches) {\n            beforePrint();\n          } else {\n            afterPrint();\n          }\n        });\n      }\n\n      window.onbeforeprint = beforePrint;\n      window.onafterprint = afterPrint;\n\n    }\n\n    function printElement(elem) {\n      // clones the element you want to print\n      var domClone = elem.cloneNode(true);\n      printSection.appendChild(domClone);\n      window.print();\n    }\n    return {\n      link: link,\n      restrict: 'A'\n    };\n  }\n\n}());\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .directive('errSrc', errSrc)\n\n  /* @ngInject */\n  function errSrc() {\n    return {\n      link: function(scope, element, attrs) {\n        if (!attrs.ngSrc) {\n          attrs.$set('src', attrs.errSrc);\n        }\n\n        element.bind('error', function() {\n\n          if (attrs.errSrc == \"REMOVE\") {\n            element.remove();\n            return;\n          }\n          if (attrs.src != attrs.errSrc) {\n            attrs.$set('src', attrs.errSrc);\n          }\n        });\n\n      }\n    }\n  }\n\n}());\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .directive('ngConfirmClick', ngConfirmClick)\n\n  /* @ngInject */\n  function ngConfirmClick() {\n    return {\n      priority: -1,\n      restrict: 'A',\n      link: function(scope, element, attrs){\n        element.bind('click', function(e){\n          var message = attrs.ngConfirmClick;\n          if(message && !confirm(message)){\n            e.stopImmediatePropagation();\n            e.preventDefault();\n          }\n        });\n      }\n    }\n  }\n\n}());\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig(configHelperProvider, $locationProvider) {\r\n    $locationProvider.html5Mode(true);\r\n\r\n    configHelperProvider.$get().notifyConfig(\"Location HTML5\", true);\r\n  }\r\n  LocationConfig.$inject = [\"configHelperProvider\", \"$locationProvider\"];\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig($httpProvider) {\r\n    $httpProvider.defaults.withCredentials = true;\r\n  }\r\n  LocationConfig.$inject = [\"$httpProvider\"];\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings', []);\r\n})();\r\n;(function() {\n  'use strict';\n\n  angular\n    .module('app.settings')\n    .controller('SettingsController', SettingsController);\n\n  /* @ngInject */\n  function SettingsController(SettingsService, SettingsModals) {\n    var vm = this;\n\n    vm.ChangePassword = ChangePassword;\n\n    activate();\n\n    function activate() {}\n\n    function ChangePassword() {\n      SettingsModals\n        .ChangePassword()\n        .then(function() {\n          $state.go(\"auth.logout\", {\n            ref: \"SIGNOUT\"\n          });\n        });\n    }\n\n  }\r\n  SettingsController.$inject = [\"SettingsService\", \"SettingsModals\"];\n})();\n;(function() {\n  'use strict';\n\n  angular\n    .module('app.settings')\n    .controller(\"ChangePasswordController\", ChangePasswordController);\n\n  /* @ngInject */\n  function ChangePasswordController($modalInstance, ModalParams, User) {\n    var vm = this;\n\n    vm.Save = Save;\n\n    activate();\n\n    function activate() {}\n\n    function Save() {\n      vm.loading = true;\n      User.prototype$updateAttributes({\n          id: User.getCurrentId(),\n          password: vm.Password\n        })\n        .$promise\n        .then(function(user) {\n          vm.loading = false;\n          $modalInstance.close();\n        });\n    }\n\n  }\r\n  ChangePasswordController.$inject = [\"$modalInstance\", \"ModalParams\", \"User\"];\n\n}());\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists', []);\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .controller('PlistsController', PlistsController);\r\n\r\n  /* @ngInject */\r\n  function PlistsController(PlistsService, PlistsModals) {\r\n\r\n    var vm = this;\r\n\r\n    vm.AddPlist = AddPlist;\r\n    vm.ViewPlist = ViewPlist;\r\n    vm.DeletePlist = DeletePlist;\r\n    vm.LoadPlists = LoadPlists;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadPlists();\r\n    }\r\n\r\n    function LoadPlists(params) {\r\n      vm.loading = true;\r\n      PlistsService\r\n        .GetPlists(params)\r\n        .then(function(plists) {\r\n          vm.Plists = plists;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function AddPlist() {\r\n      PlistsModals\r\n        .PlistForm()\r\n        .then(function() {\r\n          vm.LoadPlists();\r\n        });\r\n    }\r\n\r\n    function ViewPlist(id) {\r\n      PlistsModals\r\n        .PlistForm({\r\n          ID: id\r\n        })\r\n        .then(function() {\r\n          vm.LoadPlists();\r\n        });\r\n    }\r\n\r\n    function DeletePlist(id) {\r\n      console.log(\"DELE\");\r\n      // PlistsService\r\n      //   .DeletePlist(id)\r\n      //   .then(function() {\r\n      //     vm.LoadPlists();\r\n      //   });\r\n    }\r\n\r\n  }\r\n  PlistsController.$inject = [\"PlistsService\", \"PlistsModals\"];\r\n})();\r\n;(function() {\n  'use strict';\n\n  angular\n    .module('app.plists')\n    .controller(\"PlistFormController\", PlistFormController);\n\n  /* @ngInject */\n  function PlistFormController($modalInstance, ModalParams, PlistsService) {\n    var vm = this;\n\n    vm.Plist = {\n      Participants: [],\n    };\n\n    vm.AddParticipants = AddParticipants;\n    vm.RemoveParticipant = RemoveParticipant;\n    vm.Save = Save;\n\n    activate();\n\n    function activate() {\n      if (ModalParams.ID) {\n        vm.loading = true;\n        PlistsService\n          .GetPlist(ModalParams.ID)\n          .then(function(data) {\n            vm.Plist = data;\n\n            if (vm.Plist.Participants.length === 0) {\n              vm.AddParticipants();\n            }\n\n          })\n          .finally(function() {\n            vm.loading = false;\n          });\n      } else {\n        vm.AddParticipants();\n      }\n    }\n\n    function AddParticipants() {\n      for (var i = 0; i < 5; i++) {\n        vm.Plist.Participants.push({});\n      }\n    }\n\n    function RemoveParticipant(index) {\n      vm.Plist.Participants.splice(index, 1);\n    }\n\n    function Save() {\n      vm.loading = true;\n      PlistsService\n        .SavePlist(angular.copy(vm.Plist))\n        .then(function() {\n          vm.loading = false;\n          $modalInstance.close();\n        });\n    }\n\n\n  }\r\n  PlistFormController.$inject = [\"$modalInstance\", \"ModalParams\", \"PlistsService\"];\n\n}());\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries', []);\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .controller('LotteriesController', LotteriesController);\r\n\r\n  /* @ngInject */\r\n  function LotteriesController($state, LotteriesService, LotteriesModals) {\r\n    var vm = this;\r\n\r\n    vm.AddLottery = AddLottery;\r\n    vm.DeleteLottery = DeleteLottery;\r\n    vm.LoadLotteries = LoadLotteries;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadLotteries();\r\n    }\r\n\r\n    function LoadLotteries() {\r\n      vm.loading = true;\r\n      return LotteriesService\r\n        .GetLotteries()\r\n        .then(function(data) {\r\n          vm.Lotteries = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function AddLottery() {\r\n      LotteriesModals\r\n        .LotteryInit()\r\n        .then(function(id) {\r\n          if (id) {\r\n            $state.go(\"app.lotteries.lottery\", {\r\n              ID: id\r\n            });\r\n          }\r\n        });\r\n    }\r\n\r\n    function DeleteLottery(lottery) {\r\n      LotteriesService\r\n        .DeleteLottery(lottery)\r\n        .then(function() {\r\n          vm.LoadLotteries();\r\n        });\r\n    }\r\n\r\n  }\r\n  LotteriesController.$inject = [\"$state\", \"LotteriesService\", \"LotteriesModals\"];\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .controller('LotteryController', LotteryController);\r\n\r\n  /* @ngInject */\r\n  function LotteryController(LotteriesService, $stateParams) {\r\n    var vm = this;\r\n\r\n    vm.LoadLottery = LoadLottery;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadLottery();\r\n    }\r\n\r\n    function LoadLottery() {\r\n      vm.loading = true;\r\n      LotteriesService\r\n        .GetLottery($stateParams.ID)\r\n        .then(function(data) {\r\n          vm.Lottery = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n  }\r\n  LotteryController.$inject = [\"LotteriesService\", \"$stateParams\"];\r\n})();\r\n;(function() {\n  'use strict';\n\n  angular\n    .module('app.lotteries')\n    .controller(\"LotteryInitController\", LotteryInitController);\n\n  /* @ngInject */\n  function LotteryInitController($modalInstance, ModalParams, LotteriesService, PlistsService) {\n    var vm = this;\n\n    vm.Lottery = {\n      Name: \"Lottery #\" + Math.floor((Math.random() * 99999) + 10000),\n    };\n\n    vm.LoadPlists = LoadPlists;\n    vm.Save = Save;\n\n    activate();\n\n    function activate() {\n      vm.LoadPlists();\n    }\n\n    function LoadPlists() {\n      vm.loading = true;\n      PlistsService\n        .GetPlists()\n        .then(function(data) {\n          vm.Plists = data;\n        })\n        .finally(function() {\n          vm.loading = false;\n        });\n    }\n\n    function Save() {\n      LotteriesService\n        .SaveLottery(vm.Lottery)\n        .then(function(resp) {\n          $modalInstance.close(resp.id);\n        });\n    }\n\n\n  }\r\n  LotteryInitController.$inject = [\"$modalInstance\", \"ModalParams\", \"LotteriesService\", \"PlistsService\"];\n\n}());\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth', [])\r\n\r\n}());\r\n;(function() {\n  'use strict';\n\n  angular\n    .module('app.auth')\n    .controller('AuthLoginController', AuthLoginController);\n\n  /* @ngInject */\n  function AuthLoginController($stateParams, $state, LoginMessages, User) {\n    var vm = this;\n\n    vm.loading = false;\n    vm.SignIn = SignIn;\n\n    activate();\n\n    function activate() {\n\n      if ($stateParams.ref) {\n        SignMessage($stateParams.ref.toUpperCase());\n      }\n    }\n\n    function SignIn() {\n\n      vm.loading = true;\n      vm.Alert = false;\n\n      User\n        .login(angular.copy(vm.credentials))\n        .$promise\n        .then(function(response) {\n          $state.go(\"app.lotteries.overview\");\n        }, function(rejection) {\n          SignMessage(rejection.data.error.code.toUpperCase());\n        })\n        .finally(function() {\n          vm.credentials.password = null;\n          vm.loading = false;\n        });\n    }\n\n    function SignMessage(code) {\n      vm.Alert = LoginMessages[code];\n    }\n\n  }\r\n  AuthLoginController.$inject = [\"$stateParams\", \"$state\", \"LoginMessages\", \"User\"];\n\n}());\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .run(RoutesConfig);\r\n\r\n  RoutesConfig.$inject = ['configHelper', 'routerHelper'];\r\n\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n\r\n    var _states = getStates();\r\n    routerHelper.configureStates(_states, \"/\");\r\n\r\n    configHelper.notifyConfig(\"Basic Routes\", _.map(_states, function(_state) {\r\n      return _state.state;\r\n    }));\r\n\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app',\r\n      config: {\r\n        abstract: true,\r\n        templateUrl: 'src/_common/views/layout.html',\r\n        controller: function($scope, User) {\r\n          User.getCurrent()\r\n            .$promise\r\n            .then(function(u) {\r\n              $scope.username = u.username;\r\n            });\r\n        }\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsService', SettingsService);\r\n\r\n  /* @ngInject */\r\n  function SettingsService($resource) {\r\n\r\n    var service = {\r\n      GetSettings: GetSettings,\r\n      GetSetting: GetSetting,\r\n      SaveSetting: SaveSetting,\r\n      DeleteSetting: DeleteSetting,\r\n    }\r\n\r\n    return service;\r\n\r\n    function GetSettings(params) {\r\n      return $resource(APP.Service + \"_design/models/_view/Settings\")\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return _.chain(data.rows)\r\n            .map(function(item) {\r\n              return item.value;\r\n            })\r\n            .sortBy(function(item) {\r\n              return item.DrewAt || 0;\r\n            })\r\n            .reverse()\r\n            .value();\r\n        });\r\n    }\r\n\r\n    function GetSetting(id) {\r\n      return $resource(APP.Service + id)\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function SaveSetting(Setting) {\r\n      Setting.Type = \"Setting\";\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function DeleteSetting(Setting) {\r\n\r\n      Setting._deleted = true;\r\n      Setting.DeletedAt = new Date();\r\n\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise;\r\n    }\r\n\r\n  }\r\n  SettingsService.$inject = [\"$resource\"];\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.settings',\r\n      config: {\r\n        url: '/settings',\r\n        controller: \"SettingsController\",\r\n        templateUrl: 'src/settings/overview/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .factory('SettingsModals', SettingsModals);\r\n\r\n  SettingsModals.$inject = ['modalHelper'];\r\n\r\n  function SettingsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"ChangePassword\",\r\n        config: {\r\n          templateUrl: 'src/settings/changepassword/view.html',\r\n          controller: \"ChangePasswordController\",\r\n          size: \"sm\"\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app.plists')\n    .factory('PlistsService', PlistsService);\n\n  /* @ngInject */\n  function PlistsService($resource, Plist) {\n\n    var service = {\n      GetPlists: GetPlists,\n      GetPlist: GetPlist,\n      SavePlist: SavePlist,\n      DeletePlist: DeletePlist,\n    }\n\n    return service;\n\n    function GetPlists(params) {\n      var params = params || {};\n      return Plist\n        .find({\n          filter: {\n            order: params.order || \"CreatedAt DESC\",\n          },\n        })\n        .$promise\n        .then(function(data) {\n          return data;\n        });\n    }\n\n    function GetPlist(id) {\n      return Plist\n        .findById({\n          id: id\n        })\n        .$promise\n        .then(function(item) {\n          return item;\n        });\n    }\n\n    function SavePlist(plist) {\n\n      if (!plist.id) {\n        plist.CreatedAt = new Date();\n      }\n\n      plist.Participants = _.filter(plist.Participants, function(item) {\n        return (item.Name || item.Email);\n      });\n\n      return Plist\n        .updateOrCreate(plist)\n        .$promise\n        .then(function(item) {\n          return item;\n        });\n\n    }\n\n    function DeletePlist(id) {\n\n      return Plist\n        .deleteById({\n          id: id\n        })\n        .$promise\n        .then(function(item) {\n          return item;\n        });\n\n    }\n\n  }\r\n  PlistsService.$inject = [\"$resource\", \"Plist\"];\n}());\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.plists',\r\n      config: {\r\n        url: '/plists',\r\n        controller: \"PlistsController\",\r\n        templateUrl: 'src/plists/overview/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .factory('PlistsModals', PlistsModals);\r\n\r\n  PlistsModals.$inject = ['modalHelper'];\r\n\r\n  function PlistsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"PlistForm\",\r\n        config: {\r\n          templateUrl: 'src/plists/form/view.html',\r\n          controller: \"PlistFormController\",\r\n          size: \"md\",\r\n          backdrop: 'static',\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app.lotteries')\n    .factory('LotteriesService', LotteriesService);\n\n  /* @ngInject */\n  function LotteriesService($resource, Lottery) {\n\n    var service = {\n      GetLotteries: GetLotteries,\n      GetLottery: GetLottery,\n      SaveLottery: SaveLottery,\n      DeleteLottery: DeleteLottery,\n    }\n\n    return service;\n\n    function GetLotteries(params) {\n      var params = params || {};\n      return Lottery\n        .find({\n          filter: {\n            order: params.order || \"CreatedAt DESC\",\n          },\n        })\n        .$promise\n        .then(function(data) {\n          return data;\n        });\n    }\n\n    function GetLottery(id) {\n      return Lottery\n        .findById({\n          id: id\n        })\n        .$promise\n        .then(function(item) {\n          return item;\n        });\n    }\n\n    function SaveLottery(lottery) {\n\n      lottery.DrewAt = new Date();\n      return Lottery\n        .create(lottery)\n        .$promise\n        .then(function(item) {\n          return item;\n        });\n\n    }\n\n    function DeleteLottery(id) {\n\n      return Lottery\n        .deleteById({\n          id: id\n        })\n        .$promise\n        .then(function(item) {\n          return item;\n        });\n\n    }\n\n  }\r\n  LotteriesService.$inject = [\"$resource\", \"Lottery\"];\n}());\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.lotteries',\r\n      config: {\r\n        abstract: true,\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'app.lotteries.overview',\r\n      config: {\r\n        url: '/',\r\n        controller: \"LotteriesController\",\r\n        templateUrl: 'src/lotteries/overview/view.html',\r\n      }\r\n    }, {\r\n      state: 'app.lotteries.lottery',\r\n      config: {\r\n        url: '/lottery/:ID',\r\n        controller: \"LotteryController\",\r\n        templateUrl: 'src/lotteries/lottery/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .factory('LotteriesModals', LotteriesModals);\r\n\r\n  LotteriesModals.$inject = ['modalHelper'];\r\n\r\n  function LotteriesModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"LotteryInit\",\r\n        config: {\r\n          templateUrl: 'src/lotteries/init/view.html',\r\n          controller: \"LotteryInitController\",\r\n          size: \"sm\"\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app.auth')\n    .run(appRun);\n\n  appRun.$inject = ['routerHelper'];\n\n  function appRun(routerHelper) {\n    routerHelper.configureStates(getStates());\n  }\n\n  function getStates() {\n    return [{\n      state: 'auth',\n      config: {\n        abstract: true,\n        template: '<ui-view/>',\n      }\n    }, {\n      state: 'auth.login',\n      config: {\n        url: '/login',\n        params: {\n          ref: null\n        },\n        templateUrl: \"src/auth/login/view.html\",\n        controller: \"AuthLoginController\",\n      }\n    }, {\n      state: 'auth.logout',\n      config: {\n        url: '/logout',\n        template: \"<ui-view/>\",\n        controller: function(User, $state) {\n          User\n            .logout()\n            .$promise\n            .then(function() {})\n            .finally(function() {\n              localStorage.clear();\n              $state.go(\"auth.login\", {\n                ref: \"SIGNOUT\"\n              });\n            })\n\n        },\n      }\n    }];\n  }\n\n}());\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app.auth')\n    .config(AuthInterceptorConfig)\n    .factory('AuthInterceptor', AuthInterceptor);\n\n  /* @ngInject */\n  function AuthInterceptor($q, $injector, $cookies) {\n\n    return {\n      responseError: function(rejection) {\n        console.log(\"rejection\", rejection);\n        if (rejection.status === 401 && rejection.config.url != \"/api/Users/login\") {\n          localStorage.clear();\n          var $state = $injector.get('$state');\n          $state.go('auth.login', {\n            ref: \"SESSIONEND\"\n          });\n        }\n        return $q.reject(rejection);\n      }\n    };\n\n  }\r\n  AuthInterceptor.$inject = [\"$q\", \"$injector\", \"$cookies\"];\n\n  /* @ngInject */\n  function AuthInterceptorConfig($httpProvider) {\n    $httpProvider.interceptors.push(\"AuthInterceptor\");\n  }\r\n  AuthInterceptorConfig.$inject = [\"$httpProvider\"];\n\n}());\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .constant('LoginMessages', {\r\n      SESSIONEND: {\r\n        Type: \"danger\",\r\n        Message: \"You were signed out\",\r\n        Details: \"Probably your session was timed out\",\r\n      },\r\n      SIGNOUT: {\r\n        Type: \"success\",\r\n        Message: \"You were signed out\",\r\n        Details: \"You may login again using the form\",\r\n      },\r\n      REGISTERED: {\r\n        Type: \"success\",\r\n        Message: \"Your account is ready, you can login now\",\r\n        Details: false,\r\n      },\r\n      AUTHERROR: {\r\n        Type: \"danger\",\r\n        Message: \"Authentication Error\",\r\n        Details: null,\r\n      },\r\n      UNAVAILABLE: {\r\n        Type: \"danger\",\r\n        Message: \"Service is not available\",\r\n        Details: \"Please try again later. If the problem insist, contact your system administrator\",\r\n      },\r\n      LOGIN_FAILED: {\r\n        Type: \"danger\",\r\n        Message: \"Name or password is incorrect\",\r\n        Details: \"Please try again\",\r\n      },\r\n    });\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular.module('app', [\r\n\r\n    'app.auth',\r\n    'app.lotteries',\r\n    'app.plists',\r\n    'app.settings',\r\n    'app._common',\r\n\r\n  ]);\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n\r\n    $rootScope.$on('$stateChangeStart', function(evt, to, params) {\r\n\r\n      if (to.redirectTo) {\r\n        evt.preventDefault();\r\n        $state.go(to.redirectTo, params);\r\n      }\r\n\r\n    });\r\n    \r\n  }\r\n  appRun.$inject = [\"$rootScope\", \"$state\", \"$stateParams\"];\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('configHelper', configHelperProvider);\r\n\r\n  configHelperProvider.$inject = [];\r\n\r\n  function configHelperProvider() {\r\n    /* jshint validthis:true */\r\n    this.$get = ConfigHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    ConfigHelper.$inject = [];\r\n\r\n    function ConfigHelper() {\r\n\r\n      var service = {\r\n        notifyConfig: notifyConfig\r\n      };\r\n\r\n      return service;\r\n\r\n      //function notifyConfig() {}\r\n      function notifyConfig(configName, message) {\r\n        message = message || {};\r\n        console.log(\"%c CONFIG - \" + configName + \" \", 'background: #9C27B0; color: #FFF', message);\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('numberFixedLen', numberFixedLen)\r\n\r\n  numberFixedLen.$inject = []\r\n\r\n  function numberFixedLen() {\r\n    return function(a, b) {\r\n      return (1e4 + a + \"\").slice(-b)\r\n    }\r\n  }\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('fromNow', fromNow)\r\n\r\n  fromNow.$inject = []\r\n\r\n  function fromNow() {\r\n    return function(date) {\r\n      return moment(date).fromNow();\r\n    }\r\n  }\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('fileicon', fileicon)\r\n\r\n  fileicon.$inject = []\r\n\r\n  function fileicon() {\r\n    var _icons = {\r\n      \"application/pdf\": \"fa-file-pdf-o\",\r\n      \"application/powerpoint\": \"fa-file-powerpoint-o\",\r\n      \"application/x-msword\": \"fa-file-word-o\",\r\n      \"application/x-msexcel\": \"fa-file-excel-o\",\r\n      \"application/x-mspowerpoint\": \"fa-file-powerpoint-o\",\r\n      \"audio/x-mpeg-3\": \"fa-file-audio-o\",\r\n      \"image/gif\": \"fa-file-image-o\",\r\n      \"image/png\": \"fa-file-image-o\",\r\n      \"image/tiff\": \"fa-file-image-o\",\r\n      \"image/jpeg\": \"fa-file-image-o\",\r\n      \"video/avi\": \"fa-file-video-o\",\r\n      \"video/mpeg\": \"fa-file-video-o\",\r\n      \"video/msvideo\": \"fa-file-video-o\",\r\n      \"video/quicktime\": \"fa-file-video-o\",\r\n      \"application/zip\": \"fa-file-zip-o\"\r\n    };\r\n    return function(a) {\r\n      return _icons[a] || \"fa-file-o\";\r\n    }\r\n  }\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('bytes', bytes)\r\n\r\n  bytes.$inject = []\r\n\r\n  function bytes() {\r\n    return function(bytes, precision) {\r\n      if (isNaN(parseFloat(bytes)) || !isFinite(bytes)) return '-';\r\n      if (typeof precision === 'undefined') precision = 1;\r\n      var units = ['bytes', 'kB', 'MB', 'GB', 'TB', 'PB'],\r\n        number = Math.floor(Math.log(bytes) / Math.log(1024));\r\n      return (bytes / Math.pow(1024, Math.floor(number))).toFixed(precision) + ' ' + units[number];\r\n    }\r\n  }\r\n}());\r\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .directive('ngPrint', ngPrint)\n\n  /* @ngInject */\n  function ngPrint() {\n    var printSection = document.getElementById('printSection');\n    // if there is no printing section, create one\n    if (!printSection) {\n      printSection = document.createElement('div');\n      printSection.id = 'printSection';\n      document.body.appendChild(printSection);\n    }\n\n    function link(scope, element, attrs) {\n\n      element.on('click', function() {\n        var elemToPrint = document.getElementById(attrs.printElementId);\n        if (elemToPrint) {\n          printElement(elemToPrint);\n        }\n      });\n\n      var beforePrint = function() {\n        console.log('Functionality to run before printing.');\n      };\n      var afterPrint = function() {\n        console.log('Functionality to run after printing');\n        printSection.innerHTML = '';\n      };\n\n      if (window.matchMedia) {\n        var mediaQueryList = window.matchMedia('print');\n        mediaQueryList.addListener(function(mql) {\n          if (mql.matches) {\n            beforePrint();\n          } else {\n            afterPrint();\n          }\n        });\n      }\n\n      window.onbeforeprint = beforePrint;\n      window.onafterprint = afterPrint;\n\n    }\n\n    function printElement(elem) {\n      // clones the element you want to print\n      var domClone = elem.cloneNode(true);\n      printSection.appendChild(domClone);\n      window.print();\n    }\n    return {\n      link: link,\n      restrict: 'A'\n    };\n  }\n\n}());\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .directive('errSrc', errSrc)\n\n  /* @ngInject */\n  function errSrc() {\n    return {\n      link: function(scope, element, attrs) {\n        if (!attrs.ngSrc) {\n          attrs.$set('src', attrs.errSrc);\n        }\n\n        element.bind('error', function() {\n\n          if (attrs.errSrc == \"REMOVE\") {\n            element.remove();\n            return;\n          }\n          if (attrs.src != attrs.errSrc) {\n            attrs.$set('src', attrs.errSrc);\n          }\n        });\n\n      }\n    }\n  }\n\n}());\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .directive('ngConfirmClick', ngConfirmClick)\n\n  /* @ngInject */\n  function ngConfirmClick() {\n    return {\n      priority: -1,\n      restrict: 'A',\n      link: function(scope, element, attrs){\n        element.bind('click', function(e){\n          var message = attrs.ngConfirmClick;\n          if(message && !confirm(message)){\n            e.stopImmediatePropagation();\n            e.preventDefault();\n          }\n        });\n      }\n    }\n  }\n\n}());\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig(configHelperProvider, $locationProvider) {\r\n    $locationProvider.html5Mode(true);\r\n\r\n    configHelperProvider.$get().notifyConfig(\"Location HTML5\", true);\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig($httpProvider) {\r\n    $httpProvider.defaults.withCredentials = true;\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings', []);\r\n})();\r\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.settings')\n    .controller('SettingsController', SettingsController);\n\n  /* @ngInject */\n  function SettingsController(SettingsService, SettingsModals) {\n    var vm = this;\n\n    vm.ChangePassword = ChangePassword;\n\n    activate();\n\n    function activate() {}\n\n    function ChangePassword() {\n      SettingsModals\n        .ChangePassword()\n        .then(function() {\n          $state.go(\"auth.logout\", {\n            ref: \"SIGNOUT\"\n          });\n        });\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.settings')\n    .controller(\"ChangePasswordController\", ChangePasswordController);\n\n  /* @ngInject */\n  function ChangePasswordController($modalInstance, ModalParams, User) {\n    var vm = this;\n\n    vm.Save = Save;\n\n    activate();\n\n    function activate() {}\n\n    function Save() {\n      vm.loading = true;\n      User.prototype$updateAttributes({\n          id: User.getCurrentId(),\n          password: vm.Password\n        })\n        .$promise\n        .then(function(user) {\n          vm.loading = false;\n          $modalInstance.close();\n        });\n    }\n\n  }\n\n}());\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists', []);\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .controller('PlistsController', PlistsController);\r\n\r\n  /* @ngInject */\r\n  function PlistsController(PlistsService, PlistsModals) {\r\n\r\n    var vm = this;\r\n\r\n    vm.AddPlist = AddPlist;\r\n    vm.ViewPlist = ViewPlist;\r\n    vm.DeletePlist = DeletePlist;\r\n    vm.LoadPlists = LoadPlists;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadPlists();\r\n    }\r\n\r\n    function LoadPlists(params) {\r\n      vm.loading = true;\r\n      PlistsService\r\n        .GetPlists(params)\r\n        .then(function(plists) {\r\n          vm.Plists = plists;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function AddPlist() {\r\n      PlistsModals\r\n        .PlistForm()\r\n        .then(function() {\r\n          vm.LoadPlists();\r\n        });\r\n    }\r\n\r\n    function ViewPlist(id) {\r\n      PlistsModals\r\n        .PlistForm({\r\n          ID: id\r\n        })\r\n        .then(function() {\r\n          vm.LoadPlists();\r\n        });\r\n    }\r\n\r\n    function DeletePlist(id) {\r\n      console.log(\"DELE\");\r\n      // PlistsService\r\n      //   .DeletePlist(id)\r\n      //   .then(function() {\r\n      //     vm.LoadPlists();\r\n      //   });\r\n    }\r\n\r\n  }\r\n})();\r\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.plists')\n    .controller(\"PlistFormController\", PlistFormController);\n\n  /* @ngInject */\n  function PlistFormController($modalInstance, ModalParams, PlistsService) {\n    var vm = this;\n\n    vm.Plist = {\n      Participants: [],\n    };\n\n    vm.AddParticipants = AddParticipants;\n    vm.RemoveParticipant = RemoveParticipant;\n    vm.Save = Save;\n\n    activate();\n\n    function activate() {\n      if (ModalParams.ID) {\n        vm.loading = true;\n        PlistsService\n          .GetPlist(ModalParams.ID)\n          .then(function(data) {\n            vm.Plist = data;\n\n            if (vm.Plist.Participants.length === 0) {\n              vm.AddParticipants();\n            }\n\n          })\n          .finally(function() {\n            vm.loading = false;\n          });\n      } else {\n        vm.AddParticipants();\n      }\n    }\n\n    function AddParticipants() {\n      for (var i = 0; i < 5; i++) {\n        vm.Plist.Participants.push({});\n      }\n    }\n\n    function RemoveParticipant(index) {\n      vm.Plist.Participants.splice(index, 1);\n    }\n\n    function Save() {\n      vm.loading = true;\n      PlistsService\n        .SavePlist(angular.copy(vm.Plist))\n        .then(function() {\n          vm.loading = false;\n          $modalInstance.close();\n        });\n    }\n\n\n  }\n\n}());\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries', []);\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .controller('LotteriesController', LotteriesController);\r\n\r\n  /* @ngInject */\r\n  function LotteriesController($state, LotteriesService, LotteriesModals) {\r\n    var vm = this;\r\n\r\n    vm.AddLottery = AddLottery;\r\n    vm.DeleteLottery = DeleteLottery;\r\n    vm.LoadLotteries = LoadLotteries;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadLotteries();\r\n    }\r\n\r\n    function LoadLotteries() {\r\n      vm.loading = true;\r\n      return LotteriesService\r\n        .GetLotteries()\r\n        .then(function(data) {\r\n          vm.Lotteries = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function AddLottery() {\r\n      LotteriesModals\r\n        .LotteryInit()\r\n        .then(function(id) {\r\n          if (id) {\r\n            $state.go(\"app.lotteries.lottery\", {\r\n              ID: id\r\n            });\r\n          }\r\n        });\r\n    }\r\n\r\n    function DeleteLottery(lottery) {\r\n      LotteriesService\r\n        .DeleteLottery(lottery)\r\n        .then(function() {\r\n          vm.LoadLotteries();\r\n        });\r\n    }\r\n\r\n  }\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .controller('LotteryController', LotteryController);\r\n\r\n  /* @ngInject */\r\n  function LotteryController(LotteriesService, $stateParams) {\r\n    var vm = this;\r\n\r\n    vm.LoadLottery = LoadLottery;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadLottery();\r\n    }\r\n\r\n    function LoadLottery() {\r\n      vm.loading = true;\r\n      LotteriesService\r\n        .GetLottery($stateParams.ID)\r\n        .then(function(data) {\r\n          vm.Lottery = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n  }\r\n})();\r\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.lotteries')\n    .controller(\"LotteryInitController\", LotteryInitController);\n\n  /* @ngInject */\n  function LotteryInitController($modalInstance, ModalParams, LotteriesService, PlistsService) {\n    var vm = this;\n\n    vm.Lottery = {\n      Name: \"Lottery #\" + Math.floor((Math.random() * 99999) + 10000),\n    };\n\n    vm.LoadPlists = LoadPlists;\n    vm.Save = Save;\n\n    activate();\n\n    function activate() {\n      vm.LoadPlists();\n    }\n\n    function LoadPlists() {\n      vm.loading = true;\n      PlistsService\n        .GetPlists()\n        .then(function(data) {\n          vm.Plists = data;\n        })\n        .finally(function() {\n          vm.loading = false;\n        });\n    }\n\n    function Save() {\n      LotteriesService\n        .SaveLottery(vm.Lottery)\n        .then(function(resp) {\n          $modalInstance.close(resp.id);\n        });\n    }\n\n\n  }\n\n}());\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth', [])\r\n\r\n}());\r\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.auth')\n    .controller('AuthLoginController', AuthLoginController);\n\n  /* @ngInject */\n  function AuthLoginController($stateParams, $state, LoginMessages, User) {\n    var vm = this;\n\n    vm.loading = false;\n    vm.SignIn = SignIn;\n\n    activate();\n\n    function activate() {\n\n      if ($stateParams.ref) {\n        SignMessage($stateParams.ref.toUpperCase());\n      }\n    }\n\n    function SignIn() {\n\n      vm.loading = true;\n      vm.Alert = false;\n\n      User\n        .login(angular.copy(vm.credentials))\n        .$promise\n        .then(function(response) {\n          $state.go(\"app.lotteries.overview\");\n        }, function(rejection) {\n          SignMessage(rejection.data.error.code.toUpperCase());\n        })\n        .finally(function() {\n          vm.credentials.password = null;\n          vm.loading = false;\n        });\n    }\n\n    function SignMessage(code) {\n      vm.Alert = LoginMessages[code];\n    }\n\n  }\n\n}());\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .run(RoutesConfig);\r\n\r\n  RoutesConfig.$inject = ['configHelper', 'routerHelper'];\r\n\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n\r\n    var _states = getStates();\r\n    routerHelper.configureStates(_states, \"/\");\r\n\r\n    configHelper.notifyConfig(\"Basic Routes\", _.map(_states, function(_state) {\r\n      return _state.state;\r\n    }));\r\n\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app',\r\n      config: {\r\n        abstract: true,\r\n        templateUrl: 'src/_common/views/layout.html',\r\n        controller: function($scope, User) {\r\n          User.getCurrent()\r\n            .$promise\r\n            .then(function(u) {\r\n              $scope.username = u.username;\r\n            });\r\n        }\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsService', SettingsService);\r\n\r\n  /* @ngInject */\r\n  function SettingsService($resource) {\r\n\r\n    var service = {\r\n      GetSettings: GetSettings,\r\n      GetSetting: GetSetting,\r\n      SaveSetting: SaveSetting,\r\n      DeleteSetting: DeleteSetting,\r\n    }\r\n\r\n    return service;\r\n\r\n    function GetSettings(params) {\r\n      return $resource(APP.Service + \"_design/models/_view/Settings\")\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return _.chain(data.rows)\r\n            .map(function(item) {\r\n              return item.value;\r\n            })\r\n            .sortBy(function(item) {\r\n              return item.DrewAt || 0;\r\n            })\r\n            .reverse()\r\n            .value();\r\n        });\r\n    }\r\n\r\n    function GetSetting(id) {\r\n      return $resource(APP.Service + id)\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function SaveSetting(Setting) {\r\n      Setting.Type = \"Setting\";\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function DeleteSetting(Setting) {\r\n\r\n      Setting._deleted = true;\r\n      Setting.DeletedAt = new Date();\r\n\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise;\r\n    }\r\n\r\n  }\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.settings',\r\n      config: {\r\n        url: '/settings',\r\n        controller: \"SettingsController\",\r\n        templateUrl: 'src/settings/overview/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .factory('SettingsModals', SettingsModals);\r\n\r\n  SettingsModals.$inject = ['modalHelper'];\r\n\r\n  function SettingsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"ChangePassword\",\r\n        config: {\r\n          templateUrl: 'src/settings/changepassword/view.html',\r\n          controller: \"ChangePasswordController\",\r\n          size: \"sm\"\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app.plists')\n    .factory('PlistsService', PlistsService);\n\n  /* @ngInject */\n  function PlistsService($resource, Plist) {\n\n    var service = {\n      GetPlists: GetPlists,\n      GetPlist: GetPlist,\n      SavePlist: SavePlist,\n      DeletePlist: DeletePlist,\n    }\n\n    return service;\n\n    function GetPlists(params) {\n      var params = params || {};\n      return Plist\n        .find({\n          filter: {\n            order: params.order || \"CreatedAt DESC\",\n          },\n        })\n        .$promise\n        .then(function(data) {\n          return data;\n        });\n    }\n\n    function GetPlist(id) {\n      return Plist\n        .findById({\n          id: id\n        })\n        .$promise\n        .then(function(item) {\n          return item;\n        });\n    }\n\n    function SavePlist(plist) {\n\n      if (!plist.id) {\n        plist.CreatedAt = new Date();\n      }\n\n      plist.Participants = _.filter(plist.Participants, function(item) {\n        return (item.Name || item.Email);\n      });\n\n      return Plist\n        .updateOrCreate(plist)\n        .$promise\n        .then(function(item) {\n          return item;\n        });\n\n    }\n\n    function DeletePlist(id) {\n\n      return Plist\n        .deleteById({\n          id: id\n        })\n        .$promise\n        .then(function(item) {\n          return item;\n        });\n\n    }\n\n  }\n}());\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.plists',\r\n      config: {\r\n        url: '/plists',\r\n        controller: \"PlistsController\",\r\n        templateUrl: 'src/plists/overview/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .factory('PlistsModals', PlistsModals);\r\n\r\n  PlistsModals.$inject = ['modalHelper'];\r\n\r\n  function PlistsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"PlistForm\",\r\n        config: {\r\n          templateUrl: 'src/plists/form/view.html',\r\n          controller: \"PlistFormController\",\r\n          size: \"md\",\r\n          backdrop: 'static',\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app.lotteries')\n    .factory('LotteriesService', LotteriesService);\n\n  /* @ngInject */\n  function LotteriesService($resource, Lottery) {\n\n    var service = {\n      GetLotteries: GetLotteries,\n      GetLottery: GetLottery,\n      SaveLottery: SaveLottery,\n      DeleteLottery: DeleteLottery,\n    }\n\n    return service;\n\n    function GetLotteries(params) {\n      var params = params || {};\n      return Lottery\n        .find({\n          filter: {\n            order: params.order || \"CreatedAt DESC\",\n          },\n        })\n        .$promise\n        .then(function(data) {\n          return data;\n        });\n    }\n\n    function GetLottery(id) {\n      return Lottery\n        .findById({\n          id: id\n        })\n        .$promise\n        .then(function(item) {\n          return item;\n        });\n    }\n\n    function SaveLottery(lottery) {\n\n      lottery.DrewAt = new Date();\n      return Lottery\n        .create(lottery)\n        .$promise\n        .then(function(item) {\n          return item;\n        });\n\n    }\n\n    function DeleteLottery(id) {\n\n      return Lottery\n        .deleteById({\n          id: id\n        })\n        .$promise\n        .then(function(item) {\n          return item;\n        });\n\n    }\n\n  }\n}());\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.lotteries',\r\n      config: {\r\n        abstract: true,\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'app.lotteries.overview',\r\n      config: {\r\n        url: '/',\r\n        controller: \"LotteriesController\",\r\n        templateUrl: 'src/lotteries/overview/view.html',\r\n      }\r\n    }, {\r\n      state: 'app.lotteries.lottery',\r\n      config: {\r\n        url: '/lottery/:ID',\r\n        controller: \"LotteryController\",\r\n        templateUrl: 'src/lotteries/lottery/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .factory('LotteriesModals', LotteriesModals);\r\n\r\n  LotteriesModals.$inject = ['modalHelper'];\r\n\r\n  function LotteriesModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"LotteryInit\",\r\n        config: {\r\n          templateUrl: 'src/lotteries/init/view.html',\r\n          controller: \"LotteryInitController\",\r\n          size: \"sm\"\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app.auth')\n    .run(appRun);\n\n  appRun.$inject = ['routerHelper'];\n\n  function appRun(routerHelper) {\n    routerHelper.configureStates(getStates());\n  }\n\n  function getStates() {\n    return [{\n      state: 'auth',\n      config: {\n        abstract: true,\n        template: '<ui-view/>',\n      }\n    }, {\n      state: 'auth.login',\n      config: {\n        url: '/login',\n        params: {\n          ref: null\n        },\n        templateUrl: \"src/auth/login/view.html\",\n        controller: \"AuthLoginController\",\n      }\n    }, {\n      state: 'auth.logout',\n      config: {\n        url: '/logout',\n        template: \"<ui-view/>\",\n        controller: function(User, $state) {\n          User\n            .logout()\n            .$promise\n            .then(function() {})\n            .finally(function() {\n              localStorage.clear();\n              $state.go(\"auth.login\", {\n                ref: \"SIGNOUT\"\n              });\n            })\n\n        },\n      }\n    }];\n  }\n\n}());\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app.auth')\n    .config(AuthInterceptorConfig)\n    .factory('AuthInterceptor', AuthInterceptor);\n\n  /* @ngInject */\n  function AuthInterceptor($q, $injector, $cookies) {\n\n    return {\n      responseError: function(rejection) {\n        console.log(\"rejection\", rejection);\n        if (rejection.status === 401 && rejection.config.url != \"/api/Users/login\") {\n          localStorage.clear();\n          var $state = $injector.get('$state');\n          $state.go('auth.login', {\n            ref: \"SESSIONEND\"\n          });\n        }\n        return $q.reject(rejection);\n      }\n    };\n\n  }\n\n  /* @ngInject */\n  function AuthInterceptorConfig($httpProvider) {\n    $httpProvider.interceptors.push(\"AuthInterceptor\");\n  }\n\n}());\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .constant('LoginMessages', {\r\n      SESSIONEND: {\r\n        Type: \"danger\",\r\n        Message: \"You were signed out\",\r\n        Details: \"Probably your session was timed out\",\r\n      },\r\n      SIGNOUT: {\r\n        Type: \"success\",\r\n        Message: \"You were signed out\",\r\n        Details: \"You may login again using the form\",\r\n      },\r\n      REGISTERED: {\r\n        Type: \"success\",\r\n        Message: \"Your account is ready, you can login now\",\r\n        Details: false,\r\n      },\r\n      AUTHERROR: {\r\n        Type: \"danger\",\r\n        Message: \"Authentication Error\",\r\n        Details: null,\r\n      },\r\n      UNAVAILABLE: {\r\n        Type: \"danger\",\r\n        Message: \"Service is not available\",\r\n        Details: \"Please try again later. If the problem insist, contact your system administrator\",\r\n      },\r\n      LOGIN_FAILED: {\r\n        Type: \"danger\",\r\n        Message: \"Name or password is incorrect\",\r\n        Details: \"Please try again\",\r\n      },\r\n    });\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular.module('app', [\r\n\r\n    'app.auth',\r\n    'app.lotteries',\r\n    'app.plists',\r\n    'app.settings',\r\n    'app._common',\r\n\r\n  ]);\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n\r\n    $rootScope.$on('$stateChangeStart', function(evt, to, params) {\r\n\r\n      if (to.redirectTo) {\r\n        evt.preventDefault();\r\n        $state.go(to.redirectTo, params);\r\n      }\r\n\r\n    });\r\n    \r\n  }\r\n\r\n}());\r\n"],"sourceRoot":"/source/"}