{"version":3,"sources":["_common/_module.js","_common/helpers/route.helper.js","_common/helpers/modal.helper.js","app.min.js","_common/helpers/config.helper.js","_common/filters/numberfixedlen.js","_common/filters/fromnow.js","_common/filters/fileicon.js","_common/filters/bytes.js","_common/directives/pwcheck.js","_common/directives/ngprint.js","_common/directives/errsrc.js","_common/directives/confirm.js","_common/configs/location.config.js","_common/configs/http.config.js","settings/_module.js","settings/overview/controller.js","settings/changepassword/controller.js","lotteries/_module.js","lotteries/overview/controller.js","lotteries/lottery/controller.js","lotteries/init/controller.js","plists/_module.js","plists/overview/controller.js","plists/form/controller.js","auth/_module.js","auth/login/controller.js","_common/routes.js","settings/service.js","settings/routes.js","settings/modals.js","lotteries/service.js","lotteries/routes.js","lotteries/modals.js","plists/service.js","plists/routes.js","plists/modals.js","auth/routes.js","auth/interceptor.js","auth/constants.js","app.js","run.js"],"names":["angular","module","routerHelperProvider","$locationProvider","$stateProvider","$urlRouterProvider","RouterHelper","$state","configureStates","states","otherwisePath","forEach","state","config","controllerAs","extend","views","_","each","item","hasOtherwise","otherwise","getStates","get","service","this","$get","$inject","provider","modalHelperProvider","modalHelper","$uibModal","$q","configureModals","modals","_ret","modal","obj","ModalResultComplete","response","ModalResultFailed","reason","reject","resolve","ModalParams","open","result","then","configHelperProvider","ConfigHelper","notifyConfig","configName","message","console","log","numberFixedLen","a","b","slice","filter","fromNow","date","moment","fileicon","_icons","application/pdf","application/powerpoint","application/x-msword","application/x-msexcel","application/x-mspowerpoint","audio/x-mpeg-3","image/gif","image/png","image/tiff","image/jpeg","video/avi","video/mpeg","video/msvideo","video/quicktime","application/zip","bytes","precision","isNaN","parseFloat","isFinite","units","number","Math","floor","pow","toFixed","pwCheck","require","restrict","link","scope","elem","attrs","ctrl","firstPassword","add","on","$apply","v","val","$","$setValidity","directive","ngPrint","element","elemToPrint","document","getElementById","printElementId","printElement","beforePrint","afterPrint","printSection","innerHTML","window","matchMedia","mediaQueryList","addListener","mql","matches","onbeforeprint","onafterprint","domClone","cloneNode","appendChild","print","createElement","id","body","errSrc","ngSrc","$set","bind","remove","src","ngConfirmClick","priority","e","confirm","stopImmediatePropagation","preventDefault","LocationConfig","html5Mode","$httpProvider","defaults","withCredentials","SettingsController","SettingsService","SettingsModals","activate","ChangePassword","go","ref","vm","controller","ChangePasswordController","$modalInstance","User","toaster","Save","loading","prototype$updateAttributes","getCurrentId","password","Password","$promise","user","pop","close","LotteriesController","LotteriesService","LotteriesModals","LoadLotteries","GetLotteries","data","Lotteries","AddLottery","LotteryInit","ID","LotteryController","$stateParams","LoadLottery","GetLottery","Lottery","DeleteLottery","LotteryInitController","PlistsService","LoadPlists","GetPlists","Plists","SaveLottery","resp","Name","random","PlistsController","PlistsModals","params","plists","AddPlist","PlistForm","ViewPlist","PlistFormController","Plist","GetPlist","Participants","length","AddParticipants","i","push","RemoveParticipant","index","splice","SavePlist","copy","Delete","DeletePlist","AuthLoginController","LoginMessages","SignMessage","toUpperCase","SignIn","Alert","login","credentials","rejection","error","code","RoutesConfig","configHelper","routerHelper","_states","map","_state","abstract","templateUrl","$scope","getCurrent","u","username","run","$resource","GetSettings","APP","Service","chain","rows","value","sortBy","DrewAt","reverse","GetSetting","SaveSetting","Setting","Type","save","DeleteSetting","_deleted","DeletedAt","Date","factory","appRun","url","getModals","size","find","order","findById","lottery","create","deleteById","template","plist","CreatedAt","Email","updateOrCreate","backdrop","logout","localStorage","clear","AuthInterceptor","$injector","$cookies","responseError","status","AuthInterceptorConfig","interceptors","constant","SESSIONEND","Message","Details","SIGNOUT","REGISTERED","AUTHERROR","UNAVAILABLE","LOGIN_FAILED","$rootScope","$on","evt","to","redirectTo"],"mappings":"CAAA,WACA,YAEAA,SACAC,OAAA,eACA,aAEA,aACA,aACA,YAEA,eACA,YAEA,eCbA,WACA,YAQA,SAAAC,sBAAAC,kBAAAC,eAAAC,oBAQA,QAAAC,cAAAC,QAUA,QAAAC,iBAAAC,OAAAC,eACAD,OAAAE,QAAA,SAAAC,OAEA,GAAAC,SACAC,aAAA,KAGAd,SAAAe,OAAAF,OAAAD,MAAAC,QAEAA,OAAAG,OACAC,EAAAC,KAAAL,OAAAG,MAAA,SAAAG,MACAA,KAAAL,aAAA,OAIAV,eAAAQ,MAAAA,MAAAA,MAAAC,UAEAH,gBAAAU,eACAA,cAAA,EACAf,mBAAAgB,UAAAX,gBAIA,QAAAY,aACA,MAAAf,QAAAgB,MAjCA,GAAAH,eAAA,EAEAI,SACAhB,gBAAAA,gBACAc,UAAAA,UAGA,OAAAE,SAdAC,KAAAC,KAAApB,aAIAA,aAAAqB,SAAA,UAZA3B,QACAC,OAAA,eACA2B,SAAA,eAAA1B,sBAEAA,qBAAAyB,SAAA,oBAAA,iBAAA,yBCPA,WACA,YAQA,SAAAE,uBAKA,QAAAC,aAAAC,UAAAC,IAQA,QAAAC,iBAAAC,QACA,GAAAC,QA8BA,OA7BAnC,SAAAW,QAAAuB,OAAA,SAAAE,OACAD,KAAAC,MAAAA,OAAA,SAAAC,KAiBA,QAAAC,qBAAAC,UACA,MAAAA,UAGA,QAAAC,mBAAAC,QACA,MAAAA,SAAA,mBAAAA,OACAT,GAAAU,SADA,OArBA,GAAA7B,SACAC,aAAA,KACA6B,SACAC,YAAA,WACA,MAAAP,WAMA,OAFArC,SAAAe,OAAAF,OAAAuB,MAAAvB,QAEAkB,UACAc,KAAAhC,QACAiC,OACAC,KAAAT,qBAHAP,SAIAS,sBAaAL,KArCA,GAAAX,UACAS,gBAAAA,gBAGA,OAAAT,SATAC,KAAAC,KAAAI,YCwHIA,YAAYH,SAAW,YAAa,MDhIxC3B,QACAC,OAAA,eACA2B,SAAA,cAAAC,qBAEAA,oBAAAF,cEPA,WACA,YAQA,SAAAqB,wBAQA,QAAAC,gBASA,QAAAC,cAAAC,WAAAC,SACAA,QAAAA,YACAC,QAAAC,IAAA,eAAAH,WAAA,IAAA,mCAAAC,SATA,GAAA5B,UACA0B,aAAAA,aAGA,OAAA1B,SAZAC,KAAAC,KAAAuB,aAIAA,aAAAtB,WAZA3B,QACAC,OAAA,eACA2B,SAAA,eAAAoB,sBAEAA,qBAAArB,cCPA,WACA,YAQA,SAAA4B,kBACA,MAAA,UAAAC,EAAAC,GACA,OAAA,IAAAD,EAAA,IAAAE,OAAAD,IARAzD,QACAC,OAAA,eACA0D,OAAA,iBAAAJ,gBAEAA,eAAA5B,cCPA,WACA,YAQA,SAAAiC,WACA,MAAA,UAAAC,MACA,MAAAC,QAAAD,MAAAD,WARA5D,QACAC,OAAA,eACA0D,OAAA,UAAAC,SAEAA,QAAAjC,cCPA,WACA,YAQA,SAAAoC,YACA,GAAAC,SACAC,kBAAA,gBACAC,yBAAA,uBACAC,uBAAA,iBACAC,wBAAA,kBACAC,6BAAA,uBACAC,iBAAA,kBACAC,YAAA,kBACAC,YAAA,kBACAC,aAAA,kBACAC,aAAA,kBACAC,YAAA,kBACAC,aAAA,kBACAC,gBAAA,kBACAC,kBAAA,kBACAC,kBAAA,gBAEA,OAAA,UAAAvB,GACA,MAAAQ,QAAAR,IAAA,aAzBAxD,QACAC,OAAA,eACA0D,OAAA,WAAAI,UAEAA,SAAApC,cCPA,WACA,YAQA,SAAAqD,SACA,MAAA,UAAAA,MAAAC,WACA,GAAAC,MAAAC,WAAAH,UAAAI,SAAAJ,OAAA,MAAA,GACA,oBAAAC,aAAAA,UAAA,EACA,IAAAI,QAAA,QAAA,KAAA,KAAA,KAAA,KAAA,MACAC,OAAAC,KAAAC,MAAAD,KAAAjC,IAAA0B,OAAAO,KAAAjC,IAAA,MACA,QAAA0B,MAAAO,KAAAE,IAAA,KAAAF,KAAAC,MAAAF,UAAAI,QAAAT,WAAA,IAAAI,MAAAC,SAZAtF,QACAC,OAAA,eACA0D,OAAA,QAAAqB,OAEAA,MAAArD,cCPA,WACA,YAOA,SAAAgE,WACA,OACAC,QAAA,UACAC,SAAA,IACAC,KAAA,SAAAC,MAAAC,KAAAC,MAAAC,MACA,GAAAC,eAAA,IAAAF,MAAAN,OACAK,MAAAI,IAAAD,eAAAE,GAAA,QAAA,WACAN,MAAAO,OAAA,WACA,GAAAC,GAAAP,KAAAQ,QAAAC,EAAAN,eAAAK,KACAN,MAAAQ,aAAA,UAAAH,SAdAvG,QACAC,OAAA,eACA0G,UAAA,UAAAhB,YCLA,WACA,YAOA,SAAAiB,WASA,QAAAd,MAAAC,MAAAc,QAAAZ,OAEAY,QAAAR,GAAA,QAAA,WACA,GAAAS,aAAAC,SAAAC,eAAAf,MAAAgB,eACAH,cACAI,aAAAJ,cAIA,IAAAK,aAAA,WACA9D,QAAAC,IAAA,0CAEA8D,WAAA,WACA/D,QAAAC,IAAA,uCACA+D,aAAAC,UAAA,GAGA,IAAAC,OAAAC,WAAA,CACA,GAAAC,gBAAAF,OAAAC,WAAA,QACAC,gBAAAC,YAAA,SAAAC,KACAA,IAAAC,QACAT,cAEAC,eAKAG,OAAAM,cAAAV,YACAI,OAAAO,aAAAV,WAIA,QAAAF,cAAAlB,MAEA,GAAA+B,UAAA/B,KAAAgC,WAAA,EACAX,cAAAY,YAAAF,UACAR,OAAAW,QA7CA,GAAAb,cAAAN,SAAAC,eAAA,eA+CA,OA7CAK,gBACAA,aAAAN,SAAAoB,cAAA,OACAd,aAAAe,GAAA,eACArB,SAAAsB,KAAAJ,YAAAZ,gBA2CAvB,KAAAA,KACAD,SAAA,KAvDA7F,QACAC,OAAA,eACA0G,UAAA,UAAAC,YCLA,WACA,YAOA,SAAA0B,UACA,OACAxC,KAAA,SAAAC,MAAAc,QAAAZ,OACAA,MAAAsC,OACAtC,MAAAuC,KAAA,MAAAvC,MAAAqC,QAGAzB,QAAA4B,KAAA,QAAA,WAEA,MAAA,UAAAxC,MAAAqC,WACAzB,SAAA6B,cAGAzC,MAAA0C,KAAA1C,MAAAqC,QACArC,MAAAuC,KAAA,MAAAvC,MAAAqC,aAnBAtI,QACAC,OAAA,eACA0G,UAAA,SAAA2B,WCLA,WACA,YAOA,SAAAM,kBACA,OACAC,SAAA,GACAhD,SAAA,IACAC,KAAA,SAAAC,MAAAc,QAAAZ,OACAY,QAAA4B,KAAA,QAAA,SAAAK,GACA,GAAA1F,SAAA6C,MAAA2C,cACAxF,WAAA2F,QAAA3F,WACA0F,EAAAE,2BACAF,EAAAG,sBAdAjJ,QACAC,OAAA,eACA0G,UAAA,iBAAAiC,mBCLA,WACA,YAOA,SAAAM,gBAAAlG,qBAAA7C,mBACAA,kBAAAgJ,WAAA,GAEAnG,qBAAAtB,OAAAwB,aAAA,kBAAA,GARAlD,QACAC,OAAA,eACAY,OAAAqI,gBV8ZEA,eAAevH,SAAW,uBAAwB,wBWnapD,WACA,YAOA,SAAAuH,gBAAAE,eACAA,cAAAC,SAAAC,iBAAA,EANAtJ,QACAC,OAAA,eACAY,OAAAqI,gBX6aEA,eAAevH,SAAW,oBYnb5B,WACA,YAEA3B,SACAC,OAAA,sBCJA,WACA,YAOA,SAAAsJ,oBAAAhJ,OAAAiJ,gBAAAC,gBAOA,QAAAC,aAEA,QAAAC,kBACAF,eACAE,iBACA5G,KAAA,WACAxC,OAAAqJ,GAAA,eACAC,IAAA,cAbA,GAAAC,IAAArI,IAEAqI,IAAAH,eAAAA,eAEAD,WAVA1J,QACAC,OAAA,gBACA8J,WAAA,qBAAAR,oBbmdEA,mBAAmB5H,SAAW,SAAU,kBAAmB,qBcxd7D,WACA,YAOA,SAAAqI,0BAAAC,eAAArH,YAAAsH,KAAAC,SAOA,QAAAT,aAEA,QAAAU,QACAN,GAAAO,SAAA,EACAH,KAAAI,4BACAlC,GAAA8B,KAAAK,eACAC,SAAAV,GAAAW,WAEAC,SACA3H,KAAA,SAAA4H,MACAR,QAAAS,IAAA,UAAA,oBACAd,GAAAO,SAAA,EACAJ,eAAAY,UAlBA,GAAAf,IAAArI,IAEAqI,IAAAM,KAAAA,KAEAV,WAVA1J,QACAC,OAAA,gBACA8J,WAAA,2BAAAC,0BdqfEA,yBAAyBrI,SAAW,iBAAkB,cAAe,OAAQ,ce1f/E,WACA,YAEA3B,SACAC,OAAA,uBCJA,WACA,YAOA,SAAA6K,qBAAAvK,OAAAwK,iBAAAC,iBAQA,QAAAtB,YACAI,GAAAmB,gBAGA,QAAAA,iBAEA,MADAnB,IAAAO,SAAA,EACAU,iBACAG,eACAnI,KAAA,SAAAoI,MACArB,GAAAsB,UAAAD,OAHAJ,WAKA,WACAjB,GAAAO,SAAA,IAIA,QAAAgB,cACAL,gBACAM,cACAvI,KAAA,SAAAqF,IACAA,IACA7H,OAAAqJ,GAAA,yBACA2B,GAAAnD,OA7BA,GAAA0B,IAAArI,IAEAqI,IAAAuB,WAAAA,WACAvB,GAAAmB,cAAAA,cAEAvB,WAXA1J,QACAC,OAAA,iBACA8J,WAAA,sBAAAe,qBhB2iBEA,oBAAoBnJ,SAAW,SAAU,mBAAoB,sBiBhjB/D,WACA,YAOA,SAAA6J,mBAAAjL,OAAAwK,iBAAAU,cAQA,QAAA/B,YACAI,GAAA4B,cAGA,QAAAA,eACA5B,GAAAO,SAAA,EACAU,iBACAY,WAAAF,aAAAF,IACAxI,KAAA,SAAAoI,MACArB,GAAA8B,QAAAT,OAHAJ,WAKA,WACAjB,GAAAO,SAAA,IAIA,QAAAwB,iBACA/B,GAAAO,SAAA,EACAU,iBACAc,cAAA/B,GAAA8B,QAAAxD,IACArF,KAAA,WACAxC,OAAAqJ,GAAA,4BA5BA,GAAAE,IAAArI,IAEAqI,IAAA4B,YAAAA,YACA5B,GAAA+B,cAAAA,cAEAnC,WAXA1J,QACAC,OAAA,iBACA8J,WAAA,oBAAAyB,mBjBulBEA,kBAAkB7J,SAAW,SAAU,mBAAoB,mBkB5lB7D,WACA,YAOA,SAAAmK,uBAAA7B,eAAArH,YAAAmI,iBAAAgB,eAYA,QAAArC,YACAI,GAAAkC,aAGA,QAAAA,cACAlC,GAAAO,SAAA,EACA0B,cACAE,YACAlJ,KAAA,SAAAoI,MACArB,GAAAoC,OAAAf,OAHAY,WAKA,WACAjC,GAAAO,SAAA,IAIA,QAAAD,QACAW,iBACAoB,YAAArC,GAAA8B,SACA7I,KAAA,SAAAqJ,MACAnC,eAAAY,MAAAuB,KAAAhE,MA/BA,GAAA0B,IAAArI,IAEAqI,IAAA8B,SACAS,KAAA,YAAA9G,KAAAC,MAAA,MAAAD,KAAA+G,SAAA,MAGAxC,GAAAkC,WAAAA,WACAlC,GAAAM,KAAAA,KAEAV,WAfA1J,QACAC,OAAA,iBACA8J,WAAA,wBAAA+B,uBlBuoBEA,sBAAsBnK,SAAW,iBAAkB,cAAe,mBAAoB,oBmB5oBxF,WACA,YAEA3B,SACAC,OAAA,oBCJA,WACA,YAOA,SAAAsM,kBAAAR,cAAAS,cAUA,QAAA9C,YACAI,GAAAkC,aAGA,QAAAA,YAAAS,QACA3C,GAAAO,SAAA,EACA0B,cACAE,UAAAQ,QACA1J,KAAA,SAAA2J,QACA5C,GAAAoC,OAAAQ,SAHAX,WAKA,WACAjC,GAAAO,SAAA,IAIA,QAAAsC,YACAH,aACAI,YACA7J,KAAA,WACA+G,GAAAkC,eAIA,QAAAa,WAAAzE,IACAoE,aACAI,WACArB,GAAAnD,KAEArF,KAAA,WACA+G,GAAAkC,eAtCA,GAAAlC,IAAArI,IAEAqI,IAAA6C,SAAAA,SACA7C,GAAA+C,UAAAA,UACA/C,GAAAkC,WAAAA,WAEAtC,WAbA1J,QACAC,OAAA,cACA8J,WAAA,mBAAAwC,kBpBqsBEA,iBAAiB5K,SAAW,gBAAiB,mBqB1sB/C,WACA,YAOA,SAAAmL,qBAAA7C,eAAArH,YAAAmJ,eAgBA,QAAArC,YACAI,GAAAiD,MAAA3E,IACA0B,GAAAO,SAAA,EACA0B,cACAiB,SAAAlD,GAAAiD,MAAA3E,IACArF,KAAA,SAAAoI,MACArB,GAAAiD,MAAA5B,KAEA,IAAArB,GAAAiD,MAAAE,aAAAC,QACApD,GAAAqD,oBANApB,WAUA,WACAjC,GAAAO,SAAA,KAGAP,GAAAqD,kBAIA,QAAAA,mBACA,IAAA,GAAAC,GAAA,EAAA,EAAAA,EAAAA,IACAtD,GAAAiD,MAAAE,aAAAI,SAIA,QAAAC,mBAAAC,OACAzD,GAAAiD,MAAAE,aAAAO,OAAAD,MAAA,GAGA,QAAAnD,QACAN,GAAAO,SAAA,EACA0B,cACA0B,UAAAzN,QAAA0N,KAAA5D,GAAAiD,QACAhK,KAAA,WACA+G,GAAAO,SAAA,EACAJ,eAAAY,UAKA,QAAA8C,UACA7D,GAAAO,SAAA,EACA0B,cACA6B,YAAA9D,GAAAiD,MAAA3E,IACArF,KAAA,WACA+G,GAAAO,SAAA,EACAJ,eAAAY,UA/DA,GAAAf,IAAArI,IAEAqI,IAAAiD,OACA3E,GAAAxF,YAAA2I,IAAA,KACA0B,iBAGAnD,GAAAqD,gBAAAA,gBACArD,GAAAqD,gBAAAA,gBACArD,GAAAwD,kBAAAA,kBACAxD,GAAAM,KAAAA,KACAN,GAAA6D,OAAAA,OAEAjE,WAnBA1J,QACAC,OAAA,cACA8J,WAAA,sBAAA+C,qBrBqxBEA,oBAAoBnL,SAAW,iBAAkB,cAAe,oBsBzxBlE,WACA,YAEA3B,SACAC,OAAA,kBCLA,WACA,YAOA,SAAA4N,qBAAApC,aAAAlL,OAAAuN,cAAA5D,MAQA,QAAAR,YAEA+B,aAAA5B,KACAkE,YAAAtC,aAAA5B,IAAAmE,eAIA,QAAAC,UAEAnE,GAAAO,SAAA,EACAP,GAAAoE,OAAA,EAEAhE,KACAiE,MAAAnO,QAAA0N,KAAA5D,GAAAsE,cACA1D,SACA3H,KAAA,SAAAR,UACAhC,OAAAqJ,GAAA,2BACA,SAAAyE,WACAN,YAAAM,UAAAlD,KAAAmD,MAAAC,KAAAP,iBANA9D,WAQA,WACAJ,GAAAsE,YAAA5D,SAAA,KACAV,GAAAO,SAAA,IAIA,QAAA0D,aAAAQ,MACAzE,GAAAoE,MAAAJ,cAAAS,MAlCA,GAAAzE,IAAArI,IAEAqI,IAAAO,SAAA,EACAP,GAAAmE,OAAAA,OAEAvE,WAXA1J,QACAC,OAAA,YACA8J,WAAA,sBAAA8D,qBvB+0BEA,oBAAoBlM,SAAW,eAAgB,SAAU,gBAAiB,WwBn1B5E,WACA,YAQA,SAAA6M,cAAAC,aAAAC,cAEA,GAAAC,SAAArN,WACAoN,cAAAlO,gBAAAmO,QAAA,KAEAF,aAAAvL,aAAA,eAAAjC,EAAA2N,IAAAD,QAAA,SAAAE,QACA,MAAAA,QAAAjO,SAKA,QAAAU,aACA,QACAV,MAAA,MACAC,QACAiO,YAAA,EACAC,YAAA,gCACAhF,WAAA,SAAAiF,OAAA9E,MACAA,KAAA+E,aACAvE,SACA3H,KAAA,SAAAmM,GACAF,OAAAG,SAAAD,EAAAC,eA3BAnP,QACAC,OAAA,eACAmP,IAAAZ,cAEAA,aAAA7M,SAAA,eAAA,mBCPA,WACA,YAOA,SAAA6H,iBAAA6F,WAWA,QAAAC,aAAA7C,QACA,MAAA4C,WAAAE,IAAAC,QAAA,iCACAjO,MACAmJ,SACA3H,KAAA,SAAAoI,MACA,MAAAlK,GAAAwO,MAAAtE,KAAAuE,MACAd,IAAA,SAAAzN,MACA,MAAAA,MAAAwO,QAEAC,OAAA,SAAAzO,MACA,MAAAA,MAAA0O,QAAA,IAEAC,UACAH,UAIA,QAAAI,YAAA3H,IACA,MAAAiH,WAAAE,IAAAC,QAAApH,IACA7G,MACAmJ,SACA3H,KAAA,SAAAoI,MACA,MAAAA,QAIA,QAAA6E,aAAAC,SAEA,MADAA,SAAAC,KAAA,UACAb,UAAAE,IAAAC,SACAW,KAAAF,SACAvF,SACA3H,KAAA,SAAAoI,MACA,MAAAA,QAIA,QAAAiF,eAAAH,SAKA,MAHAA,SAAAI,UAAA,EACAJ,QAAAK,UAAA,GAAAC,MAEAlB,UAAAE,IAAAC,SACAW,KAAAF,SACAvF,SApDA,GAAAlJ,UACA8N,YAAAA,YACAS,WAAAA,WACAC,YAAAA,YACAI,cAAAA,cAGA,OAAA5O,SAdAxB,QACAC,OAAA,gBACAuQ,QAAA,kBAAAhH,iBzB27BEA,gBAAgB7H,SAAW,gB0Bj8B7B,WACA,YAQA,SAAA8O,QAAA/B,cACAA,aAAAlO,gBAAAc,aAGA,QAAAA,aACA,QACAV,MAAA,eACAC,QACA6P,IAAA,YACA3G,WAAA,qBACAgF,YAAA,qCAhBA/O,QACAC,OAAA,gBACAmP,IAAAqB,QAEAA,OAAA9O,SAAA,mBCNA,WACA,YAQA,SAAA8H,gBAAA3H,aAGA,QAAA6O,aACA,QACAvO,MAAA,iBACAvB,QACAkO,YAAA,wCACAhF,WAAA,2BACA6G,KAAA,QARA,MAAA9O,aAAAG,gBAAA0O,aAPA3Q,QACAC,OAAA,iBACAuQ,QAAA,iBAAA/G,gBAEAA,eAAA9H,SAAA,kBCPA,WACA,YAOA,SAAAoJ,kBAAAsE,UAAAzD,SAWA,QAAAV,cAAAuB,QACA,GAAAA,QAAAA,UACA,OAAAb,SACAiF,MACAlN,QACAmN,MAAArE,OAAAqE,OAAA,oBAGApG,SACA3H,KAAA,SAAAoI,MACA,MAAAA,QAIA,QAAAQ,YAAAvD,IACA,MAAAwD,SACAmF,UACA3I,GAAAA,KAEAsC,SACA3H,KAAA,SAAA5B,MACA,MAAAA,QAIA,QAAAgL,aAAA6E,SAGA,MADAA,SAAAnB,OAAA,GAAAU,MACA3E,QACAqF,OAAAD,SACAtG,SACA3H,KAAA,SAAA5B,MACA,MAAAA,QAKA,QAAA0K,eAAAzD,IAEA,MAAAwD,SACAsF,YACA9I,GAAAA,KAEAsC,SACA3H,KAAA,SAAA5B,MACA,MAAAA,QAtDA,GAAAK,UACA0J,aAAAA,aACAS,WAAAA,WACAQ,YAAAA,YACAN,cAAAA,cAGA,OAAArK,SAdAxB,QACAC,OAAA,iBACAuQ,QAAA,mBAAAzF,kB5BujCEA,iBAAiBpJ,SAAW,YAAa,c6B7jC3C,WACA,YAQA,SAAA8O,QAAA/B,cACAA,aAAAlO,gBAAAc,aAGA,QAAAA,aACA,QACAV,MAAA,gBACAC,QACAiO,YAAA,EACAqC,SAAA,gBAGAvQ,MAAA,yBACAC,QACA6P,IAAA,IACA3G,WAAA,sBACAgF,YAAA,sCAGAnO,MAAA,wBACAC,QACA6P,IAAA,eACA3G,WAAA,oBACAgF,YAAA,qCA7BA/O,QACAC,OAAA,iBACAmP,IAAAqB,QAEAA,OAAA9O,SAAA,mBCNA,WACA,YAQA,SAAAqJ,iBAAAlJ,aAGA,QAAA6O,aACA,QACAvO,MAAA,cACAvB,QACAkO,YAAA,+BACAhF,WAAA,wBACA6G,KAAA,QARA,MAAA9O,aAAAG,gBAAA0O,aAPA3Q,QACAC,OAAA,iBACAuQ,QAAA,kBAAAxF,iBAEAA,gBAAArJ,SAAA,kBCPA,WACA,YAOA,SAAAoK,eAAAsD,UAAAtC,OAWA,QAAAd,WAAAQ,QACA,GAAAA,QAAAA,UACA,OAAAM,OACA8D,MACAlN,QACAmN,MAAArE,OAAAqE,OAAA,oBAGApG,SACA3H,KAAA,SAAAoI,MACA,MAAAA,QAIA,QAAA6B,UAAA5E,IACA,MAAA2E,OACAgE,UACA3I,GAAAA,KAEAsC,SACA3H,KAAA,SAAA5B,MACA,MAAAA,QAIA,QAAAsM,WAAA2D,OAUA,MARAA,OAAAhJ,KACAgJ,MAAAC,UAAA,GAAAd,OAGAa,MAAAnE,aAAAhM,EAAA0C,OAAAyN,MAAAnE,aAAA,SAAA9L,MACA,MAAAA,MAAAkL,MAAAlL,KAAAmQ,QAGAvE,MACAwE,eAAAH,OACA1G,SACA3H,KAAA,SAAA5B,MACA,MAAAA,QAKA,QAAAyM,aAAAxF,IAEA,MAAA2E,OACAmE,YACA9I,GAAAA,KAEAsC,SACA3H,KAAA,SAAA5B,MACA,MAAAA,QA7DA,GAAAK,UACAyK,UAAAA,UACAe,SAAAA,SACAS,UAAAA,UACAG,YAAAA,YAGA,OAAApM,SAdAxB,QACAC,OAAA,cACAuQ,QAAA,gBAAAzE,e/BusCEA,cAAcpK,SAAW,YAAa,YgC7sCxC,WACA,YAQA,SAAA8O,QAAA/B,cACAA,aAAAlO,gBAAAc,aAGA,QAAAA,aACA,QACAV,MAAA,aACAC,QACA6P,IAAA,UACA3G,WAAA,mBACAgF,YAAA,mCAhBA/O,QACAC,OAAA,cACAmP,IAAAqB,QAEAA,OAAA9O,SAAA,mBCNA,WACA,YAQA,SAAA6K,cAAA1K,aAGA,QAAA6O,aACA,QACAvO,MAAA,YACAvB,QACAkO,YAAA,4BACAhF,WAAA,sBACA6G,KAAA,KACAY,SAAA,YATA,MAAA1P,aAAAG,gBAAA0O,aAPA3Q,QACAC,OAAA,cACAuQ,QAAA,eAAAhE,cAEAA,aAAA7K,SAAA,kBCPA,WACA,YAQA,SAAA8O,QAAA/B,cACAA,aAAAlO,gBAAAc,aAGA,QAAAA,aACA,QACAV,MAAA,OACAC,QACAiO,YAAA,EACAqC,SAAA,gBAGAvQ,MAAA,aACAC,QACA6P,IAAA,SACAjE,QACA5C,IAAA,MAEAkF,YAAA,2BACAhF,WAAA,yBAGAnJ,MAAA,cACAC,QACA6P,IAAA,UACAS,SAAA,aACApH,WAAA,SAAAG,KAAA3J,QACA2J,KACAuH,SACA/G,SACA3H,KAAA,cAHAmH,WAIA,WACAwH,aAAAC,QACApR,OAAAqJ,GAAA,cACAC,IAAA,kBAxCA7J,QACAC,OAAA,YACAmP,IAAAqB,QAEAA,OAAA9O,SAAA,mBCPA,WACA,YAQA,SAAAiQ,iBAAA5P,GAAA6P,UAAAC,UAEA,OACAC,cAAA,SAAA1D,WAEA,GADAhL,QAAAC,IAAA,YAAA+K,WACA,MAAAA,UAAA2D,QAAA,oBAAA3D,UAAAxN,OAAA6P,IAAA,CACAgB,aAAAC,OACA,IAAApR,QAAAsR,UAAAtQ,IAAA,SACAhB,QAAAqJ,GAAA,cACAC,IAAA,eAGA,MAAA7H,IAAAU,OAAA2L,aAOA,QAAA4D,uBAAA7I,eACAA,cAAA8I,aAAA7E,KAAA,mBA1BArN,QACAC,OAAA,YACAY,OAAAoR,uBACAzB,QAAA,kBAAAoB,iBnC60CEA,gBAAgBjQ,SAAW,KAAM,YAAa,YAM9CsQ,sBAAsBtQ,SAAW,oBoC11CnC,WACA,YAEA3B,SACAC,OAAA,YACAkS,SAAA,iBACAC,YACAlC,KAAA,SACAmC,QAAA,sBACAC,QAAA,uCAEAC,SACArC,KAAA,UACAmC,QAAA,sBACAC,QAAA,sCAEAE,YACAtC,KAAA,UACAmC,QAAA,2CACAC,SAAA,GAEAG,WACAvC,KAAA,SACAmC,QAAA,uBACAC,QAAA,MAEAI,aACAxC,KAAA,SACAmC,QAAA,2BACAC,QAAA,oFAEAK,cACAzC,KAAA,SACAmC,QAAA,gCACAC,QAAA,yBClCA,WACA,YAEAtS,SAAAC,OAAA,OAEA,WACA,gBACA,aACA,eACA,mBCRA,WACA,YAOA,SAAAwQ,QAAAmC,WAAArS,OAAAkL,cAEAmH,WAAAC,IAAA,oBAAA,SAAAC,IAAAC,GAAAtG,QAEAsG,GAAAC,aACAF,IAAA7J,iBACA1I,OAAAqJ,GAAAmJ,GAAAC,WAAAvG,WAXAzM,QACAC,OAAA,OACAmP,IAAAqB,QtCi6CEA,OAAO9O,SAAW,aAAc,SAAU","file":"app.min.js","sourcesContent":["(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common', [\r\n      'lbServices',\r\n\r\n      'ngResource',\r\n      'ngSanitize',\r\n      'ngCookies',\r\n\r\n      'ui.bootstrap',\r\n      'ui.router',\r\n      \r\n      'toaster',\r\n    ]);\r\n})();\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('routerHelper', routerHelperProvider);\r\n\r\n  routerHelperProvider.$inject = ['$locationProvider', '$stateProvider', '$urlRouterProvider'];\r\n  /* @ngInject */\r\n  function routerHelperProvider($locationProvider, $stateProvider, $urlRouterProvider) {\r\n    /* jshint validthis:true */\r\n    this.$get = RouterHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    RouterHelper.$inject = ['$state'];\r\n\r\n    function RouterHelper($state) {\r\n      var hasOtherwise = false;\r\n\r\n      var service = {\r\n        configureStates: configureStates,\r\n        getStates: getStates\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureStates(states, otherwisePath) {\r\n        states.forEach(function(state) {\r\n\r\n          var config = {\r\n            controllerAs: 'vm',\r\n          };\r\n\r\n          angular.extend(config, state.config);\r\n\r\n          if (config.views) {\r\n            _.each(config.views, function(item) {\r\n              item.controllerAs = 'vm';\r\n            });\r\n          }\r\n\r\n          $stateProvider.state(state.state, config);\r\n        });\r\n        if (otherwisePath && !hasOtherwise) {\r\n          hasOtherwise = true;\r\n          $urlRouterProvider.otherwise(otherwisePath);\r\n        }\r\n      }\r\n\r\n      function getStates() {\r\n        return $state.get();\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('modalHelper', modalHelperProvider);\r\n\r\n  modalHelperProvider.$inject = [];\r\n  /* @ngInject */\r\n  function modalHelperProvider() {\r\n    /* jshint validthis:true */\r\n    this.$get = modalHelper;\r\n\r\n    /* @ngInject */\r\n    function modalHelper($uibModal, $q) {\r\n\r\n      var service = {\r\n        configureModals: configureModals\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureModals(modals) {\r\n        var _ret = {};\r\n        angular.forEach(modals, function(modal) {\r\n          _ret[modal.modal] = function(obj) {\r\n            var config = {\r\n              controllerAs: 'vm',\r\n              resolve: {\r\n                ModalParams: function() {\r\n                  return obj || {};\r\n                }\r\n              }\r\n            };\r\n            angular.extend(config, modal.config);\r\n\r\n            return $uibModal\r\n              .open(config)\r\n              .result\r\n              .then(ModalResultComplete)\r\n              .catch(ModalResultFailed);\r\n\r\n            function ModalResultComplete(response) {\r\n              return response;\r\n            }\r\n\r\n            function ModalResultFailed(reason) {\r\n              if (reason && reason !== \"backdrop click\") {\r\n                return $q.reject();\r\n              }\r\n            }\r\n          };\r\n        });\r\n        return _ret;\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common', [\r\n      'lbServices',\r\n\r\n      'ngResource',\r\n      'ngSanitize',\r\n      'ngCookies',\r\n\r\n      'ui.bootstrap',\r\n      'ui.router',\r\n      \r\n      'toaster',\r\n    ]);\r\n})();\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('routerHelper', routerHelperProvider);\r\n\r\n  routerHelperProvider.$inject = ['$locationProvider', '$stateProvider', '$urlRouterProvider'];\r\n  /* @ngInject */\r\n  function routerHelperProvider($locationProvider, $stateProvider, $urlRouterProvider) {\r\n    /* jshint validthis:true */\r\n    this.$get = RouterHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    RouterHelper.$inject = ['$state'];\r\n\r\n    function RouterHelper($state) {\r\n      var hasOtherwise = false;\r\n\r\n      var service = {\r\n        configureStates: configureStates,\r\n        getStates: getStates\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureStates(states, otherwisePath) {\r\n        states.forEach(function(state) {\r\n\r\n          var config = {\r\n            controllerAs: 'vm',\r\n          };\r\n\r\n          angular.extend(config, state.config);\r\n\r\n          if (config.views) {\r\n            _.each(config.views, function(item) {\r\n              item.controllerAs = 'vm';\r\n            });\r\n          }\r\n\r\n          $stateProvider.state(state.state, config);\r\n        });\r\n        if (otherwisePath && !hasOtherwise) {\r\n          hasOtherwise = true;\r\n          $urlRouterProvider.otherwise(otherwisePath);\r\n        }\r\n      }\r\n\r\n      function getStates() {\r\n        return $state.get();\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('modalHelper', modalHelperProvider);\r\n\r\n  modalHelperProvider.$inject = [];\r\n  /* @ngInject */\r\n  function modalHelperProvider() {\r\n    /* jshint validthis:true */\r\n    this.$get = modalHelper;\r\n\r\n    /* @ngInject */\r\n    function modalHelper($uibModal, $q) {\r\n\r\n      var service = {\r\n        configureModals: configureModals\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureModals(modals) {\r\n        var _ret = {};\r\n        angular.forEach(modals, function(modal) {\r\n          _ret[modal.modal] = function(obj) {\r\n            var config = {\r\n              controllerAs: 'vm',\r\n              resolve: {\r\n                ModalParams: function() {\r\n                  return obj || {};\r\n                }\r\n              }\r\n            };\r\n            angular.extend(config, modal.config);\r\n\r\n            return $uibModal\r\n              .open(config)\r\n              .result\r\n              .then(ModalResultComplete)\r\n              .catch(ModalResultFailed);\r\n\r\n            function ModalResultComplete(response) {\r\n              return response;\r\n            }\r\n\r\n            function ModalResultFailed(reason) {\r\n              if (reason && reason !== \"backdrop click\") {\r\n                return $q.reject();\r\n              }\r\n            }\r\n          };\r\n        });\r\n        return _ret;\r\n      }\r\n    }\r\n    modalHelper.$inject = [\"$uibModal\", \"$q\"];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('configHelper', configHelperProvider);\r\n\r\n  configHelperProvider.$inject = [];\r\n\r\n  function configHelperProvider() {\r\n    /* jshint validthis:true */\r\n    this.$get = ConfigHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    ConfigHelper.$inject = [];\r\n\r\n    function ConfigHelper() {\r\n\r\n      var service = {\r\n        notifyConfig: notifyConfig\r\n      };\r\n\r\n      return service;\r\n\r\n      //function notifyConfig() {}\r\n      function notifyConfig(configName, message) {\r\n        message = message || {};\r\n        console.log(\"%c CONFIG - \" + configName + \" \", 'background: #9C27B0; color: #FFF', message);\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('numberFixedLen', numberFixedLen)\r\n\r\n  numberFixedLen.$inject = []\r\n\r\n  function numberFixedLen() {\r\n    return function(a, b) {\r\n      return (1e4 + a + \"\").slice(-b)\r\n    }\r\n  }\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('fromNow', fromNow)\r\n\r\n  fromNow.$inject = []\r\n\r\n  function fromNow() {\r\n    return function(date) {\r\n      return moment(date).fromNow();\r\n    }\r\n  }\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('fileicon', fileicon)\r\n\r\n  fileicon.$inject = []\r\n\r\n  function fileicon() {\r\n    var _icons = {\r\n      \"application/pdf\": \"fa-file-pdf-o\",\r\n      \"application/powerpoint\": \"fa-file-powerpoint-o\",\r\n      \"application/x-msword\": \"fa-file-word-o\",\r\n      \"application/x-msexcel\": \"fa-file-excel-o\",\r\n      \"application/x-mspowerpoint\": \"fa-file-powerpoint-o\",\r\n      \"audio/x-mpeg-3\": \"fa-file-audio-o\",\r\n      \"image/gif\": \"fa-file-image-o\",\r\n      \"image/png\": \"fa-file-image-o\",\r\n      \"image/tiff\": \"fa-file-image-o\",\r\n      \"image/jpeg\": \"fa-file-image-o\",\r\n      \"video/avi\": \"fa-file-video-o\",\r\n      \"video/mpeg\": \"fa-file-video-o\",\r\n      \"video/msvideo\": \"fa-file-video-o\",\r\n      \"video/quicktime\": \"fa-file-video-o\",\r\n      \"application/zip\": \"fa-file-zip-o\"\r\n    };\r\n    return function(a) {\r\n      return _icons[a] || \"fa-file-o\";\r\n    }\r\n  }\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('bytes', bytes)\r\n\r\n  bytes.$inject = []\r\n\r\n  function bytes() {\r\n    return function(bytes, precision) {\r\n      if (isNaN(parseFloat(bytes)) || !isFinite(bytes)) return '-';\r\n      if (typeof precision === 'undefined') precision = 1;\r\n      var units = ['bytes', 'kB', 'MB', 'GB', 'TB', 'PB'],\r\n        number = Math.floor(Math.log(bytes) / Math.log(1024));\r\n      return (bytes / Math.pow(1024, Math.floor(number))).toFixed(precision) + ' ' + units[number];\r\n    }\r\n  }\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('pwCheck', pwCheck)\r\n\r\n  /* @ngInject */\r\n  function pwCheck() {\r\n    return {\r\n      require: 'ngModel',\r\n      restrict: 'A',\r\n      link: function(scope, elem, attrs, ctrl) {\r\n        var firstPassword = '#' + attrs.pwCheck;\r\n        elem.add(firstPassword).on('keyup', function() {\r\n          scope.$apply(function() {\r\n            var v = elem.val() === $(firstPassword).val();\r\n            ctrl.$setValidity('pwmatch', v);\r\n          });\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngPrint', ngPrint)\r\n\r\n  /* @ngInject */\r\n  function ngPrint() {\r\n    var printSection = document.getElementById('printSection');\r\n    // if there is no printing section, create one\r\n    if (!printSection) {\r\n      printSection = document.createElement('div');\r\n      printSection.id = 'printSection';\r\n      document.body.appendChild(printSection);\r\n    }\r\n\r\n    function link(scope, element, attrs) {\r\n\r\n      element.on('click', function() {\r\n        var elemToPrint = document.getElementById(attrs.printElementId);\r\n        if (elemToPrint) {\r\n          printElement(elemToPrint);\r\n        }\r\n      });\r\n\r\n      var beforePrint = function() {\r\n        console.log('Functionality to run before printing.');\r\n      };\r\n      var afterPrint = function() {\r\n        console.log('Functionality to run after printing');\r\n        printSection.innerHTML = '';\r\n      };\r\n\r\n      if (window.matchMedia) {\r\n        var mediaQueryList = window.matchMedia('print');\r\n        mediaQueryList.addListener(function(mql) {\r\n          if (mql.matches) {\r\n            beforePrint();\r\n          } else {\r\n            afterPrint();\r\n          }\r\n        });\r\n      }\r\n\r\n      window.onbeforeprint = beforePrint;\r\n      window.onafterprint = afterPrint;\r\n\r\n    }\r\n\r\n    function printElement(elem) {\r\n      // clones the element you want to print\r\n      var domClone = elem.cloneNode(true);\r\n      printSection.appendChild(domClone);\r\n      window.print();\r\n    }\r\n    return {\r\n      link: link,\r\n      restrict: 'A'\r\n    };\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('errSrc', errSrc)\r\n\r\n  /* @ngInject */\r\n  function errSrc() {\r\n    return {\r\n      link: function(scope, element, attrs) {\r\n        if (!attrs.ngSrc) {\r\n          attrs.$set('src', attrs.errSrc);\r\n        }\r\n\r\n        element.bind('error', function() {\r\n\r\n          if (attrs.errSrc == \"REMOVE\") {\r\n            element.remove();\r\n            return;\r\n          }\r\n          if (attrs.src != attrs.errSrc) {\r\n            attrs.$set('src', attrs.errSrc);\r\n          }\r\n        });\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngConfirmClick', ngConfirmClick)\r\n\r\n  /* @ngInject */\r\n  function ngConfirmClick() {\r\n    return {\r\n      priority: -1,\r\n      restrict: 'A',\r\n      link: function(scope, element, attrs){\r\n        element.bind('click', function(e){\r\n          var message = attrs.ngConfirmClick;\r\n          if(message && !confirm(message)){\r\n            e.stopImmediatePropagation();\r\n            e.preventDefault();\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig(configHelperProvider, $locationProvider) {\r\n    $locationProvider.html5Mode(true);\r\n\r\n    configHelperProvider.$get().notifyConfig(\"Location HTML5\", true);\r\n  }\r\n  LocationConfig.$inject = [\"configHelperProvider\", \"$locationProvider\"];\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig($httpProvider) {\r\n    $httpProvider.defaults.withCredentials = true;\r\n  }\r\n  LocationConfig.$inject = [\"$httpProvider\"];\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings', []);\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .controller('SettingsController', SettingsController);\r\n\r\n  /* @ngInject */\r\n  function SettingsController($state, SettingsService, SettingsModals) {\r\n    var vm = this;\r\n\r\n    vm.ChangePassword = ChangePassword;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n    function ChangePassword() {\r\n      SettingsModals\r\n        .ChangePassword()\r\n        .then(function() {\r\n          $state.go(\"auth.logout\", {\r\n            ref: \"SIGNOUT\"\r\n          });\r\n        });\r\n    }\r\n\r\n  }\r\n  SettingsController.$inject = [\"$state\", \"SettingsService\", \"SettingsModals\"];\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .controller(\"ChangePasswordController\", ChangePasswordController);\r\n\r\n  /* @ngInject */\r\n  function ChangePasswordController($modalInstance, ModalParams, User, toaster) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n    function Save() {\r\n      vm.loading = true;\r\n      User.prototype$updateAttributes({\r\n          id: User.getCurrentId(),\r\n          password: vm.Password\r\n        })\r\n        .$promise\r\n        .then(function(user) {\r\n          toaster.pop('success', \"Password Changed\");\r\n          vm.loading = false;\r\n          $modalInstance.close();\r\n        });\r\n    }\r\n\r\n  }\r\n  ChangePasswordController.$inject = [\"$modalInstance\", \"ModalParams\", \"User\", \"toaster\"];\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries', []);\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .controller('LotteriesController', LotteriesController);\r\n\r\n  /* @ngInject */\r\n  function LotteriesController($state, LotteriesService, LotteriesModals) {\r\n    var vm = this;\r\n\r\n    vm.AddLottery = AddLottery;\r\n    vm.LoadLotteries = LoadLotteries;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadLotteries();\r\n    }\r\n\r\n    function LoadLotteries() {\r\n      vm.loading = true;\r\n      return LotteriesService\r\n        .GetLotteries()\r\n        .then(function(data) {\r\n          vm.Lotteries = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function AddLottery() {\r\n      LotteriesModals\r\n        .LotteryInit()\r\n        .then(function(id) {\r\n          if (id) {\r\n            $state.go(\"app.lotteries.lottery\", {\r\n              ID: id\r\n            });\r\n          }\r\n        });\r\n    }\r\n\r\n  }\r\n  LotteriesController.$inject = [\"$state\", \"LotteriesService\", \"LotteriesModals\"];\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .controller('LotteryController', LotteryController);\r\n\r\n  /* @ngInject */\r\n  function LotteryController($state, LotteriesService, $stateParams) {\r\n    var vm = this;\r\n\r\n    vm.LoadLottery = LoadLottery;\r\n    vm.DeleteLottery = DeleteLottery;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadLottery();\r\n    }\r\n\r\n    function LoadLottery() {\r\n      vm.loading = true;\r\n      LotteriesService\r\n        .GetLottery($stateParams.ID)\r\n        .then(function(data) {\r\n          vm.Lottery = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function DeleteLottery() {\r\n      vm.loading = true;\r\n      LotteriesService\r\n        .DeleteLottery(vm.Lottery.id)\r\n        .then(function() {\r\n          $state.go(\"app.lotteries.overview\");\r\n        });\r\n    }\r\n\r\n  }\r\n  LotteryController.$inject = [\"$state\", \"LotteriesService\", \"$stateParams\"];\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .controller(\"LotteryInitController\", LotteryInitController);\r\n\r\n  /* @ngInject */\r\n  function LotteryInitController($modalInstance, ModalParams, LotteriesService, PlistsService) {\r\n    var vm = this;\r\n\r\n    vm.Lottery = {\r\n      Name: \"Lottery #\" + Math.floor((Math.random() * 99999) + 10000),\r\n    };\r\n\r\n    vm.LoadPlists = LoadPlists;\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadPlists();\r\n    }\r\n\r\n    function LoadPlists() {\r\n      vm.loading = true;\r\n      PlistsService\r\n        .GetPlists()\r\n        .then(function(data) {\r\n          vm.Plists = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function Save() {\r\n      LotteriesService\r\n        .SaveLottery(vm.Lottery)\r\n        .then(function(resp) {\r\n          $modalInstance.close(resp.id);\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n  LotteryInitController.$inject = [\"$modalInstance\", \"ModalParams\", \"LotteriesService\", \"PlistsService\"];\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists', []);\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .controller('PlistsController', PlistsController);\r\n\r\n  /* @ngInject */\r\n  function PlistsController(PlistsService, PlistsModals) {\r\n\r\n    var vm = this;\r\n\r\n    vm.AddPlist = AddPlist;\r\n    vm.ViewPlist = ViewPlist;\r\n    vm.LoadPlists = LoadPlists;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadPlists();\r\n    }\r\n\r\n    function LoadPlists(params) {\r\n      vm.loading = true;\r\n      PlistsService\r\n        .GetPlists(params)\r\n        .then(function(plists) {\r\n          vm.Plists = plists;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function AddPlist() {\r\n      PlistsModals\r\n        .PlistForm()\r\n        .then(function() {\r\n          vm.LoadPlists();\r\n        });\r\n    }\r\n\r\n    function ViewPlist(id) {\r\n      PlistsModals\r\n        .PlistForm({\r\n          ID: id\r\n        })\r\n        .then(function() {\r\n          vm.LoadPlists();\r\n        });\r\n    }\r\n\r\n  }\r\n  PlistsController.$inject = [\"PlistsService\", \"PlistsModals\"];\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .controller(\"PlistFormController\", PlistFormController);\r\n\r\n  /* @ngInject */\r\n  function PlistFormController($modalInstance, ModalParams, PlistsService) {\r\n    var vm = this;\r\n\r\n    vm.Plist = {\r\n      id: ModalParams.ID || null,\r\n      Participants: [],\r\n    };\r\n\r\n    vm.AddParticipants = AddParticipants;\r\n    vm.AddParticipants = AddParticipants;\r\n    vm.RemoveParticipant = RemoveParticipant;\r\n    vm.Save = Save;\r\n    vm.Delete = Delete;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      if (vm.Plist.id) {\r\n        vm.loading = true;\r\n        PlistsService\r\n          .GetPlist(vm.Plist.id)\r\n          .then(function(data) {\r\n            vm.Plist = data;\r\n\r\n            if (vm.Plist.Participants.length === 0) {\r\n              vm.AddParticipants();\r\n            }\r\n\r\n          })\r\n          .finally(function() {\r\n            vm.loading = false;\r\n          });\r\n      } else {\r\n        vm.AddParticipants();\r\n      }\r\n    }\r\n\r\n    function AddParticipants() {\r\n      for (var i = 0; i < 5; i++) {\r\n        vm.Plist.Participants.push({});\r\n      }\r\n    }\r\n\r\n    function RemoveParticipant(index) {\r\n      vm.Plist.Participants.splice(index, 1);\r\n    }\r\n\r\n    function Save() {\r\n      vm.loading = true;\r\n      PlistsService\r\n        .SavePlist(angular.copy(vm.Plist))\r\n        .then(function() {\r\n          vm.loading = false;\r\n          $modalInstance.close();\r\n        });\r\n    }\r\n\r\n\r\n    function Delete() {\r\n      vm.loading = true;\r\n      PlistsService\r\n        .DeletePlist(vm.Plist.id)\r\n        .then(function() {\r\n          vm.loading = false;\r\n          $modalInstance.close();\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n  PlistFormController.$inject = [\"$modalInstance\", \"ModalParams\", \"PlistsService\"];\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth', [])\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .controller('AuthLoginController', AuthLoginController);\r\n\r\n  /* @ngInject */\r\n  function AuthLoginController($stateParams, $state, LoginMessages, User) {\r\n    var vm = this;\r\n\r\n    vm.loading = false;\r\n    vm.SignIn = SignIn;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n\r\n      if ($stateParams.ref) {\r\n        SignMessage($stateParams.ref.toUpperCase());\r\n      }\r\n    }\r\n\r\n    function SignIn() {\r\n\r\n      vm.loading = true;\r\n      vm.Alert = false;\r\n\r\n      User\r\n        .login(angular.copy(vm.credentials))\r\n        .$promise\r\n        .then(function(response) {\r\n          $state.go(\"app.lotteries.overview\");\r\n        }, function(rejection) {\r\n          SignMessage(rejection.data.error.code.toUpperCase());\r\n        })\r\n        .finally(function() {\r\n          vm.credentials.password = null;\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function SignMessage(code) {\r\n      vm.Alert = LoginMessages[code];\r\n    }\r\n\r\n  }\r\n  AuthLoginController.$inject = [\"$stateParams\", \"$state\", \"LoginMessages\", \"User\"];\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .run(RoutesConfig);\r\n\r\n  RoutesConfig.$inject = ['configHelper', 'routerHelper'];\r\n\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n\r\n    var _states = getStates();\r\n    routerHelper.configureStates(_states, \"/\");\r\n\r\n    configHelper.notifyConfig(\"Basic Routes\", _.map(_states, function(_state) {\r\n      return _state.state;\r\n    }));\r\n\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app',\r\n      config: {\r\n        abstract: true,\r\n        templateUrl: 'src/_common/views/layout.html',\r\n        controller: function($scope, User) {\r\n          User.getCurrent()\r\n            .$promise\r\n            .then(function(u) {\r\n              $scope.username = u.username;\r\n            });\r\n        }\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsService', SettingsService);\r\n\r\n  /* @ngInject */\r\n  function SettingsService($resource) {\r\n\r\n    var service = {\r\n      GetSettings: GetSettings,\r\n      GetSetting: GetSetting,\r\n      SaveSetting: SaveSetting,\r\n      DeleteSetting: DeleteSetting,\r\n    }\r\n\r\n    return service;\r\n\r\n    function GetSettings(params) {\r\n      return $resource(APP.Service + \"_design/models/_view/Settings\")\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return _.chain(data.rows)\r\n            .map(function(item) {\r\n              return item.value;\r\n            })\r\n            .sortBy(function(item) {\r\n              return item.DrewAt || 0;\r\n            })\r\n            .reverse()\r\n            .value();\r\n        });\r\n    }\r\n\r\n    function GetSetting(id) {\r\n      return $resource(APP.Service + id)\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function SaveSetting(Setting) {\r\n      Setting.Type = \"Setting\";\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function DeleteSetting(Setting) {\r\n\r\n      Setting._deleted = true;\r\n      Setting.DeletedAt = new Date();\r\n\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise;\r\n    }\r\n\r\n  }\r\n  SettingsService.$inject = [\"$resource\"];\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.settings',\r\n      config: {\r\n        url: '/settings',\r\n        controller: \"SettingsController\",\r\n        templateUrl: 'src/settings/overview/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .factory('SettingsModals', SettingsModals);\r\n\r\n  SettingsModals.$inject = ['modalHelper'];\r\n\r\n  function SettingsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"ChangePassword\",\r\n        config: {\r\n          templateUrl: 'src/settings/changepassword/view.html',\r\n          controller: \"ChangePasswordController\",\r\n          size: \"sm\"\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .factory('LotteriesService', LotteriesService);\r\n\r\n  /* @ngInject */\r\n  function LotteriesService($resource, Lottery) {\r\n\r\n    var service = {\r\n      GetLotteries: GetLotteries,\r\n      GetLottery: GetLottery,\r\n      SaveLottery: SaveLottery,\r\n      DeleteLottery: DeleteLottery,\r\n    }\r\n\r\n    return service;\r\n\r\n    function GetLotteries(params) {\r\n      var params = params || {};\r\n      return Lottery\r\n        .find({\r\n          filter: {\r\n            order: params.order || \"CreatedAt DESC\",\r\n          },\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function GetLottery(id) {\r\n      return Lottery\r\n        .findById({\r\n          id: id\r\n        })\r\n        .$promise\r\n        .then(function(item) {\r\n          return item;\r\n        });\r\n    }\r\n\r\n    function SaveLottery(lottery) {\r\n\r\n      lottery.DrewAt = new Date();\r\n      return Lottery\r\n        .create(lottery)\r\n        .$promise\r\n        .then(function(item) {\r\n          return item;\r\n        });\r\n\r\n    }\r\n\r\n    function DeleteLottery(id) {\r\n\r\n      return Lottery\r\n        .deleteById({\r\n          id: id\r\n        })\r\n        .$promise\r\n        .then(function(item) {\r\n          return item;\r\n        });\r\n\r\n    }\r\n\r\n  }\r\n  LotteriesService.$inject = [\"$resource\", \"Lottery\"];\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.lotteries',\r\n      config: {\r\n        abstract: true,\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'app.lotteries.overview',\r\n      config: {\r\n        url: '/',\r\n        controller: \"LotteriesController\",\r\n        templateUrl: 'src/lotteries/overview/view.html',\r\n      }\r\n    }, {\r\n      state: 'app.lotteries.lottery',\r\n      config: {\r\n        url: '/lottery/:ID',\r\n        controller: \"LotteryController\",\r\n        templateUrl: 'src/lotteries/lottery/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .factory('LotteriesModals', LotteriesModals);\r\n\r\n  LotteriesModals.$inject = ['modalHelper'];\r\n\r\n  function LotteriesModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"LotteryInit\",\r\n        config: {\r\n          templateUrl: 'src/lotteries/init/view.html',\r\n          controller: \"LotteryInitController\",\r\n          size: \"sm\"\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .factory('PlistsService', PlistsService);\r\n\r\n  /* @ngInject */\r\n  function PlistsService($resource, Plist) {\r\n\r\n    var service = {\r\n      GetPlists: GetPlists,\r\n      GetPlist: GetPlist,\r\n      SavePlist: SavePlist,\r\n      DeletePlist: DeletePlist,\r\n    }\r\n\r\n    return service;\r\n\r\n    function GetPlists(params) {\r\n      var params = params || {};\r\n      return Plist\r\n        .find({\r\n          filter: {\r\n            order: params.order || \"CreatedAt DESC\",\r\n          },\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function GetPlist(id) {\r\n      return Plist\r\n        .findById({\r\n          id: id\r\n        })\r\n        .$promise\r\n        .then(function(item) {\r\n          return item;\r\n        });\r\n    }\r\n\r\n    function SavePlist(plist) {\r\n\r\n      if (!plist.id) {\r\n        plist.CreatedAt = new Date();\r\n      }\r\n\r\n      plist.Participants = _.filter(plist.Participants, function(item) {\r\n        return (item.Name || item.Email);\r\n      });\r\n\r\n      return Plist\r\n        .updateOrCreate(plist)\r\n        .$promise\r\n        .then(function(item) {\r\n          return item;\r\n        });\r\n\r\n    }\r\n\r\n    function DeletePlist(id) {\r\n\r\n      return Plist\r\n        .deleteById({\r\n          id: id\r\n        })\r\n        .$promise\r\n        .then(function(item) {\r\n          return item;\r\n        });\r\n\r\n    }\r\n\r\n  }\r\n  PlistsService.$inject = [\"$resource\", \"Plist\"];\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.plists',\r\n      config: {\r\n        url: '/plists',\r\n        controller: \"PlistsController\",\r\n        templateUrl: 'src/plists/overview/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .factory('PlistsModals', PlistsModals);\r\n\r\n  PlistsModals.$inject = ['modalHelper'];\r\n\r\n  function PlistsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"PlistForm\",\r\n        config: {\r\n          templateUrl: 'src/plists/form/view.html',\r\n          controller: \"PlistFormController\",\r\n          size: \"md\",\r\n          backdrop: 'static',\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'auth',\r\n      config: {\r\n        abstract: true,\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'auth.login',\r\n      config: {\r\n        url: '/login',\r\n        params: {\r\n          ref: null\r\n        },\r\n        templateUrl: \"src/auth/login/view.html\",\r\n        controller: \"AuthLoginController\",\r\n      }\r\n    }, {\r\n      state: 'auth.logout',\r\n      config: {\r\n        url: '/logout',\r\n        template: \"<ui-view/>\",\r\n        controller: function(User, $state) {\r\n          User\r\n            .logout()\r\n            .$promise\r\n            .then(function() {})\r\n            .finally(function() {\r\n              localStorage.clear();\r\n              $state.go(\"auth.login\", {\r\n                ref: \"SIGNOUT\"\r\n              });\r\n            })\r\n\r\n        },\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .config(AuthInterceptorConfig)\r\n    .factory('AuthInterceptor', AuthInterceptor);\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptor($q, $injector, $cookies) {\r\n\r\n    return {\r\n      responseError: function(rejection) {\r\n        console.log(\"rejection\", rejection);\r\n        if (rejection.status === 401 && rejection.config.url != \"/api/Users/login\") {\r\n          localStorage.clear();\r\n          var $state = $injector.get('$state');\r\n          $state.go('auth.login', {\r\n            ref: \"SESSIONEND\"\r\n          });\r\n        }\r\n        return $q.reject(rejection);\r\n      }\r\n    };\r\n\r\n  }\r\n  AuthInterceptor.$inject = [\"$q\", \"$injector\", \"$cookies\"];\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptorConfig($httpProvider) {\r\n    $httpProvider.interceptors.push(\"AuthInterceptor\");\r\n  }\r\n  AuthInterceptorConfig.$inject = [\"$httpProvider\"];\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .constant('LoginMessages', {\r\n      SESSIONEND: {\r\n        Type: \"danger\",\r\n        Message: \"You were signed out\",\r\n        Details: \"Probably your session was timed out\",\r\n      },\r\n      SIGNOUT: {\r\n        Type: \"success\",\r\n        Message: \"You were signed out\",\r\n        Details: \"You may login again using the form\",\r\n      },\r\n      REGISTERED: {\r\n        Type: \"success\",\r\n        Message: \"Your account is ready, you can login now\",\r\n        Details: false,\r\n      },\r\n      AUTHERROR: {\r\n        Type: \"danger\",\r\n        Message: \"Authentication Error\",\r\n        Details: null,\r\n      },\r\n      UNAVAILABLE: {\r\n        Type: \"danger\",\r\n        Message: \"Service is not available\",\r\n        Details: \"Please try again later. If the problem insist, contact your system administrator\",\r\n      },\r\n      LOGIN_FAILED: {\r\n        Type: \"danger\",\r\n        Message: \"Name or password is incorrect\",\r\n        Details: \"Please try again\",\r\n      },\r\n    });\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular.module('app', [\r\n\r\n    'app.auth',\r\n    'app.lotteries',\r\n    'app.plists',\r\n    'app.settings',\r\n    'app._common',\r\n\r\n  ]);\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n\r\n    $rootScope.$on('$stateChangeStart', function(evt, to, params) {\r\n\r\n      if (to.redirectTo) {\r\n        evt.preventDefault();\r\n        $state.go(to.redirectTo, params);\r\n      }\r\n\r\n    });\r\n    \r\n  }\r\n  appRun.$inject = [\"$rootScope\", \"$state\", \"$stateParams\"];\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('configHelper', configHelperProvider);\r\n\r\n  configHelperProvider.$inject = [];\r\n\r\n  function configHelperProvider() {\r\n    /* jshint validthis:true */\r\n    this.$get = ConfigHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    ConfigHelper.$inject = [];\r\n\r\n    function ConfigHelper() {\r\n\r\n      var service = {\r\n        notifyConfig: notifyConfig\r\n      };\r\n\r\n      return service;\r\n\r\n      //function notifyConfig() {}\r\n      function notifyConfig(configName, message) {\r\n        message = message || {};\r\n        console.log(\"%c CONFIG - \" + configName + \" \", 'background: #9C27B0; color: #FFF', message);\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('numberFixedLen', numberFixedLen)\r\n\r\n  numberFixedLen.$inject = []\r\n\r\n  function numberFixedLen() {\r\n    return function(a, b) {\r\n      return (1e4 + a + \"\").slice(-b)\r\n    }\r\n  }\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('fromNow', fromNow)\r\n\r\n  fromNow.$inject = []\r\n\r\n  function fromNow() {\r\n    return function(date) {\r\n      return moment(date).fromNow();\r\n    }\r\n  }\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('fileicon', fileicon)\r\n\r\n  fileicon.$inject = []\r\n\r\n  function fileicon() {\r\n    var _icons = {\r\n      \"application/pdf\": \"fa-file-pdf-o\",\r\n      \"application/powerpoint\": \"fa-file-powerpoint-o\",\r\n      \"application/x-msword\": \"fa-file-word-o\",\r\n      \"application/x-msexcel\": \"fa-file-excel-o\",\r\n      \"application/x-mspowerpoint\": \"fa-file-powerpoint-o\",\r\n      \"audio/x-mpeg-3\": \"fa-file-audio-o\",\r\n      \"image/gif\": \"fa-file-image-o\",\r\n      \"image/png\": \"fa-file-image-o\",\r\n      \"image/tiff\": \"fa-file-image-o\",\r\n      \"image/jpeg\": \"fa-file-image-o\",\r\n      \"video/avi\": \"fa-file-video-o\",\r\n      \"video/mpeg\": \"fa-file-video-o\",\r\n      \"video/msvideo\": \"fa-file-video-o\",\r\n      \"video/quicktime\": \"fa-file-video-o\",\r\n      \"application/zip\": \"fa-file-zip-o\"\r\n    };\r\n    return function(a) {\r\n      return _icons[a] || \"fa-file-o\";\r\n    }\r\n  }\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('bytes', bytes)\r\n\r\n  bytes.$inject = []\r\n\r\n  function bytes() {\r\n    return function(bytes, precision) {\r\n      if (isNaN(parseFloat(bytes)) || !isFinite(bytes)) return '-';\r\n      if (typeof precision === 'undefined') precision = 1;\r\n      var units = ['bytes', 'kB', 'MB', 'GB', 'TB', 'PB'],\r\n        number = Math.floor(Math.log(bytes) / Math.log(1024));\r\n      return (bytes / Math.pow(1024, Math.floor(number))).toFixed(precision) + ' ' + units[number];\r\n    }\r\n  }\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('pwCheck', pwCheck)\r\n\r\n  /* @ngInject */\r\n  function pwCheck() {\r\n    return {\r\n      require: 'ngModel',\r\n      restrict: 'A',\r\n      link: function(scope, elem, attrs, ctrl) {\r\n        var firstPassword = '#' + attrs.pwCheck;\r\n        elem.add(firstPassword).on('keyup', function() {\r\n          scope.$apply(function() {\r\n            var v = elem.val() === $(firstPassword).val();\r\n            ctrl.$setValidity('pwmatch', v);\r\n          });\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngPrint', ngPrint)\r\n\r\n  /* @ngInject */\r\n  function ngPrint() {\r\n    var printSection = document.getElementById('printSection');\r\n    // if there is no printing section, create one\r\n    if (!printSection) {\r\n      printSection = document.createElement('div');\r\n      printSection.id = 'printSection';\r\n      document.body.appendChild(printSection);\r\n    }\r\n\r\n    function link(scope, element, attrs) {\r\n\r\n      element.on('click', function() {\r\n        var elemToPrint = document.getElementById(attrs.printElementId);\r\n        if (elemToPrint) {\r\n          printElement(elemToPrint);\r\n        }\r\n      });\r\n\r\n      var beforePrint = function() {\r\n        console.log('Functionality to run before printing.');\r\n      };\r\n      var afterPrint = function() {\r\n        console.log('Functionality to run after printing');\r\n        printSection.innerHTML = '';\r\n      };\r\n\r\n      if (window.matchMedia) {\r\n        var mediaQueryList = window.matchMedia('print');\r\n        mediaQueryList.addListener(function(mql) {\r\n          if (mql.matches) {\r\n            beforePrint();\r\n          } else {\r\n            afterPrint();\r\n          }\r\n        });\r\n      }\r\n\r\n      window.onbeforeprint = beforePrint;\r\n      window.onafterprint = afterPrint;\r\n\r\n    }\r\n\r\n    function printElement(elem) {\r\n      // clones the element you want to print\r\n      var domClone = elem.cloneNode(true);\r\n      printSection.appendChild(domClone);\r\n      window.print();\r\n    }\r\n    return {\r\n      link: link,\r\n      restrict: 'A'\r\n    };\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('errSrc', errSrc)\r\n\r\n  /* @ngInject */\r\n  function errSrc() {\r\n    return {\r\n      link: function(scope, element, attrs) {\r\n        if (!attrs.ngSrc) {\r\n          attrs.$set('src', attrs.errSrc);\r\n        }\r\n\r\n        element.bind('error', function() {\r\n\r\n          if (attrs.errSrc == \"REMOVE\") {\r\n            element.remove();\r\n            return;\r\n          }\r\n          if (attrs.src != attrs.errSrc) {\r\n            attrs.$set('src', attrs.errSrc);\r\n          }\r\n        });\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngConfirmClick', ngConfirmClick)\r\n\r\n  /* @ngInject */\r\n  function ngConfirmClick() {\r\n    return {\r\n      priority: -1,\r\n      restrict: 'A',\r\n      link: function(scope, element, attrs){\r\n        element.bind('click', function(e){\r\n          var message = attrs.ngConfirmClick;\r\n          if(message && !confirm(message)){\r\n            e.stopImmediatePropagation();\r\n            e.preventDefault();\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig(configHelperProvider, $locationProvider) {\r\n    $locationProvider.html5Mode(true);\r\n\r\n    configHelperProvider.$get().notifyConfig(\"Location HTML5\", true);\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig($httpProvider) {\r\n    $httpProvider.defaults.withCredentials = true;\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings', []);\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .controller('SettingsController', SettingsController);\r\n\r\n  /* @ngInject */\r\n  function SettingsController($state, SettingsService, SettingsModals) {\r\n    var vm = this;\r\n\r\n    vm.ChangePassword = ChangePassword;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n    function ChangePassword() {\r\n      SettingsModals\r\n        .ChangePassword()\r\n        .then(function() {\r\n          $state.go(\"auth.logout\", {\r\n            ref: \"SIGNOUT\"\r\n          });\r\n        });\r\n    }\r\n\r\n  }\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .controller(\"ChangePasswordController\", ChangePasswordController);\r\n\r\n  /* @ngInject */\r\n  function ChangePasswordController($modalInstance, ModalParams, User, toaster) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n    function Save() {\r\n      vm.loading = true;\r\n      User.prototype$updateAttributes({\r\n          id: User.getCurrentId(),\r\n          password: vm.Password\r\n        })\r\n        .$promise\r\n        .then(function(user) {\r\n          toaster.pop('success', \"Password Changed\");\r\n          vm.loading = false;\r\n          $modalInstance.close();\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries', []);\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .controller('LotteriesController', LotteriesController);\r\n\r\n  /* @ngInject */\r\n  function LotteriesController($state, LotteriesService, LotteriesModals) {\r\n    var vm = this;\r\n\r\n    vm.AddLottery = AddLottery;\r\n    vm.LoadLotteries = LoadLotteries;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadLotteries();\r\n    }\r\n\r\n    function LoadLotteries() {\r\n      vm.loading = true;\r\n      return LotteriesService\r\n        .GetLotteries()\r\n        .then(function(data) {\r\n          vm.Lotteries = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function AddLottery() {\r\n      LotteriesModals\r\n        .LotteryInit()\r\n        .then(function(id) {\r\n          if (id) {\r\n            $state.go(\"app.lotteries.lottery\", {\r\n              ID: id\r\n            });\r\n          }\r\n        });\r\n    }\r\n\r\n  }\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .controller('LotteryController', LotteryController);\r\n\r\n  /* @ngInject */\r\n  function LotteryController($state, LotteriesService, $stateParams) {\r\n    var vm = this;\r\n\r\n    vm.LoadLottery = LoadLottery;\r\n    vm.DeleteLottery = DeleteLottery;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadLottery();\r\n    }\r\n\r\n    function LoadLottery() {\r\n      vm.loading = true;\r\n      LotteriesService\r\n        .GetLottery($stateParams.ID)\r\n        .then(function(data) {\r\n          vm.Lottery = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function DeleteLottery() {\r\n      vm.loading = true;\r\n      LotteriesService\r\n        .DeleteLottery(vm.Lottery.id)\r\n        .then(function() {\r\n          $state.go(\"app.lotteries.overview\");\r\n        });\r\n    }\r\n\r\n  }\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .controller(\"LotteryInitController\", LotteryInitController);\r\n\r\n  /* @ngInject */\r\n  function LotteryInitController($modalInstance, ModalParams, LotteriesService, PlistsService) {\r\n    var vm = this;\r\n\r\n    vm.Lottery = {\r\n      Name: \"Lottery #\" + Math.floor((Math.random() * 99999) + 10000),\r\n    };\r\n\r\n    vm.LoadPlists = LoadPlists;\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadPlists();\r\n    }\r\n\r\n    function LoadPlists() {\r\n      vm.loading = true;\r\n      PlistsService\r\n        .GetPlists()\r\n        .then(function(data) {\r\n          vm.Plists = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function Save() {\r\n      LotteriesService\r\n        .SaveLottery(vm.Lottery)\r\n        .then(function(resp) {\r\n          $modalInstance.close(resp.id);\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists', []);\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .controller('PlistsController', PlistsController);\r\n\r\n  /* @ngInject */\r\n  function PlistsController(PlistsService, PlistsModals) {\r\n\r\n    var vm = this;\r\n\r\n    vm.AddPlist = AddPlist;\r\n    vm.ViewPlist = ViewPlist;\r\n    vm.LoadPlists = LoadPlists;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadPlists();\r\n    }\r\n\r\n    function LoadPlists(params) {\r\n      vm.loading = true;\r\n      PlistsService\r\n        .GetPlists(params)\r\n        .then(function(plists) {\r\n          vm.Plists = plists;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function AddPlist() {\r\n      PlistsModals\r\n        .PlistForm()\r\n        .then(function() {\r\n          vm.LoadPlists();\r\n        });\r\n    }\r\n\r\n    function ViewPlist(id) {\r\n      PlistsModals\r\n        .PlistForm({\r\n          ID: id\r\n        })\r\n        .then(function() {\r\n          vm.LoadPlists();\r\n        });\r\n    }\r\n\r\n  }\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .controller(\"PlistFormController\", PlistFormController);\r\n\r\n  /* @ngInject */\r\n  function PlistFormController($modalInstance, ModalParams, PlistsService) {\r\n    var vm = this;\r\n\r\n    vm.Plist = {\r\n      id: ModalParams.ID || null,\r\n      Participants: [],\r\n    };\r\n\r\n    vm.AddParticipants = AddParticipants;\r\n    vm.AddParticipants = AddParticipants;\r\n    vm.RemoveParticipant = RemoveParticipant;\r\n    vm.Save = Save;\r\n    vm.Delete = Delete;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      if (vm.Plist.id) {\r\n        vm.loading = true;\r\n        PlistsService\r\n          .GetPlist(vm.Plist.id)\r\n          .then(function(data) {\r\n            vm.Plist = data;\r\n\r\n            if (vm.Plist.Participants.length === 0) {\r\n              vm.AddParticipants();\r\n            }\r\n\r\n          })\r\n          .finally(function() {\r\n            vm.loading = false;\r\n          });\r\n      } else {\r\n        vm.AddParticipants();\r\n      }\r\n    }\r\n\r\n    function AddParticipants() {\r\n      for (var i = 0; i < 5; i++) {\r\n        vm.Plist.Participants.push({});\r\n      }\r\n    }\r\n\r\n    function RemoveParticipant(index) {\r\n      vm.Plist.Participants.splice(index, 1);\r\n    }\r\n\r\n    function Save() {\r\n      vm.loading = true;\r\n      PlistsService\r\n        .SavePlist(angular.copy(vm.Plist))\r\n        .then(function() {\r\n          vm.loading = false;\r\n          $modalInstance.close();\r\n        });\r\n    }\r\n\r\n\r\n    function Delete() {\r\n      vm.loading = true;\r\n      PlistsService\r\n        .DeletePlist(vm.Plist.id)\r\n        .then(function() {\r\n          vm.loading = false;\r\n          $modalInstance.close();\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth', [])\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .controller('AuthLoginController', AuthLoginController);\r\n\r\n  /* @ngInject */\r\n  function AuthLoginController($stateParams, $state, LoginMessages, User) {\r\n    var vm = this;\r\n\r\n    vm.loading = false;\r\n    vm.SignIn = SignIn;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n\r\n      if ($stateParams.ref) {\r\n        SignMessage($stateParams.ref.toUpperCase());\r\n      }\r\n    }\r\n\r\n    function SignIn() {\r\n\r\n      vm.loading = true;\r\n      vm.Alert = false;\r\n\r\n      User\r\n        .login(angular.copy(vm.credentials))\r\n        .$promise\r\n        .then(function(response) {\r\n          $state.go(\"app.lotteries.overview\");\r\n        }, function(rejection) {\r\n          SignMessage(rejection.data.error.code.toUpperCase());\r\n        })\r\n        .finally(function() {\r\n          vm.credentials.password = null;\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function SignMessage(code) {\r\n      vm.Alert = LoginMessages[code];\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .run(RoutesConfig);\r\n\r\n  RoutesConfig.$inject = ['configHelper', 'routerHelper'];\r\n\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n\r\n    var _states = getStates();\r\n    routerHelper.configureStates(_states, \"/\");\r\n\r\n    configHelper.notifyConfig(\"Basic Routes\", _.map(_states, function(_state) {\r\n      return _state.state;\r\n    }));\r\n\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app',\r\n      config: {\r\n        abstract: true,\r\n        templateUrl: 'src/_common/views/layout.html',\r\n        controller: function($scope, User) {\r\n          User.getCurrent()\r\n            .$promise\r\n            .then(function(u) {\r\n              $scope.username = u.username;\r\n            });\r\n        }\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsService', SettingsService);\r\n\r\n  /* @ngInject */\r\n  function SettingsService($resource) {\r\n\r\n    var service = {\r\n      GetSettings: GetSettings,\r\n      GetSetting: GetSetting,\r\n      SaveSetting: SaveSetting,\r\n      DeleteSetting: DeleteSetting,\r\n    }\r\n\r\n    return service;\r\n\r\n    function GetSettings(params) {\r\n      return $resource(APP.Service + \"_design/models/_view/Settings\")\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return _.chain(data.rows)\r\n            .map(function(item) {\r\n              return item.value;\r\n            })\r\n            .sortBy(function(item) {\r\n              return item.DrewAt || 0;\r\n            })\r\n            .reverse()\r\n            .value();\r\n        });\r\n    }\r\n\r\n    function GetSetting(id) {\r\n      return $resource(APP.Service + id)\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function SaveSetting(Setting) {\r\n      Setting.Type = \"Setting\";\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function DeleteSetting(Setting) {\r\n\r\n      Setting._deleted = true;\r\n      Setting.DeletedAt = new Date();\r\n\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise;\r\n    }\r\n\r\n  }\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.settings',\r\n      config: {\r\n        url: '/settings',\r\n        controller: \"SettingsController\",\r\n        templateUrl: 'src/settings/overview/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .factory('SettingsModals', SettingsModals);\r\n\r\n  SettingsModals.$inject = ['modalHelper'];\r\n\r\n  function SettingsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"ChangePassword\",\r\n        config: {\r\n          templateUrl: 'src/settings/changepassword/view.html',\r\n          controller: \"ChangePasswordController\",\r\n          size: \"sm\"\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .factory('LotteriesService', LotteriesService);\r\n\r\n  /* @ngInject */\r\n  function LotteriesService($resource, Lottery) {\r\n\r\n    var service = {\r\n      GetLotteries: GetLotteries,\r\n      GetLottery: GetLottery,\r\n      SaveLottery: SaveLottery,\r\n      DeleteLottery: DeleteLottery,\r\n    }\r\n\r\n    return service;\r\n\r\n    function GetLotteries(params) {\r\n      var params = params || {};\r\n      return Lottery\r\n        .find({\r\n          filter: {\r\n            order: params.order || \"CreatedAt DESC\",\r\n          },\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function GetLottery(id) {\r\n      return Lottery\r\n        .findById({\r\n          id: id\r\n        })\r\n        .$promise\r\n        .then(function(item) {\r\n          return item;\r\n        });\r\n    }\r\n\r\n    function SaveLottery(lottery) {\r\n\r\n      lottery.DrewAt = new Date();\r\n      return Lottery\r\n        .create(lottery)\r\n        .$promise\r\n        .then(function(item) {\r\n          return item;\r\n        });\r\n\r\n    }\r\n\r\n    function DeleteLottery(id) {\r\n\r\n      return Lottery\r\n        .deleteById({\r\n          id: id\r\n        })\r\n        .$promise\r\n        .then(function(item) {\r\n          return item;\r\n        });\r\n\r\n    }\r\n\r\n  }\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.lotteries',\r\n      config: {\r\n        abstract: true,\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'app.lotteries.overview',\r\n      config: {\r\n        url: '/',\r\n        controller: \"LotteriesController\",\r\n        templateUrl: 'src/lotteries/overview/view.html',\r\n      }\r\n    }, {\r\n      state: 'app.lotteries.lottery',\r\n      config: {\r\n        url: '/lottery/:ID',\r\n        controller: \"LotteryController\",\r\n        templateUrl: 'src/lotteries/lottery/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .factory('LotteriesModals', LotteriesModals);\r\n\r\n  LotteriesModals.$inject = ['modalHelper'];\r\n\r\n  function LotteriesModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"LotteryInit\",\r\n        config: {\r\n          templateUrl: 'src/lotteries/init/view.html',\r\n          controller: \"LotteryInitController\",\r\n          size: \"sm\"\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .factory('PlistsService', PlistsService);\r\n\r\n  /* @ngInject */\r\n  function PlistsService($resource, Plist) {\r\n\r\n    var service = {\r\n      GetPlists: GetPlists,\r\n      GetPlist: GetPlist,\r\n      SavePlist: SavePlist,\r\n      DeletePlist: DeletePlist,\r\n    }\r\n\r\n    return service;\r\n\r\n    function GetPlists(params) {\r\n      var params = params || {};\r\n      return Plist\r\n        .find({\r\n          filter: {\r\n            order: params.order || \"CreatedAt DESC\",\r\n          },\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function GetPlist(id) {\r\n      return Plist\r\n        .findById({\r\n          id: id\r\n        })\r\n        .$promise\r\n        .then(function(item) {\r\n          return item;\r\n        });\r\n    }\r\n\r\n    function SavePlist(plist) {\r\n\r\n      if (!plist.id) {\r\n        plist.CreatedAt = new Date();\r\n      }\r\n\r\n      plist.Participants = _.filter(plist.Participants, function(item) {\r\n        return (item.Name || item.Email);\r\n      });\r\n\r\n      return Plist\r\n        .updateOrCreate(plist)\r\n        .$promise\r\n        .then(function(item) {\r\n          return item;\r\n        });\r\n\r\n    }\r\n\r\n    function DeletePlist(id) {\r\n\r\n      return Plist\r\n        .deleteById({\r\n          id: id\r\n        })\r\n        .$promise\r\n        .then(function(item) {\r\n          return item;\r\n        });\r\n\r\n    }\r\n\r\n  }\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.plists',\r\n      config: {\r\n        url: '/plists',\r\n        controller: \"PlistsController\",\r\n        templateUrl: 'src/plists/overview/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .factory('PlistsModals', PlistsModals);\r\n\r\n  PlistsModals.$inject = ['modalHelper'];\r\n\r\n  function PlistsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"PlistForm\",\r\n        config: {\r\n          templateUrl: 'src/plists/form/view.html',\r\n          controller: \"PlistFormController\",\r\n          size: \"md\",\r\n          backdrop: 'static',\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'auth',\r\n      config: {\r\n        abstract: true,\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'auth.login',\r\n      config: {\r\n        url: '/login',\r\n        params: {\r\n          ref: null\r\n        },\r\n        templateUrl: \"src/auth/login/view.html\",\r\n        controller: \"AuthLoginController\",\r\n      }\r\n    }, {\r\n      state: 'auth.logout',\r\n      config: {\r\n        url: '/logout',\r\n        template: \"<ui-view/>\",\r\n        controller: function(User, $state) {\r\n          User\r\n            .logout()\r\n            .$promise\r\n            .then(function() {})\r\n            .finally(function() {\r\n              localStorage.clear();\r\n              $state.go(\"auth.login\", {\r\n                ref: \"SIGNOUT\"\r\n              });\r\n            })\r\n\r\n        },\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .config(AuthInterceptorConfig)\r\n    .factory('AuthInterceptor', AuthInterceptor);\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptor($q, $injector, $cookies) {\r\n\r\n    return {\r\n      responseError: function(rejection) {\r\n        console.log(\"rejection\", rejection);\r\n        if (rejection.status === 401 && rejection.config.url != \"/api/Users/login\") {\r\n          localStorage.clear();\r\n          var $state = $injector.get('$state');\r\n          $state.go('auth.login', {\r\n            ref: \"SESSIONEND\"\r\n          });\r\n        }\r\n        return $q.reject(rejection);\r\n      }\r\n    };\r\n\r\n  }\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptorConfig($httpProvider) {\r\n    $httpProvider.interceptors.push(\"AuthInterceptor\");\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .constant('LoginMessages', {\r\n      SESSIONEND: {\r\n        Type: \"danger\",\r\n        Message: \"You were signed out\",\r\n        Details: \"Probably your session was timed out\",\r\n      },\r\n      SIGNOUT: {\r\n        Type: \"success\",\r\n        Message: \"You were signed out\",\r\n        Details: \"You may login again using the form\",\r\n      },\r\n      REGISTERED: {\r\n        Type: \"success\",\r\n        Message: \"Your account is ready, you can login now\",\r\n        Details: false,\r\n      },\r\n      AUTHERROR: {\r\n        Type: \"danger\",\r\n        Message: \"Authentication Error\",\r\n        Details: null,\r\n      },\r\n      UNAVAILABLE: {\r\n        Type: \"danger\",\r\n        Message: \"Service is not available\",\r\n        Details: \"Please try again later. If the problem insist, contact your system administrator\",\r\n      },\r\n      LOGIN_FAILED: {\r\n        Type: \"danger\",\r\n        Message: \"Name or password is incorrect\",\r\n        Details: \"Please try again\",\r\n      },\r\n    });\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular.module('app', [\r\n\r\n    'app.auth',\r\n    'app.lotteries',\r\n    'app.plists',\r\n    'app.settings',\r\n    'app._common',\r\n\r\n  ]);\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n\r\n    $rootScope.$on('$stateChangeStart', function(evt, to, params) {\r\n\r\n      if (to.redirectTo) {\r\n        evt.preventDefault();\r\n        $state.go(to.redirectTo, params);\r\n      }\r\n\r\n    });\r\n    \r\n  }\r\n\r\n}());\r\n"],"sourceRoot":"/source/"}