{"version":3,"sources":["_common/_module.js","_common/helpers/route.helper.js","_common/helpers/modal.helper.js","_common/helpers/config.helper.js","_common/filters/numberfixedlen.js","_common/filters/fromnow.js","_common/filters/fileicon.js","_common/filters/bytes.js","_common/directives/ngprint.js","_common/directives/errsrc.js","_common/configs/permission.config.js","app.min.js","_common/configs/location.config.js","_common/configs/http.config.js","_common/configs/google-analytics.config.js","settings/_module.js","settings/overview/controller.js","plists/_module.js","plists/overview/controller.js","plists/form/controller.js","lotteries/_module.js","lotteries/overview/controller.js","lotteries/lottery/controller.js","lotteries/init/controller.js","auth/_module.js","auth/login/controller.js","_common/routes.js","settings/service.js","settings/routes.js","plists/service.js","plists/routes.js","plists/modals.js","lotteries/service.js","lotteries/routes.js","lotteries/modals.js","auth/routes.js","auth/interceptor.js","auth/constants.js","app.js","run.js","bootstrap.js"],"names":["angular","module","routerHelperProvider","$locationProvider","$stateProvider","$urlRouterProvider","RouterHelper","$state","configureStates","states","otherwisePath","forEach","state","config","controllerAs","extend","views","_","each","item","hasOtherwise","otherwise","getStates","get","service","this","$get","$inject","provider","modalHelperProvider","modalHelper","$uibModal","$q","toaster","configureModals","modals","_ret","modal","obj","ModalResultComplete","response","ModalResultFailed","reason","reject","resolve","ModalParams","open","result","then","configHelperProvider","ConfigHelper","notifyConfig","configName","message","console","log","numberFixedLen","a","b","slice","filter","fromNow","date","moment","fileicon","_icons","application/pdf","application/powerpoint","application/x-msword","application/x-msexcel","application/x-mspowerpoint","audio/x-mpeg-3","image/gif","image/png","image/tiff","image/jpeg","video/avi","video/mpeg","video/msvideo","video/quicktime","application/zip","bytes","precision","isNaN","parseFloat","isFinite","units","number","Math","floor","pow","toFixed","ngPrint","link","scope","element","attrs","on","elemToPrint","document","getElementById","printElementId","printElement","beforePrint","afterPrint","printSection","innerHTML","window","matchMedia","mediaQueryList","addListener","mql","matches","onbeforeprint","onafterprint","elem","domClone","cloneNode","appendChild","print","createElement","id","body","restrict","directive","errSrc","ngSrc","$set","bind","remove","src","PermissionsConfig","configHelper","Permission","User","defineRole","isAuthenticated","run","LocationConfig","html5Mode","$httpProvider","defaults","withCredentials","AnalyticsConfig","AnalyticsProvider","GoogleTrackCode","setAccount","trackUrlParams","ignoreFirstPageLoad","setPageEvent","SettingsController","SettingsService","activate","controller","PlistsController","PlistsService","PlistsModals","vm","LoadPlists","params","loading","GetPlists","plists","Plists","AddPlist","PlistForm","ViewPlist","ID","DeletePlist","PlistFormController","$modalInstance","GetPlist","data","Plist","Participants","length","AddParticipants","i","push","RemoveParticipant","index","splice","Save","SavePlist","copy","close","LotteriesController","LotteriesService","LotteriesModals","LoadLotteries","HasPages","FetchPrevious","Previous","PreviousPage","FetchNext","Next","NextPage","GetLotteries","Lotteries","AddLottery","LotteryInit","go","DeleteLottery","lottery","LotteryController","$stateParams","LoadLottery","GetLottery","Lottery","LotteryInitController","ParticipantsService","LoadPLists","GetPLists","PLists","SaveLottery","resp","Name","random","AuthLoginController","LoginMessages","ref","SignMessage","toUpperCase","SignIn","Alert","login","credentials","$promise","rejection","error","CODE","RoutesConfig","routerHelper","_states","map","_state","abstract","templateUrl","$scope","getCurrent","u","username","$resource","GetSettings","APP","Service","chain","rows","value","sortBy","DrewAt","reverse","GetSetting","SaveSetting","Setting","Type","save","DeleteSetting","_deleted","DeletedAt","Date","factory","appRun","url","permissions","except","redirectTo","find","order","findById","plist","CreatedAt","Email","updateOrCreate","deleteById","GetParticipants","Participant","include","GetParticipant","SaveParticipant","participants","DeleteParticipant","getModals","size","backdrop","_offset","_limit","_total","limit","skip","total_rows","shuffle","template","only","logout","localStorage","clear","AuthInterceptor","$injector","$cookies","responseError","status","IsSignIn","AuthInterceptorConfig","interceptors","constant","SESSIONEND","Message","Details","SIGNOUT","REGISTERED","AUTHERROR","UNAVAILABLE","UNAUTHORIZED","$rootScope","$on","evt","to","preventDefault","Project","Version","ready","bootstrap"],"mappings":"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","file":"app.min.js","sourcesContent":["(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common', [\r\n      'lbServices',\r\n      'angular-google-analytics',\r\n      'ngResource',\r\n      'ngSanitize',\r\n      'ngCookies',\r\n      'permission',\r\n      'toaster',\r\n      'ui.bootstrap',\r\n      'ui.router',\r\n    ]);\r\n})();\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('routerHelper', routerHelperProvider);\r\n\r\n  routerHelperProvider.$inject = ['$locationProvider', '$stateProvider', '$urlRouterProvider'];\r\n  /* @ngInject */\r\n  function routerHelperProvider($locationProvider, $stateProvider, $urlRouterProvider) {\r\n    /* jshint validthis:true */\r\n    this.$get = RouterHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    RouterHelper.$inject = ['$state'];\r\n\r\n    function RouterHelper($state) {\r\n      var hasOtherwise = false;\r\n\r\n      var service = {\r\n        configureStates: configureStates,\r\n        getStates: getStates\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureStates(states, otherwisePath) {\r\n        states.forEach(function(state) {\r\n\r\n          var config = {\r\n            controllerAs: 'vm',\r\n          };\r\n\r\n          angular.extend(config, state.config);\r\n\r\n          if (config.views) {\r\n            _.each(config.views, function(item) {\r\n              item.controllerAs = 'vm';\r\n            });\r\n          }\r\n\r\n          $stateProvider.state(state.state, config);\r\n        });\r\n        if (otherwisePath && !hasOtherwise) {\r\n          hasOtherwise = true;\r\n          $urlRouterProvider.otherwise(otherwisePath);\r\n        }\r\n      }\r\n\r\n      function getStates() {\r\n        return $state.get();\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('modalHelper', modalHelperProvider);\r\n\r\n  modalHelperProvider.$inject = [];\r\n  /* @ngInject */\r\n  function modalHelperProvider() {\r\n    /* jshint validthis:true */\r\n    this.$get = modalHelper;\r\n\r\n    modalHelper.$inject = ['$uibModal', '$q', 'toaster'];\r\n\r\n    function modalHelper($uibModal, $q, toaster) {\r\n\r\n      var service = {\r\n        configureModals: configureModals\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureModals(modals) {\r\n        var _ret = {};\r\n        angular.forEach(modals, function(modal) {\r\n          _ret[modal.modal] = function(obj) {\r\n            var config = {\r\n              controllerAs: 'vm',\r\n              resolve: {\r\n                ModalParams: function() {\r\n                  return obj || {};\r\n                }\r\n              }\r\n            };\r\n            angular.extend(config, modal.config);\r\n\r\n            return $uibModal\r\n              .open(config)\r\n              .result\r\n              .then(ModalResultComplete)\r\n              .catch(ModalResultFailed);\r\n\r\n            function ModalResultComplete(response) {\r\n              return response;\r\n            }\r\n\r\n            function ModalResultFailed(reason) {\r\n              if (reason && reason !== \"backdrop click\") {\r\n                return $q.reject();\r\n              }\r\n            }\r\n          };\r\n        });\r\n        return _ret;\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('configHelper', configHelperProvider);\r\n\r\n  configHelperProvider.$inject = [];\r\n\r\n  function configHelperProvider() {\r\n    /* jshint validthis:true */\r\n    this.$get = ConfigHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    ConfigHelper.$inject = [];\r\n\r\n    function ConfigHelper() {\r\n\r\n      var service = {\r\n        notifyConfig: notifyConfig\r\n      };\r\n\r\n      return service;\r\n\r\n      //function notifyConfig() {}\r\n      function notifyConfig(configName, message) {\r\n        message = message || {};\r\n        console.log(\"%c CONFIG - \" + configName + \" \", 'background: #9C27B0; color: #FFF', message);\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('numberFixedLen', numberFixedLen)\r\n\r\n  numberFixedLen.$inject = []\r\n\r\n  function numberFixedLen() {\r\n    return function(a, b) {\r\n      return (1e4 + a + \"\").slice(-b)\r\n    }\r\n  }\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('fromNow', fromNow)\r\n\r\n  fromNow.$inject = []\r\n\r\n  function fromNow() {\r\n    return function(date) {\r\n      return moment(date).fromNow();\r\n    }\r\n  }\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('fileicon', fileicon)\r\n\r\n  fileicon.$inject = []\r\n\r\n  function fileicon() {\r\n    var _icons = {\r\n      \"application/pdf\": \"fa-file-pdf-o\",\r\n      \"application/powerpoint\": \"fa-file-powerpoint-o\",\r\n      \"application/x-msword\": \"fa-file-word-o\",\r\n      \"application/x-msexcel\": \"fa-file-excel-o\",\r\n      \"application/x-mspowerpoint\": \"fa-file-powerpoint-o\",\r\n      \"audio/x-mpeg-3\": \"fa-file-audio-o\",\r\n      \"image/gif\": \"fa-file-image-o\",\r\n      \"image/png\": \"fa-file-image-o\",\r\n      \"image/tiff\": \"fa-file-image-o\",\r\n      \"image/jpeg\": \"fa-file-image-o\",\r\n      \"video/avi\": \"fa-file-video-o\",\r\n      \"video/mpeg\": \"fa-file-video-o\",\r\n      \"video/msvideo\": \"fa-file-video-o\",\r\n      \"video/quicktime\": \"fa-file-video-o\",\r\n      \"application/zip\": \"fa-file-zip-o\"\r\n    };\r\n    return function(a) {\r\n      return _icons[a] || \"fa-file-o\";\r\n    }\r\n  }\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('bytes', bytes)\r\n\r\n  bytes.$inject = []\r\n\r\n  function bytes() {\r\n    return function(bytes, precision) {\r\n      if (isNaN(parseFloat(bytes)) || !isFinite(bytes)) return '-';\r\n      if (typeof precision === 'undefined') precision = 1;\r\n      var units = ['bytes', 'kB', 'MB', 'GB', 'TB', 'PB'],\r\n        number = Math.floor(Math.log(bytes) / Math.log(1024));\r\n      return (bytes / Math.pow(1024, Math.floor(number))).toFixed(precision) + ' ' + units[number];\r\n    }\r\n  }\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngPrint', ngPrint)\r\n\r\n  ngPrint.$inject = []\r\n\r\n  function ngPrint() {\r\n    var printSection = document.getElementById('printSection');\r\n    // if there is no printing section, create one\r\n    if (!printSection) {\r\n      printSection = document.createElement('div');\r\n      printSection.id = 'printSection';\r\n      document.body.appendChild(printSection);\r\n    }\r\n\r\n    function link(scope, element, attrs) {\r\n\r\n      element.on('click', function() {\r\n        var elemToPrint = document.getElementById(attrs.printElementId);\r\n        if (elemToPrint) {\r\n          printElement(elemToPrint);\r\n        }\r\n      });\r\n\r\n      var beforePrint = function() {\r\n        console.log('Functionality to run before printing.');\r\n      };\r\n      var afterPrint = function() {\r\n        console.log('Functionality to run after printing');\r\n          printSection.innerHTML = '';\r\n      };\r\n\r\n      if (window.matchMedia) {\r\n        var mediaQueryList = window.matchMedia('print');\r\n        mediaQueryList.addListener(function(mql) {\r\n          if (mql.matches) {\r\n            beforePrint();\r\n          } else {\r\n            afterPrint();\r\n          }\r\n        });\r\n      }\r\n\r\n      window.onbeforeprint = beforePrint;\r\n      window.onafterprint = afterPrint;\r\n\r\n    }\r\n\r\n    function printElement(elem) {\r\n      // clones the element you want to print\r\n      var domClone = elem.cloneNode(true);\r\n      printSection.appendChild(domClone);\r\n      window.print();\r\n    }\r\n    return {\r\n      link: link,\r\n      restrict: 'A'\r\n    };\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('errSrc', errSrc)\r\n\r\n  errSrc.$inject = []\r\n\r\n  function errSrc() {\r\n    return {\r\n      link: function(scope, element, attrs) {\r\n        if(!attrs.ngSrc){\r\n          attrs.$set('src', attrs.errSrc);\r\n        }\r\n\r\n        element.bind('error', function() {\r\n\r\n          if (attrs.errSrc == \"REMOVE\") {\r\n            element.remove();\r\n            return;\r\n          }\r\n          if (attrs.src != attrs.errSrc) {\r\n            attrs.$set('src', attrs.errSrc);\r\n          }\r\n        });\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .run(PermissionsConfig);\r\n\r\n  /* @ngInject */\r\n  function PermissionsConfig(configHelper, Permission, User) {\r\n\r\n    Permission.defineRole('Anonymous', function() {\r\n      return !User.isAuthenticated();\r\n    });\r\n\r\n    configHelper.notifyConfig(\"Permissions\", \"Loaded\");\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common', [\r\n      'lbServices',\r\n      'angular-google-analytics',\r\n      'ngResource',\r\n      'ngSanitize',\r\n      'ngCookies',\r\n      'permission',\r\n      'toaster',\r\n      'ui.bootstrap',\r\n      'ui.router',\r\n    ]);\r\n})();\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('routerHelper', routerHelperProvider);\r\n\r\n  routerHelperProvider.$inject = ['$locationProvider', '$stateProvider', '$urlRouterProvider'];\r\n  /* @ngInject */\r\n  function routerHelperProvider($locationProvider, $stateProvider, $urlRouterProvider) {\r\n    /* jshint validthis:true */\r\n    this.$get = RouterHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    RouterHelper.$inject = ['$state'];\r\n\r\n    function RouterHelper($state) {\r\n      var hasOtherwise = false;\r\n\r\n      var service = {\r\n        configureStates: configureStates,\r\n        getStates: getStates\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureStates(states, otherwisePath) {\r\n        states.forEach(function(state) {\r\n\r\n          var config = {\r\n            controllerAs: 'vm',\r\n          };\r\n\r\n          angular.extend(config, state.config);\r\n\r\n          if (config.views) {\r\n            _.each(config.views, function(item) {\r\n              item.controllerAs = 'vm';\r\n            });\r\n          }\r\n\r\n          $stateProvider.state(state.state, config);\r\n        });\r\n        if (otherwisePath && !hasOtherwise) {\r\n          hasOtherwise = true;\r\n          $urlRouterProvider.otherwise(otherwisePath);\r\n        }\r\n      }\r\n\r\n      function getStates() {\r\n        return $state.get();\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('modalHelper', modalHelperProvider);\r\n\r\n  modalHelperProvider.$inject = [];\r\n  /* @ngInject */\r\n  function modalHelperProvider() {\r\n    /* jshint validthis:true */\r\n    this.$get = modalHelper;\r\n\r\n    modalHelper.$inject = ['$uibModal', '$q', 'toaster'];\r\n\r\n    function modalHelper($uibModal, $q, toaster) {\r\n\r\n      var service = {\r\n        configureModals: configureModals\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureModals(modals) {\r\n        var _ret = {};\r\n        angular.forEach(modals, function(modal) {\r\n          _ret[modal.modal] = function(obj) {\r\n            var config = {\r\n              controllerAs: 'vm',\r\n              resolve: {\r\n                ModalParams: function() {\r\n                  return obj || {};\r\n                }\r\n              }\r\n            };\r\n            angular.extend(config, modal.config);\r\n\r\n            return $uibModal\r\n              .open(config)\r\n              .result\r\n              .then(ModalResultComplete)\r\n              .catch(ModalResultFailed);\r\n\r\n            function ModalResultComplete(response) {\r\n              return response;\r\n            }\r\n\r\n            function ModalResultFailed(reason) {\r\n              if (reason && reason !== \"backdrop click\") {\r\n                return $q.reject();\r\n              }\r\n            }\r\n          };\r\n        });\r\n        return _ret;\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('configHelper', configHelperProvider);\r\n\r\n  configHelperProvider.$inject = [];\r\n\r\n  function configHelperProvider() {\r\n    /* jshint validthis:true */\r\n    this.$get = ConfigHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    ConfigHelper.$inject = [];\r\n\r\n    function ConfigHelper() {\r\n\r\n      var service = {\r\n        notifyConfig: notifyConfig\r\n      };\r\n\r\n      return service;\r\n\r\n      //function notifyConfig() {}\r\n      function notifyConfig(configName, message) {\r\n        message = message || {};\r\n        console.log(\"%c CONFIG - \" + configName + \" \", 'background: #9C27B0; color: #FFF', message);\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('numberFixedLen', numberFixedLen)\r\n\r\n  numberFixedLen.$inject = []\r\n\r\n  function numberFixedLen() {\r\n    return function(a, b) {\r\n      return (1e4 + a + \"\").slice(-b)\r\n    }\r\n  }\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('fromNow', fromNow)\r\n\r\n  fromNow.$inject = []\r\n\r\n  function fromNow() {\r\n    return function(date) {\r\n      return moment(date).fromNow();\r\n    }\r\n  }\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('fileicon', fileicon)\r\n\r\n  fileicon.$inject = []\r\n\r\n  function fileicon() {\r\n    var _icons = {\r\n      \"application/pdf\": \"fa-file-pdf-o\",\r\n      \"application/powerpoint\": \"fa-file-powerpoint-o\",\r\n      \"application/x-msword\": \"fa-file-word-o\",\r\n      \"application/x-msexcel\": \"fa-file-excel-o\",\r\n      \"application/x-mspowerpoint\": \"fa-file-powerpoint-o\",\r\n      \"audio/x-mpeg-3\": \"fa-file-audio-o\",\r\n      \"image/gif\": \"fa-file-image-o\",\r\n      \"image/png\": \"fa-file-image-o\",\r\n      \"image/tiff\": \"fa-file-image-o\",\r\n      \"image/jpeg\": \"fa-file-image-o\",\r\n      \"video/avi\": \"fa-file-video-o\",\r\n      \"video/mpeg\": \"fa-file-video-o\",\r\n      \"video/msvideo\": \"fa-file-video-o\",\r\n      \"video/quicktime\": \"fa-file-video-o\",\r\n      \"application/zip\": \"fa-file-zip-o\"\r\n    };\r\n    return function(a) {\r\n      return _icons[a] || \"fa-file-o\";\r\n    }\r\n  }\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('bytes', bytes)\r\n\r\n  bytes.$inject = []\r\n\r\n  function bytes() {\r\n    return function(bytes, precision) {\r\n      if (isNaN(parseFloat(bytes)) || !isFinite(bytes)) return '-';\r\n      if (typeof precision === 'undefined') precision = 1;\r\n      var units = ['bytes', 'kB', 'MB', 'GB', 'TB', 'PB'],\r\n        number = Math.floor(Math.log(bytes) / Math.log(1024));\r\n      return (bytes / Math.pow(1024, Math.floor(number))).toFixed(precision) + ' ' + units[number];\r\n    }\r\n  }\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngPrint', ngPrint)\r\n\r\n  ngPrint.$inject = []\r\n\r\n  function ngPrint() {\r\n    var printSection = document.getElementById('printSection');\r\n    // if there is no printing section, create one\r\n    if (!printSection) {\r\n      printSection = document.createElement('div');\r\n      printSection.id = 'printSection';\r\n      document.body.appendChild(printSection);\r\n    }\r\n\r\n    function link(scope, element, attrs) {\r\n\r\n      element.on('click', function() {\r\n        var elemToPrint = document.getElementById(attrs.printElementId);\r\n        if (elemToPrint) {\r\n          printElement(elemToPrint);\r\n        }\r\n      });\r\n\r\n      var beforePrint = function() {\r\n        console.log('Functionality to run before printing.');\r\n      };\r\n      var afterPrint = function() {\r\n        console.log('Functionality to run after printing');\r\n          printSection.innerHTML = '';\r\n      };\r\n\r\n      if (window.matchMedia) {\r\n        var mediaQueryList = window.matchMedia('print');\r\n        mediaQueryList.addListener(function(mql) {\r\n          if (mql.matches) {\r\n            beforePrint();\r\n          } else {\r\n            afterPrint();\r\n          }\r\n        });\r\n      }\r\n\r\n      window.onbeforeprint = beforePrint;\r\n      window.onafterprint = afterPrint;\r\n\r\n    }\r\n\r\n    function printElement(elem) {\r\n      // clones the element you want to print\r\n      var domClone = elem.cloneNode(true);\r\n      printSection.appendChild(domClone);\r\n      window.print();\r\n    }\r\n    return {\r\n      link: link,\r\n      restrict: 'A'\r\n    };\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('errSrc', errSrc)\r\n\r\n  errSrc.$inject = []\r\n\r\n  function errSrc() {\r\n    return {\r\n      link: function(scope, element, attrs) {\r\n        if(!attrs.ngSrc){\r\n          attrs.$set('src', attrs.errSrc);\r\n        }\r\n\r\n        element.bind('error', function() {\r\n\r\n          if (attrs.errSrc == \"REMOVE\") {\r\n            element.remove();\r\n            return;\r\n          }\r\n          if (attrs.src != attrs.errSrc) {\r\n            attrs.$set('src', attrs.errSrc);\r\n          }\r\n        });\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .run(PermissionsConfig);\r\n\r\n  /* @ngInject */\r\n  function PermissionsConfig(configHelper, Permission, User) {\r\n\r\n    Permission.defineRole('Anonymous', function() {\r\n      return !User.isAuthenticated();\r\n    });\r\n\r\n    configHelper.notifyConfig(\"Permissions\", \"Loaded\");\r\n\r\n  }\r\n  PermissionsConfig.$inject = [\"configHelper\", \"Permission\", \"User\"];\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig(configHelperProvider, $locationProvider) {\r\n    $locationProvider.html5Mode(true);\r\n\r\n    configHelperProvider.$get().notifyConfig(\"Location HTML5\", true);\r\n  }\r\n  LocationConfig.$inject = [\"configHelperProvider\", \"$locationProvider\"];\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig($httpProvider) {\r\n    $httpProvider.defaults.withCredentials = true;\r\n  }\r\n  LocationConfig.$inject = [\"$httpProvider\"];\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .config(AnalyticsConfig);\r\n\r\n  /* @ngInject */\r\n  function AnalyticsConfig(configHelperProvider, AnalyticsProvider) {\r\n\r\n    var GoogleTrackCode = \"UA-4623228-21\";\r\n\r\n    AnalyticsProvider.setAccount(GoogleTrackCode);\r\n\r\n    AnalyticsProvider.trackUrlParams(true);\r\n    AnalyticsProvider.ignoreFirstPageLoad(true);\r\n    AnalyticsProvider.setPageEvent('$stateChangeSuccess');\r\n\r\n    configHelperProvider.$get().notifyConfig(\"Google Analytics\", GoogleTrackCode);\r\n\r\n  }\r\n  AnalyticsConfig.$inject = [\"configHelperProvider\", \"AnalyticsProvider\"];\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings', []);\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .controller('SettingsController', SettingsController);\r\n\r\n  /* @ngInject */\r\n  function SettingsController(SettingsService, toaster) {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n    }\r\n\r\n\r\n  }\r\n  SettingsController.$inject = [\"SettingsService\", \"toaster\"];\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists', []);\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .controller('PlistsController', PlistsController);\r\n\r\n  /* @ngInject */\r\n  function PlistsController(PlistsService, PlistsModals) {\r\n\r\n    var vm = this;\r\n\r\n    vm.AddPlist = AddPlist;\r\n    vm.ViewPlist = ViewPlist;\r\n    vm.DeletePlist = DeletePlist;\r\n    vm.LoadPlists = LoadPlists;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadPlists();\r\n    }\r\n\r\n    function LoadPlists(params) {\r\n      vm.loading = true;\r\n      PlistsService\r\n        .GetPlists(params)\r\n        .then(function(plists) {\r\n          vm.Plists = plists;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function AddPlist() {\r\n      PlistsModals\r\n        .PlistForm()\r\n        .then(function() {\r\n          vm.LoadPlists();\r\n        });\r\n    }\r\n\r\n    function ViewPlist(id) {\r\n      PlistsModals\r\n        .PlistForm({\r\n          ID: id\r\n        })\r\n        .then(function() {\r\n          vm.LoadPlists();\r\n        });\r\n    }\r\n\r\n    function DeletePlist(id) {\r\n      PlistsService\r\n        .DeletePlist(id)\r\n        .then(function() {\r\n          vm.LoadPlists();\r\n        });\r\n    }\r\n\r\n  }\r\n  PlistsController.$inject = [\"PlistsService\", \"PlistsModals\"];\r\n})();\r\n;(function() {\n  'use strict';\n\n  angular\n    .module('app.plists')\n    .controller(\"PlistFormController\", PlistFormController);\n\n  /* @ngInject */\n  function PlistFormController($modalInstance, ModalParams, PlistsService) {\n    var vm = this;\n\n    vm.Plist = {\n      Participants: [],\n    };\n\n    vm.AddParticipants = AddParticipants;\n    vm.RemoveParticipant = RemoveParticipant;\n    vm.Save = Save;\n\n    activate();\n\n    function activate() {\n      if (ModalParams.ID) {\n        vm.loading = true;\n        PlistsService\n          .GetPlist(ModalParams.ID)\n          .then(function(data) {\n            vm.Plist = data;\n\n            if (vm.Plist.Participants.length === 0) {\n              vm.AddParticipants();\n            }\n\n          })\n          .finally(function() {\n            vm.loading = false;\n          });\n      } else {\n        vm.AddParticipants();\n      }\n    }\n\n    function AddParticipants() {\n      for (var i = 0; i < 5; i++) {\n        vm.Plist.Participants.push({});\n      }\n    }\n\n    function RemoveParticipant(index) {\n      vm.Plist.Participants.splice(index, 1);\n    }\n\n    function Save() {\n      vm.loading = true;\n      PlistsService\n        .SavePlist(angular.copy(vm.Plist))\n        .then(function() {\n          vm.loading = false;\n          $modalInstance.close();\n        });\n    }\n\n\n  }\r\n  PlistFormController.$inject = [\"$modalInstance\", \"ModalParams\", \"PlistsService\"];\n\n}());\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries', []);\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .controller('LotteriesController', LotteriesController);\r\n\r\n  /* @ngInject */\r\n  function LotteriesController(LotteriesService, LotteriesModals, toaster, $state) {\r\n    var vm = this;\r\n\r\n    vm.AddLottery = AddLottery;\r\n    vm.DeleteLottery = DeleteLottery;\r\n    vm.LoadLotteries = LoadLotteries;\r\n    vm.FetchPrevious = FetchPrevious;\r\n    vm.FetchNext = FetchNext;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadLotteries()\r\n        .then(function() {\r\n          vm.HasPages = LotteriesService.HasPages();\r\n        });\r\n    }\r\n\r\n    function FetchPrevious() {\r\n      if (vm.HasPages.Previous) {\r\n        LotteriesService.PreviousPage();\r\n        vm.HasPages = LotteriesService.HasPages();\r\n        vm.LoadLotteries();\r\n      }\r\n    }\r\n\r\n    function FetchNext() {\r\n      if (vm.HasPages.Next) {\r\n        LotteriesService.NextPage();\r\n        vm.HasPages = LotteriesService.HasPages();\r\n        vm.LoadLotteries();\r\n      }\r\n    }\r\n\r\n    function LoadLotteries() {\r\n      vm.loading = true;\r\n      return LotteriesService\r\n        .GetLotteries()\r\n        .then(function(data) {\r\n          vm.Lotteries = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function AddLottery() {\r\n      LotteriesModals\r\n        .LotteryInit()\r\n        .then(function(id) {\r\n          if (id) {\r\n            $state.go(\"app.lotteries.lottery\", {\r\n              ID: id\r\n            });\r\n          }\r\n        });\r\n    }\r\n\r\n    function DeleteLottery(lottery) {\r\n      LotteriesService\r\n        .DeleteLottery(lottery)\r\n        .then(function() {\r\n          vm.LoadLotteries();\r\n        });\r\n    }\r\n\r\n  }\r\n  LotteriesController.$inject = [\"LotteriesService\", \"LotteriesModals\", \"toaster\", \"$state\"];\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .controller('LotteryController', LotteryController);\r\n\r\n  /* @ngInject */\r\n  function LotteryController(LotteriesService, $stateParams, toaster) {\r\n    var vm = this;\r\n\r\n    vm.LoadLottery = LoadLottery;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadLottery();\r\n    }\r\n\r\n    function LoadLottery() {\r\n      vm.loading = true;\r\n      LotteriesService\r\n        .GetLottery($stateParams.ID)\r\n        .then(function(data) {\r\n          vm.Lottery = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n  }\r\n  LotteryController.$inject = [\"LotteriesService\", \"$stateParams\", \"toaster\"];\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .controller(\"LotteryInitController\", LotteryInitController);\r\n\r\n  /* @ngInject */\r\n  function LotteryInitController($modalInstance, ModalParams, LotteriesService,ParticipantsService) {\r\n    var vm = this;\r\n\r\n    vm.Lottery = {\r\n      Name: \"Lottery #\" + Math.floor((Math.random() * 99999) + 10000),\r\n    };\r\n\r\n    vm.LoadPLists = LoadPLists;\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadPLists();\r\n    }\r\n\r\n    function LoadPLists() {\r\n      vm.loading = true;\r\n      ParticipantsService\r\n        .GetPLists()\r\n        .then(function(data) {\r\n          vm.PLists = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function Save() {\r\n      LotteriesService\r\n        .SaveLottery(vm.Lottery)\r\n        .then(function(resp) {\r\n          $modalInstance.close(resp.id);\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n  LotteryInitController.$inject = [\"$modalInstance\", \"ModalParams\", \"LotteriesService\", \"ParticipantsService\"];\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth', [])\r\n\r\n}());\r\n;(function() {\n  'use strict';\n\n  angular\n    .module('app.auth')\n    .controller('AuthLoginController', AuthLoginController);\n\n  /* @ngInject */\n  function AuthLoginController($stateParams, $state, LoginMessages, User) {\n    var vm = this;\n\n    vm.loading = false;\n    vm.SignIn = SignIn;\n\n    activate();\n\n    function activate() {\n\n      if ($stateParams.ref) {\n        SignMessage($stateParams.ref.toUpperCase());\n      }\n    }\n\n    function SignIn() {\n\n      vm.loading = true;\n      vm.Alert = false;\n\n      User\n        .login(vm.credentials)\n        .$promise\n        .then(function(response) {\n          $state.go(\"app.lotteries.overview\");\n        }, function(rejection) {\n          SignMessage(rejection.error.toUpperCase());\n          vm.loading = false;\n        });\n    }\n\n    function SignMessage(CODE) {\n      vm.Alert = LoginMessages[CODE];\n    }\n\n  }\r\n  AuthLoginController.$inject = [\"$stateParams\", \"$state\", \"LoginMessages\", \"User\"];\n\n}());\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .run(RoutesConfig);\r\n\r\n  RoutesConfig.$inject = ['configHelper', 'routerHelper'];\r\n\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n\r\n    var _states = getStates();\r\n    routerHelper.configureStates(_states, \"/\");\r\n\r\n    configHelper.notifyConfig(\"Basic Routes\", _.map(_states, function(_state) {\r\n      return _state.state;\r\n    }));\r\n\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app',\r\n      config: {\r\n        abstract: true,\r\n        templateUrl: 'src/_common/views/layout.html',\r\n        controller: function($scope, User) {\r\n          User.getCurrent()\r\n            .$promise\r\n            .then(function(u) {\r\n              $scope.username = u.username;\r\n            });\r\n        }\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsService', SettingsService);\r\n\r\n  /* @ngInject */\r\n  function SettingsService($resource) {\r\n\r\n    var service = {\r\n      GetSettings: GetSettings,\r\n      GetSetting: GetSetting,\r\n      SaveSetting: SaveSetting,\r\n      DeleteSetting: DeleteSetting,\r\n    }\r\n\r\n    return service;\r\n\r\n    function GetSettings(params) {\r\n      return $resource(APP.Service + \"_design/models/_view/Settings\")\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return _.chain(data.rows)\r\n            .map(function(item) {\r\n              return item.value;\r\n            })\r\n            .sortBy(function(item) {\r\n              return item.DrewAt || 0;\r\n            })\r\n            .reverse()\r\n            .value();\r\n        });\r\n    }\r\n\r\n    function GetSetting(id) {\r\n      return $resource(APP.Service + id)\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function SaveSetting(Setting) {\r\n      Setting.Type = \"Setting\";\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function DeleteSetting(Setting) {\r\n\r\n      Setting._deleted = true;\r\n      Setting.DeletedAt = new Date();\r\n\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise;\r\n    }\r\n\r\n  }\r\n  SettingsService.$inject = [\"$resource\"];\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.settings',\r\n      config: {\r\n        url: '/settings',\r\n        controller: \"SettingsController\",\r\n        templateUrl: 'src/settings/overview/view.html',\r\n        data: {\r\n          permissions: {\r\n            except: ['Anonymous'],\r\n            redirectTo: \"auth.login\"\r\n          }\r\n        }\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app.plists')\n    .factory('PlistsService', PlistsService);\n\n  /* @ngInject */\n  function PlistsService($resource, Plist) {\n\n    var service = {\n      GetPlists: GetPlists,\n      GetPlist: GetPlist,\n      SavePlist: SavePlist,\n      DeletePlist: DeletePlist,\n      GetParticipants: GetParticipants,\n      GetParticipant: GetParticipant,\n      SaveParticipant: SaveParticipant,\n      DeleteParticipant: DeleteParticipant,\n    }\n\n    return service;\n\n    function GetPlists(params) {\n      var params = params || {};\n      return Plist\n        .find({\n          filter: {\n            order: params.order || \"CreatedAt DESC\",\n          },\n        })\n        .$promise\n        .then(function(data) {\n          return data;\n        });\n    }\n\n    function GetPlist(id) {\n      return Plist\n        .findById({\n          id: id\n        })\n        .$promise\n        .then(function(item) {\n          return item;\n        });\n    }\n\n    function SavePlist(plist) {\n\n      if (!plist.id) {\n        plist.CreatedAt = new Date();\n      }\n\n      plist.Participants = _.filter(plist.Participants, function(item) {\n        return (item.Name || item.Email);\n      });\n\n      return Plist\n        .updateOrCreate(plist)\n        .$promise\n        .then(function(item) {\n          return item;\n        });\n\n    }\n\n    function DeletePlist(id) {\n\n      return Plist\n        .deleteById({\n          id: id\n        })\n        .$promise\n        .then(function(item) {\n          return item;\n        });\n\n    }\n\n\n    function GetParticipants(params) {\n      return Participant\n        .find({\n          filter: {\n            include: \"participants\"\n          }\n        })\n        .$promise\n        .then(function(data) {\n          return _.sortBy(data, function(item) {\n            return item.Name;\n          });\n        });\n    }\n\n    function GetParticipant(id) {\n      return Participant\n        .findById({\n          id: id,\n          filter: {\n            include: \"participants\"\n          }\n        })\n        .$promise\n        .then(function(item) {\n          return item;\n        });\n    }\n\n    function SaveParticipant(Participant) {\n\n      if (!Participant.id) {\n        Participant.CreatedAt = new Date();\n      }\n\n      Participant.participants = _.filter(Participant.Participants, function(item) {\n        return (item.Name || item.Email);\n      });\n\n      return Participant\n        .updateOrCreate(Participant)\n        .$promise\n        .then(function(item) {\n          return item;\n        });\n\n    }\n\n    function DeleteParticipant(id) {\n\n      return Participant\n        .deleteById({\n          id: id\n        })\n        .$promise\n        .then(function(item) {\n          return item;\n        });\n\n    }\n\n  }\r\n  PlistsService.$inject = [\"$resource\", \"Plist\"];\n}());\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.plists',\r\n      config: {\r\n        url: '/plists',\r\n        controller: \"PlistsController\",\r\n        templateUrl: 'src/plists/overview/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .factory('PlistsModals', PlistsModals);\r\n\r\n  PlistsModals.$inject = ['modalHelper'];\r\n\r\n  function PlistsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"PlistForm\",\r\n        config: {\r\n          templateUrl: 'src/plists/form/view.html',\r\n          controller: \"PlistFormController\",\r\n          size: \"md\",\r\n          backdrop: 'static',\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .factory('LotteriesService', LotteriesService);\r\n\r\n  /* @ngInject */\r\n  function LotteriesService($resource) {\r\n\r\n    var service = {\r\n      _total: null,\r\n      _limit: 10,\r\n      _offset: 0,\r\n      GetLotteries: GetLotteries,\r\n      GetLottery: GetLottery,\r\n      SaveLottery: SaveLottery,\r\n      DeleteLottery: DeleteLottery,\r\n      NextPage: NextPage,\r\n      PreviousPage: PreviousPage,\r\n      HasPages: HasPages,\r\n    }\r\n\r\n    return service;\r\n\r\n    function NextPage() {\r\n      service._offset = ((service._offset / service._limit) + 1) * service._limit;\r\n    }\r\n\r\n    function PreviousPage() {\r\n      service._offset = ((service._offset / service._limit) - 1) * service._limit;\r\n    }\r\n\r\n    function HasPages() {\r\n      return {\r\n        Previous: (service._offset !== 0),\r\n        Next: (service._total - service._offset > service._limit),\r\n      }\r\n    }\r\n\r\n    function GetLotteries() {\r\n\r\n      return $resource(APP.Service + \"_design/models/_view/lotteries\")\r\n        .get({\r\n          limit: service._limit,\r\n          skip: service._offset,\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          service._total = data.total_rows;\r\n          return _.chain(data.rows)\r\n            .map(function(item) {\r\n              return item.value;\r\n            })\r\n            .sortBy(function(item) {\r\n              return item.DrewAt || 0;\r\n            })\r\n            .reverse()\r\n            .value();\r\n        });\r\n    }\r\n\r\n\r\n    function GetLottery(id) {\r\n      return $resource(APP.Service + id)\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function SaveLottery(lottery) {\r\n\r\n      lottery.Type = \"Lottery\";\r\n      lottery.DrewAt = new Date();\r\n      lottery.Participants = _.shuffle(lottery.Participants);\r\n\r\n      return $resource(APP.Service)\r\n        .save(lottery)\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function DeleteLottery(lottery) {\r\n\r\n      lottery._deleted = true;\r\n      lottery.DeletedAt = new Date();\r\n\r\n      return $resource(APP.Service)\r\n        .save(lottery)\r\n        .$promise;\r\n    }\r\n\r\n  }\r\n  LotteriesService.$inject = [\"$resource\"];\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.lotteries',\r\n      config: {\r\n        abstract: true,\r\n        template: '<ui-view/>',\r\n        data: {\r\n          permissions: {\r\n            except: ['Anonymous'],\r\n            redirectTo: \"auth.login\"\r\n          }\r\n        }\r\n      }\r\n    }, {\r\n      state: 'app.lotteries.overview',\r\n      config: {\r\n        url: '/',\r\n        controller: \"LotteriesController\",\r\n        templateUrl: 'src/lotteries/overview/view.html',\r\n      }\r\n    }, {\r\n      state: 'app.lotteries.lottery',\r\n      config: {\r\n        url: '/lottery/:ID',\r\n        controller: \"LotteryController\",\r\n        templateUrl: 'src/lotteries/lottery/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .factory('LotteriesModals', LotteriesModals);\r\n\r\n  LotteriesModals.$inject = ['modalHelper'];\r\n\r\n  function LotteriesModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"LotteryInit\",\r\n        config: {\r\n          templateUrl: 'src/lotteries/init/view.html',\r\n          controller: \"LotteryInitController\",\r\n          size: \"sm\"\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'auth',\r\n      config: {\r\n        abstract: true,\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'auth.login',\r\n      config: {\r\n        url: '/login',\r\n        params: {\r\n          ref: null\r\n        },\r\n        templateUrl: \"src/auth/login/view.html\",\r\n        controller: \"AuthLoginController\",\r\n        data: {\r\n          permissions: {\r\n            only: ['Anonymous'],\r\n            redirectTo: \"app.lotteries.overview\"\r\n          }\r\n        }\r\n      }\r\n    }, {\r\n      state: 'auth.logout',\r\n      config: {\r\n        url: '/logout',\r\n        template: \"<ui-view/>\",\r\n        controller: function(User, $state) {\r\n          User\r\n            .logout()\r\n            .$promise\r\n            .then(function() {})\r\n            .finally(function() {\r\n              localStorage.clear();\r\n              $state.go(\"auth.login\", {\r\n                ref: \"SIGNOUT\"\r\n              });\r\n            })\r\n\r\n        },\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .config(AuthInterceptorConfig)\r\n    .factory('AuthInterceptor', AuthInterceptor);\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptor($q, $injector,$cookies) {\r\n\r\n    return {\r\n      responseError: function(rejection) {\r\n        console.log(\"rejection\",rejection);\r\n        if (rejection.status === 401 && !rejection.config.IsSignIn) {\r\n        console.log(\"rejection2\",rejection);\r\n          localStorage.clear();\r\n          var $state = $injector.get('$state');\r\n          $state.go('auth.login', {\r\n            ref: \"SESSIONEND\"\r\n          });\r\n        }\r\n        return $q.reject(rejection);\r\n      }\r\n    };\r\n\r\n  }\r\n  AuthInterceptor.$inject = [\"$q\", \"$injector\", \"$cookies\"];\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptorConfig($httpProvider) {\r\n    $httpProvider.interceptors.push(\"AuthInterceptor\");\r\n  }\r\n  AuthInterceptorConfig.$inject = [\"$httpProvider\"];\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .constant('LoginMessages', {\r\n      SESSIONEND: {\r\n        Type: \"danger\",\r\n        Message: \"You were signed out\",\r\n        Details: \"Probably your session was timed out\",\r\n      },\r\n      SIGNOUT: {\r\n        Type: \"success\",\r\n        Message: \"You were signed out\",\r\n        Details: \"You may login again using the form\",\r\n      },\r\n      REGISTERED: {\r\n        Type: \"success\",\r\n        Message: \"Your account is ready, you can login now\",\r\n        Details: false,\r\n      },\r\n      AUTHERROR: {\r\n        Type: \"danger\",\r\n        Message: \"Authentication Error\",\r\n        Details: null,\r\n      },\r\n      UNAVAILABLE: {\r\n        Type: \"danger\",\r\n        Message: \"Service is not available\",\r\n        Details: \"Please try again later. If the problem insist, contact your system administrator\",\r\n      },\r\n      UNAUTHORIZED: {\r\n        Type: \"danger\",\r\n        Message: \"Name or password is incorrect\",\r\n        Details: \"Please try again\",\r\n      },\r\n    });\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular.module('app', [\r\n\r\n    'app.auth',\r\n    'app.lotteries',\r\n    'app.plists',\r\n    'app.settings',\r\n    'app._common',\r\n\r\n\r\n  ]);\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n\r\n    $rootScope.APP = APP;\r\n\r\n    $rootScope.$on('$stateChangeStart', function(evt, to, params) {\r\n\r\n      if (to.redirectTo) {\r\n        evt.preventDefault();\r\n        $state.go(to.redirectTo, params);\r\n      }\r\n      \r\n    });\r\n\r\n\r\n  }\r\n  appRun.$inject = [\"$rootScope\", \"$state\", \"$stateParams\"];\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  window.APP = {\r\n    Project: \"PicoLotteries\",\r\n    Version: \"0.2.2\",\r\n  };\r\n\r\n  angular.element(document).ready(function() {\r\n    angular.bootstrap(document, [\"app\"]);\r\n  });\r\n\r\n})();\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig(configHelperProvider, $locationProvider) {\r\n    $locationProvider.html5Mode(true);\r\n\r\n    configHelperProvider.$get().notifyConfig(\"Location HTML5\", true);\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig($httpProvider) {\r\n    $httpProvider.defaults.withCredentials = true;\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .config(AnalyticsConfig);\r\n\r\n  /* @ngInject */\r\n  function AnalyticsConfig(configHelperProvider, AnalyticsProvider) {\r\n\r\n    var GoogleTrackCode = \"UA-4623228-21\";\r\n\r\n    AnalyticsProvider.setAccount(GoogleTrackCode);\r\n\r\n    AnalyticsProvider.trackUrlParams(true);\r\n    AnalyticsProvider.ignoreFirstPageLoad(true);\r\n    AnalyticsProvider.setPageEvent('$stateChangeSuccess');\r\n\r\n    configHelperProvider.$get().notifyConfig(\"Google Analytics\", GoogleTrackCode);\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings', []);\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .controller('SettingsController', SettingsController);\r\n\r\n  /* @ngInject */\r\n  function SettingsController(SettingsService, toaster) {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n    }\r\n\r\n\r\n  }\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists', []);\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .controller('PlistsController', PlistsController);\r\n\r\n  /* @ngInject */\r\n  function PlistsController(PlistsService, PlistsModals) {\r\n\r\n    var vm = this;\r\n\r\n    vm.AddPlist = AddPlist;\r\n    vm.ViewPlist = ViewPlist;\r\n    vm.DeletePlist = DeletePlist;\r\n    vm.LoadPlists = LoadPlists;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadPlists();\r\n    }\r\n\r\n    function LoadPlists(params) {\r\n      vm.loading = true;\r\n      PlistsService\r\n        .GetPlists(params)\r\n        .then(function(plists) {\r\n          vm.Plists = plists;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function AddPlist() {\r\n      PlistsModals\r\n        .PlistForm()\r\n        .then(function() {\r\n          vm.LoadPlists();\r\n        });\r\n    }\r\n\r\n    function ViewPlist(id) {\r\n      PlistsModals\r\n        .PlistForm({\r\n          ID: id\r\n        })\r\n        .then(function() {\r\n          vm.LoadPlists();\r\n        });\r\n    }\r\n\r\n    function DeletePlist(id) {\r\n      PlistsService\r\n        .DeletePlist(id)\r\n        .then(function() {\r\n          vm.LoadPlists();\r\n        });\r\n    }\r\n\r\n  }\r\n})();\r\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.plists')\n    .controller(\"PlistFormController\", PlistFormController);\n\n  /* @ngInject */\n  function PlistFormController($modalInstance, ModalParams, PlistsService) {\n    var vm = this;\n\n    vm.Plist = {\n      Participants: [],\n    };\n\n    vm.AddParticipants = AddParticipants;\n    vm.RemoveParticipant = RemoveParticipant;\n    vm.Save = Save;\n\n    activate();\n\n    function activate() {\n      if (ModalParams.ID) {\n        vm.loading = true;\n        PlistsService\n          .GetPlist(ModalParams.ID)\n          .then(function(data) {\n            vm.Plist = data;\n\n            if (vm.Plist.Participants.length === 0) {\n              vm.AddParticipants();\n            }\n\n          })\n          .finally(function() {\n            vm.loading = false;\n          });\n      } else {\n        vm.AddParticipants();\n      }\n    }\n\n    function AddParticipants() {\n      for (var i = 0; i < 5; i++) {\n        vm.Plist.Participants.push({});\n      }\n    }\n\n    function RemoveParticipant(index) {\n      vm.Plist.Participants.splice(index, 1);\n    }\n\n    function Save() {\n      vm.loading = true;\n      PlistsService\n        .SavePlist(angular.copy(vm.Plist))\n        .then(function() {\n          vm.loading = false;\n          $modalInstance.close();\n        });\n    }\n\n\n  }\n\n}());\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries', []);\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .controller('LotteriesController', LotteriesController);\r\n\r\n  /* @ngInject */\r\n  function LotteriesController(LotteriesService, LotteriesModals, toaster, $state) {\r\n    var vm = this;\r\n\r\n    vm.AddLottery = AddLottery;\r\n    vm.DeleteLottery = DeleteLottery;\r\n    vm.LoadLotteries = LoadLotteries;\r\n    vm.FetchPrevious = FetchPrevious;\r\n    vm.FetchNext = FetchNext;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadLotteries()\r\n        .then(function() {\r\n          vm.HasPages = LotteriesService.HasPages();\r\n        });\r\n    }\r\n\r\n    function FetchPrevious() {\r\n      if (vm.HasPages.Previous) {\r\n        LotteriesService.PreviousPage();\r\n        vm.HasPages = LotteriesService.HasPages();\r\n        vm.LoadLotteries();\r\n      }\r\n    }\r\n\r\n    function FetchNext() {\r\n      if (vm.HasPages.Next) {\r\n        LotteriesService.NextPage();\r\n        vm.HasPages = LotteriesService.HasPages();\r\n        vm.LoadLotteries();\r\n      }\r\n    }\r\n\r\n    function LoadLotteries() {\r\n      vm.loading = true;\r\n      return LotteriesService\r\n        .GetLotteries()\r\n        .then(function(data) {\r\n          vm.Lotteries = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function AddLottery() {\r\n      LotteriesModals\r\n        .LotteryInit()\r\n        .then(function(id) {\r\n          if (id) {\r\n            $state.go(\"app.lotteries.lottery\", {\r\n              ID: id\r\n            });\r\n          }\r\n        });\r\n    }\r\n\r\n    function DeleteLottery(lottery) {\r\n      LotteriesService\r\n        .DeleteLottery(lottery)\r\n        .then(function() {\r\n          vm.LoadLotteries();\r\n        });\r\n    }\r\n\r\n  }\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .controller('LotteryController', LotteryController);\r\n\r\n  /* @ngInject */\r\n  function LotteryController(LotteriesService, $stateParams, toaster) {\r\n    var vm = this;\r\n\r\n    vm.LoadLottery = LoadLottery;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadLottery();\r\n    }\r\n\r\n    function LoadLottery() {\r\n      vm.loading = true;\r\n      LotteriesService\r\n        .GetLottery($stateParams.ID)\r\n        .then(function(data) {\r\n          vm.Lottery = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n  }\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .controller(\"LotteryInitController\", LotteryInitController);\r\n\r\n  /* @ngInject */\r\n  function LotteryInitController($modalInstance, ModalParams, LotteriesService,ParticipantsService) {\r\n    var vm = this;\r\n\r\n    vm.Lottery = {\r\n      Name: \"Lottery #\" + Math.floor((Math.random() * 99999) + 10000),\r\n    };\r\n\r\n    vm.LoadPLists = LoadPLists;\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadPLists();\r\n    }\r\n\r\n    function LoadPLists() {\r\n      vm.loading = true;\r\n      ParticipantsService\r\n        .GetPLists()\r\n        .then(function(data) {\r\n          vm.PLists = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function Save() {\r\n      LotteriesService\r\n        .SaveLottery(vm.Lottery)\r\n        .then(function(resp) {\r\n          $modalInstance.close(resp.id);\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth', [])\r\n\r\n}());\r\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.auth')\n    .controller('AuthLoginController', AuthLoginController);\n\n  /* @ngInject */\n  function AuthLoginController($stateParams, $state, LoginMessages, User) {\n    var vm = this;\n\n    vm.loading = false;\n    vm.SignIn = SignIn;\n\n    activate();\n\n    function activate() {\n\n      if ($stateParams.ref) {\n        SignMessage($stateParams.ref.toUpperCase());\n      }\n    }\n\n    function SignIn() {\n\n      vm.loading = true;\n      vm.Alert = false;\n\n      User\n        .login(vm.credentials)\n        .$promise\n        .then(function(response) {\n          $state.go(\"app.lotteries.overview\");\n        }, function(rejection) {\n          SignMessage(rejection.error.toUpperCase());\n          vm.loading = false;\n        });\n    }\n\n    function SignMessage(CODE) {\n      vm.Alert = LoginMessages[CODE];\n    }\n\n  }\n\n}());\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .run(RoutesConfig);\r\n\r\n  RoutesConfig.$inject = ['configHelper', 'routerHelper'];\r\n\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n\r\n    var _states = getStates();\r\n    routerHelper.configureStates(_states, \"/\");\r\n\r\n    configHelper.notifyConfig(\"Basic Routes\", _.map(_states, function(_state) {\r\n      return _state.state;\r\n    }));\r\n\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app',\r\n      config: {\r\n        abstract: true,\r\n        templateUrl: 'src/_common/views/layout.html',\r\n        controller: function($scope, User) {\r\n          User.getCurrent()\r\n            .$promise\r\n            .then(function(u) {\r\n              $scope.username = u.username;\r\n            });\r\n        }\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsService', SettingsService);\r\n\r\n  /* @ngInject */\r\n  function SettingsService($resource) {\r\n\r\n    var service = {\r\n      GetSettings: GetSettings,\r\n      GetSetting: GetSetting,\r\n      SaveSetting: SaveSetting,\r\n      DeleteSetting: DeleteSetting,\r\n    }\r\n\r\n    return service;\r\n\r\n    function GetSettings(params) {\r\n      return $resource(APP.Service + \"_design/models/_view/Settings\")\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return _.chain(data.rows)\r\n            .map(function(item) {\r\n              return item.value;\r\n            })\r\n            .sortBy(function(item) {\r\n              return item.DrewAt || 0;\r\n            })\r\n            .reverse()\r\n            .value();\r\n        });\r\n    }\r\n\r\n    function GetSetting(id) {\r\n      return $resource(APP.Service + id)\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function SaveSetting(Setting) {\r\n      Setting.Type = \"Setting\";\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function DeleteSetting(Setting) {\r\n\r\n      Setting._deleted = true;\r\n      Setting.DeletedAt = new Date();\r\n\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise;\r\n    }\r\n\r\n  }\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.settings',\r\n      config: {\r\n        url: '/settings',\r\n        controller: \"SettingsController\",\r\n        templateUrl: 'src/settings/overview/view.html',\r\n        data: {\r\n          permissions: {\r\n            except: ['Anonymous'],\r\n            redirectTo: \"auth.login\"\r\n          }\r\n        }\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app.plists')\n    .factory('PlistsService', PlistsService);\n\n  /* @ngInject */\n  function PlistsService($resource, Plist) {\n\n    var service = {\n      GetPlists: GetPlists,\n      GetPlist: GetPlist,\n      SavePlist: SavePlist,\n      DeletePlist: DeletePlist,\n      GetParticipants: GetParticipants,\n      GetParticipant: GetParticipant,\n      SaveParticipant: SaveParticipant,\n      DeleteParticipant: DeleteParticipant,\n    }\n\n    return service;\n\n    function GetPlists(params) {\n      var params = params || {};\n      return Plist\n        .find({\n          filter: {\n            order: params.order || \"CreatedAt DESC\",\n          },\n        })\n        .$promise\n        .then(function(data) {\n          return data;\n        });\n    }\n\n    function GetPlist(id) {\n      return Plist\n        .findById({\n          id: id\n        })\n        .$promise\n        .then(function(item) {\n          return item;\n        });\n    }\n\n    function SavePlist(plist) {\n\n      if (!plist.id) {\n        plist.CreatedAt = new Date();\n      }\n\n      plist.Participants = _.filter(plist.Participants, function(item) {\n        return (item.Name || item.Email);\n      });\n\n      return Plist\n        .updateOrCreate(plist)\n        .$promise\n        .then(function(item) {\n          return item;\n        });\n\n    }\n\n    function DeletePlist(id) {\n\n      return Plist\n        .deleteById({\n          id: id\n        })\n        .$promise\n        .then(function(item) {\n          return item;\n        });\n\n    }\n\n\n    function GetParticipants(params) {\n      return Participant\n        .find({\n          filter: {\n            include: \"participants\"\n          }\n        })\n        .$promise\n        .then(function(data) {\n          return _.sortBy(data, function(item) {\n            return item.Name;\n          });\n        });\n    }\n\n    function GetParticipant(id) {\n      return Participant\n        .findById({\n          id: id,\n          filter: {\n            include: \"participants\"\n          }\n        })\n        .$promise\n        .then(function(item) {\n          return item;\n        });\n    }\n\n    function SaveParticipant(Participant) {\n\n      if (!Participant.id) {\n        Participant.CreatedAt = new Date();\n      }\n\n      Participant.participants = _.filter(Participant.Participants, function(item) {\n        return (item.Name || item.Email);\n      });\n\n      return Participant\n        .updateOrCreate(Participant)\n        .$promise\n        .then(function(item) {\n          return item;\n        });\n\n    }\n\n    function DeleteParticipant(id) {\n\n      return Participant\n        .deleteById({\n          id: id\n        })\n        .$promise\n        .then(function(item) {\n          return item;\n        });\n\n    }\n\n  }\n}());\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.plists',\r\n      config: {\r\n        url: '/plists',\r\n        controller: \"PlistsController\",\r\n        templateUrl: 'src/plists/overview/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .factory('PlistsModals', PlistsModals);\r\n\r\n  PlistsModals.$inject = ['modalHelper'];\r\n\r\n  function PlistsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"PlistForm\",\r\n        config: {\r\n          templateUrl: 'src/plists/form/view.html',\r\n          controller: \"PlistFormController\",\r\n          size: \"md\",\r\n          backdrop: 'static',\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .factory('LotteriesService', LotteriesService);\r\n\r\n  /* @ngInject */\r\n  function LotteriesService($resource) {\r\n\r\n    var service = {\r\n      _total: null,\r\n      _limit: 10,\r\n      _offset: 0,\r\n      GetLotteries: GetLotteries,\r\n      GetLottery: GetLottery,\r\n      SaveLottery: SaveLottery,\r\n      DeleteLottery: DeleteLottery,\r\n      NextPage: NextPage,\r\n      PreviousPage: PreviousPage,\r\n      HasPages: HasPages,\r\n    }\r\n\r\n    return service;\r\n\r\n    function NextPage() {\r\n      service._offset = ((service._offset / service._limit) + 1) * service._limit;\r\n    }\r\n\r\n    function PreviousPage() {\r\n      service._offset = ((service._offset / service._limit) - 1) * service._limit;\r\n    }\r\n\r\n    function HasPages() {\r\n      return {\r\n        Previous: (service._offset !== 0),\r\n        Next: (service._total - service._offset > service._limit),\r\n      }\r\n    }\r\n\r\n    function GetLotteries() {\r\n\r\n      return $resource(APP.Service + \"_design/models/_view/lotteries\")\r\n        .get({\r\n          limit: service._limit,\r\n          skip: service._offset,\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          service._total = data.total_rows;\r\n          return _.chain(data.rows)\r\n            .map(function(item) {\r\n              return item.value;\r\n            })\r\n            .sortBy(function(item) {\r\n              return item.DrewAt || 0;\r\n            })\r\n            .reverse()\r\n            .value();\r\n        });\r\n    }\r\n\r\n\r\n    function GetLottery(id) {\r\n      return $resource(APP.Service + id)\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function SaveLottery(lottery) {\r\n\r\n      lottery.Type = \"Lottery\";\r\n      lottery.DrewAt = new Date();\r\n      lottery.Participants = _.shuffle(lottery.Participants);\r\n\r\n      return $resource(APP.Service)\r\n        .save(lottery)\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function DeleteLottery(lottery) {\r\n\r\n      lottery._deleted = true;\r\n      lottery.DeletedAt = new Date();\r\n\r\n      return $resource(APP.Service)\r\n        .save(lottery)\r\n        .$promise;\r\n    }\r\n\r\n  }\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.lotteries',\r\n      config: {\r\n        abstract: true,\r\n        template: '<ui-view/>',\r\n        data: {\r\n          permissions: {\r\n            except: ['Anonymous'],\r\n            redirectTo: \"auth.login\"\r\n          }\r\n        }\r\n      }\r\n    }, {\r\n      state: 'app.lotteries.overview',\r\n      config: {\r\n        url: '/',\r\n        controller: \"LotteriesController\",\r\n        templateUrl: 'src/lotteries/overview/view.html',\r\n      }\r\n    }, {\r\n      state: 'app.lotteries.lottery',\r\n      config: {\r\n        url: '/lottery/:ID',\r\n        controller: \"LotteryController\",\r\n        templateUrl: 'src/lotteries/lottery/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .factory('LotteriesModals', LotteriesModals);\r\n\r\n  LotteriesModals.$inject = ['modalHelper'];\r\n\r\n  function LotteriesModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"LotteryInit\",\r\n        config: {\r\n          templateUrl: 'src/lotteries/init/view.html',\r\n          controller: \"LotteryInitController\",\r\n          size: \"sm\"\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'auth',\r\n      config: {\r\n        abstract: true,\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'auth.login',\r\n      config: {\r\n        url: '/login',\r\n        params: {\r\n          ref: null\r\n        },\r\n        templateUrl: \"src/auth/login/view.html\",\r\n        controller: \"AuthLoginController\",\r\n        data: {\r\n          permissions: {\r\n            only: ['Anonymous'],\r\n            redirectTo: \"app.lotteries.overview\"\r\n          }\r\n        }\r\n      }\r\n    }, {\r\n      state: 'auth.logout',\r\n      config: {\r\n        url: '/logout',\r\n        template: \"<ui-view/>\",\r\n        controller: function(User, $state) {\r\n          User\r\n            .logout()\r\n            .$promise\r\n            .then(function() {})\r\n            .finally(function() {\r\n              localStorage.clear();\r\n              $state.go(\"auth.login\", {\r\n                ref: \"SIGNOUT\"\r\n              });\r\n            })\r\n\r\n        },\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .config(AuthInterceptorConfig)\r\n    .factory('AuthInterceptor', AuthInterceptor);\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptor($q, $injector,$cookies) {\r\n\r\n    return {\r\n      responseError: function(rejection) {\r\n        console.log(\"rejection\",rejection);\r\n        if (rejection.status === 401 && !rejection.config.IsSignIn) {\r\n        console.log(\"rejection2\",rejection);\r\n          localStorage.clear();\r\n          var $state = $injector.get('$state');\r\n          $state.go('auth.login', {\r\n            ref: \"SESSIONEND\"\r\n          });\r\n        }\r\n        return $q.reject(rejection);\r\n      }\r\n    };\r\n\r\n  }\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptorConfig($httpProvider) {\r\n    $httpProvider.interceptors.push(\"AuthInterceptor\");\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .constant('LoginMessages', {\r\n      SESSIONEND: {\r\n        Type: \"danger\",\r\n        Message: \"You were signed out\",\r\n        Details: \"Probably your session was timed out\",\r\n      },\r\n      SIGNOUT: {\r\n        Type: \"success\",\r\n        Message: \"You were signed out\",\r\n        Details: \"You may login again using the form\",\r\n      },\r\n      REGISTERED: {\r\n        Type: \"success\",\r\n        Message: \"Your account is ready, you can login now\",\r\n        Details: false,\r\n      },\r\n      AUTHERROR: {\r\n        Type: \"danger\",\r\n        Message: \"Authentication Error\",\r\n        Details: null,\r\n      },\r\n      UNAVAILABLE: {\r\n        Type: \"danger\",\r\n        Message: \"Service is not available\",\r\n        Details: \"Please try again later. If the problem insist, contact your system administrator\",\r\n      },\r\n      UNAUTHORIZED: {\r\n        Type: \"danger\",\r\n        Message: \"Name or password is incorrect\",\r\n        Details: \"Please try again\",\r\n      },\r\n    });\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular.module('app', [\r\n\r\n    'app.auth',\r\n    'app.lotteries',\r\n    'app.plists',\r\n    'app.settings',\r\n    'app._common',\r\n\r\n\r\n  ]);\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n\r\n    $rootScope.APP = APP;\r\n\r\n    $rootScope.$on('$stateChangeStart', function(evt, to, params) {\r\n\r\n      if (to.redirectTo) {\r\n        evt.preventDefault();\r\n        $state.go(to.redirectTo, params);\r\n      }\r\n      \r\n    });\r\n\r\n\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  window.APP = {\r\n    Project: \"PicoLotteries\",\r\n    Version: \"0.2.2\",\r\n  };\r\n\r\n  angular.element(document).ready(function() {\r\n    angular.bootstrap(document, [\"app\"]);\r\n  });\r\n\r\n})();\r\n"],"sourceRoot":"/source/"}